<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>maxzhao</title>
  
  <subtitle>不要害怕Exception和Error</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://github.com/maxzhao-it/blog/"/>
  <updated>2023-11-17T10:53:00.420Z</updated>
  <id>https://github.com/maxzhao-it/blog/</id>
  
  <author>
    <name>赵联胜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PVE配置核显集显</title>
    <link href="https://github.com/maxzhao-it/blog/post/fecbe378/"/>
    <id>https://github.com/maxzhao-it/blog/post/fecbe378/</id>
    <published>2023-11-16T10:55:47.856Z</published>
    <updated>2023-11-17T10:53:00.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="显卡声卡"><a href="#显卡声卡" class="headerlink" title="显卡声卡"></a>显卡声卡</h1><h2 id="禁用显卡"><a href="#禁用显卡" class="headerlink" title="禁用显卡"></a>禁用显卡</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/modprobe.d/blacklist.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 独显</span><br><span class="line">blacklist nouveau</span><br><span class="line">blacklist nvidia</span><br><span class="line">blacklist nvidiafb</span><br><span class="line"></span><br><span class="line"># 核显</span><br><span class="line">blacklist snd_hda_intel</span><br><span class="line">blacklist snd_hda_codec_hdmi</span><br><span class="line">blacklist i915</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对应的虚拟机添加 硬件-添加-PCI设备-Raw Device</p><p>选择对应的选卡，设置主GPU，显示设置为 <code>无</code></p><h2 id="查询显卡和声卡"><a href="#查询显卡和声卡" class="headerlink" title="查询显卡和声卡"></a>查询显卡和声卡</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lspci -nn |grep VGA </span><br><span class="line">lspci -nn |grep Aud</span><br></pre></td></tr></table></figure><p>最后的 8086:7ad0 是ID</p><p>加入直通</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/modprobe.d/vfio.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options vfio-pci ids=8086:7ad0,10de:10f1,10de:1c03</span><br></pre></td></tr></table></figure><p>更新内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update-initramfs -k all -u</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>重启后查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod |grep vifo</span><br></pre></td></tr></table></figure><h2 id="配置核显输出"><a href="#配置核显输出" class="headerlink" title="配置核显输出"></a>配置核显输出</h2><p>web界面配置</p><p>对应的虚拟机添加 硬件-添加-PCI设备-Raw Device</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/fecbe378/">https://github.com/maxzhao-it/blog/post/fecbe378/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;显卡声卡&quot;&gt;&lt;a href=&quot;#显卡声卡&quot; class=&quot;headerlink&quot; title=&quot;显卡声卡&quot;&gt;&lt;/a&gt;显卡声卡&lt;/h1&gt;&lt;h2 id=&quot;禁用显卡&quot;&gt;&lt;a href=&quot;#禁用显卡&quot; class=&quot;headerlink&quot; title=&quot;禁用显卡&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
  </entry>
  
  <entry>
    <title>PVE错误集合</title>
    <link href="https://github.com/maxzhao-it/blog/post/86a90e71/"/>
    <id>https://github.com/maxzhao-it/blog/post/86a90e71/</id>
    <published>2023-11-16T10:55:47.856Z</published>
    <updated>2023-11-17T10:53:00.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无法关闭虚拟机"><a href="#无法关闭虚拟机" class="headerlink" title="无法关闭虚拟机"></a>无法关闭虚拟机</h2><p>qm stop 101  # 编号</p><p>TASK ERROR: can’t lock file ‘&#x2F;var&#x2F;lock&#x2F;qemu-server&#x2F;lock-101.conf’ - received interrupt</p><p>rm &#x2F;var&#x2F;lock&#x2F;qemu-server&#x2F;lock-101.conf</p><h2 id="开机进入-shell"><a href="#开机进入-shell" class="headerlink" title="开机进入 shell"></a>开机进入 shell</h2><p>执行 reset</p><p>系统光盘放在引导的第一位</p><h2 id="swtpm-setup-Not-overwriting-existing-state-file"><a href="#swtpm-setup-Not-overwriting-existing-state-file" class="headerlink" title="swtpm_setup: Not overwriting existing state file."></a>swtpm_setup: Not overwriting existing state file.</h2><p>kvm: -device ide-cd,bus&#x3D;ide.0,unit&#x3D;1,drive&#x3D;drive-ide1,id&#x3D;ide1,bootindex&#x3D;102: Can’t create IDE unit 1, bus supports only 1 units<br>stopping swtpm instance (pid 6199) due to QEMU startup error<br>TASK ERROR: start failed: QEMU exited with code 1</p><p>使用机器类型q35时，只能使用ide0和ide2</p><p>ide0   &#x3D;  ventoy-1.0.96-livecd.iso<br>ide2   &#x3D;  zh-cn_windows_11_business_editions_version_22h2_updated_feb_2023_x64_dvd_632649a2.iso</p><h2 id="安装无法识别硬盘（scsi-无法识别）"><a href="#安装无法识别硬盘（scsi-无法识别）" class="headerlink" title="安装无法识别硬盘（scsi 无法识别）"></a>安装无法识别硬盘（scsi 无法识别）</h2><p><a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/</a></p><p>下载驱动 virtio-win-0.1.229.iso</p><p>挂载iso后，安装时加载驱动  vioscsi\w11\amd64</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/86a90e71/">https://github.com/maxzhao-it/blog/post/86a90e71/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;无法关闭虚拟机&quot;&gt;&lt;a href=&quot;#无法关闭虚拟机&quot; class=&quot;headerlink&quot; title=&quot;无法关闭虚拟机&quot;&gt;&lt;/a&gt;无法关闭虚拟机&lt;/h2&gt;&lt;p&gt;qm stop 101  # 编号&lt;/p&gt;
&lt;p&gt;TASK ERROR: can’t lock fi
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
  </entry>
  
  <entry>
    <title>Python操作文件</title>
    <link href="https://github.com/maxzhao-it/blog/post/cd61337e/"/>
    <id>https://github.com/maxzhao-it/blog/post/cd61337e/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-21T03:49:43.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作文件"><a href="#操作文件" class="headerlink" title="操作文件"></a>操作文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="built_in">dir</span> = <span class="string">&#x27;/data&#x27;</span></span><br><span class="line">file = <span class="string">&#x27;/data/1.txt&#x27;</span></span><br><span class="line"><span class="comment"># 创建单个目录</span></span><br><span class="line">os.mkdir(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 创建多层目录</span></span><br><span class="line">os.makedirs(<span class="built_in">dir</span> + <span class="string">&#x27;/123&#x27;</span>)</span><br><span class="line"><span class="comment"># 复制文件</span></span><br><span class="line">shutil.copyfile(<span class="string">&#x27;old&#x27;</span>, <span class="string">&#x27;new&#x27;</span>)</span><br><span class="line"><span class="comment"># 复制文件夹</span></span><br><span class="line">shutil.copytree(<span class="string">&#x27;olddir&#x27;</span>, <span class="string">&#x27;newdir&#x27;</span>)</span><br><span class="line"><span class="comment"># 重命名文件或目录</span></span><br><span class="line">os.rename(<span class="string">&#x27;odl&#x27;</span>, <span class="string">&#x27;new&#x27;</span>)</span><br><span class="line"><span class="comment"># 移动文件或目录</span></span><br><span class="line">shutil.move(<span class="string">&#x27;old&#x27;</span>, <span class="string">&#x27;new&#x27;</span>)</span><br><span class="line"><span class="comment"># 删除空目录</span></span><br><span class="line">os.rmdir(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 删除空目录</span></span><br><span class="line">os.removedirs(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 获取路径下的所有文件</span></span><br><span class="line">os.listdir(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line">os.remove(file)</span><br><span class="line"><span class="comment"># 判断是否存在</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="built_in">dir</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 判断是否文件</span></span><br><span class="line"><span class="keyword">if</span> os.path.isfile(file):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 判断是否目录</span></span><br><span class="line"><span class="keyword">if</span> os.path.isdir(<span class="built_in">dir</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 判断是否绝对路径</span></span><br><span class="line"><span class="keyword">if</span> os.path.isabs(<span class="built_in">dir</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 获取文件属性</span></span><br><span class="line">os.stat(file)</span><br><span class="line"><span class="comment"># 文件大小</span></span><br><span class="line">os.stat(file).st_size</span><br><span class="line">os.path.getsize(file)</span><br><span class="line"><span class="comment"># 获取文件名</span></span><br><span class="line">os.path.basename(filePath)</span><br><span class="line"><span class="comment"># 获取路径</span></span><br><span class="line">os.path.dirname(filePath)</span><br><span class="line"><span class="comment"># 获取绝对路径</span></span><br><span class="line">os.path.abspath(file)</span><br><span class="line"><span class="comment"># 获取文件的创建时间</span></span><br><span class="line">fromtimestamp = datetime.fromtimestamp(<span class="built_in">int</span>(os.path.getctime(filePath))).date()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(fromtimestamp))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件后缀</span></span><br><span class="line">basename = os.path.basename(path) <span class="comment"># 获取文件名</span></span><br><span class="line">extension = os.path.splitext(basename)[<span class="number">1</span>] <span class="comment"># 获取文件后缀</span></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line"><span class="built_in">sorted</span>(os.listdir(path))</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作文件&quot;&gt;&lt;a href=&quot;#操作文件&quot; class=&quot;headerlink&quot; title=&quot;操作文件&quot;&gt;&lt;/a&gt;操作文件&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python操作视频和音频</title>
    <link href="https://github.com/maxzhao-it/blog/post/3756efb0/"/>
    <id>https://github.com/maxzhao-it/blog/post/3756efb0/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-21T03:49:43.676Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install moviepy -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install pandas -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip3 install pydub -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> moviepy.editor <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义最大允许的线程数量</span></span><br><span class="line">max_threads = <span class="number">5</span></span><br><span class="line"><span class="comment"># 创建 Semaphore 对象</span></span><br><span class="line">semaphore = threading.Semaphore(max_threads)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">asyncConcat</span>(<span class="params">startPath, endPath, middlePath, middleAudioPath, outputPath, semaphore</span>):</span><br><span class="line">    <span class="keyword">with</span> semaphore:</span><br><span class="line">        concat(startPath, endPath, middlePath, middleAudioPath, outputPath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">concat</span>(<span class="params">startPath, endPath, middlePath, middleAudioPath, outputPath</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        start = VideoFileClip(startPath)</span><br><span class="line">        end = VideoFileClip(endPath)</span><br><span class="line">        middleVideo = VideoFileClip(middlePath)</span><br><span class="line">        middleAudio = AudioFileClip(middleAudioPath)</span><br><span class="line">        <span class="comment"># 正文持续时间</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;持续时间=&#x27;</span>, middleVideo.duration)</span><br><span class="line">        <span class="comment"># 音频长度剪切</span></span><br><span class="line">        middleAudio = middleAudio.set_duration(middleVideo.duration)</span><br><span class="line">        <span class="comment"># 替换音频</span></span><br><span class="line">        middleVideo = middleVideo.set_audio(middleAudio)</span><br><span class="line">        <span class="comment"># 分辨率</span></span><br><span class="line">        resolution = middleVideo.size</span><br><span class="line">        width, height = resolution</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;分辨率=&#x27;</span>, resolution)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;分辨率：宽=&#x27;</span>, width, <span class="string">&#x27;高：&#x27;</span>, height)</span><br><span class="line">        <span class="comment"># 等比例放大或缩小</span></span><br><span class="line">        start = start.resize(resolution)</span><br><span class="line">        end = end.resize(resolution)</span><br><span class="line">        <span class="comment"># 上下</span></span><br><span class="line">        <span class="comment"># resultClip = clips_array([[start], [middle], [end]])</span></span><br><span class="line">        <span class="comment"># 左右</span></span><br><span class="line">        <span class="comment"># resultClip = clips_array([[start, middle, end]])</span></span><br><span class="line">        <span class="comment"># 前后</span></span><br><span class="line">        resultClip = concatenate_videoclips([start, middleVideo, end])</span><br><span class="line">        startTime = time.time()</span><br><span class="line">        basename = os.path.basename(middlePath)</span><br><span class="line">        basename = basename.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-已剪辑.&#x27;</span>)</span><br><span class="line">        resultClip.write_videofile(outputPath + basename, threads=<span class="number">50</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;剪辑使用时间：&#x27;</span>, time.time() - startTime)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;计算视频失败：&#x27;</span>, e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    startPath = <span class="string">&quot;D:\\00-自媒体计划\\AI-start.mp4&quot;</span></span><br><span class="line">    endPath = <span class="string">&quot;D:\\00-自媒体计划\\AI-end.mp4&quot;</span></span><br><span class="line">    middleDir = <span class="string">&quot;f:\\Videos\\4K Tokkit\\\dbxbqm22\\&quot;</span></span><br><span class="line">    middlePath = <span class="string">&quot;f:\\Videos\\4K Tokkit\\dbxbqm22\\7257911883674668289.mp4&quot;</span></span><br><span class="line">    middleAudioPath = <span class="string">&quot;D:\\00-自媒体计划\\AI-背景音乐.MP3&quot;</span></span><br><span class="line">    outputPath = <span class="string">&quot;f:\\Videos\\4K Tokkit\\test1\\&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> outputPath.endswith(<span class="string">&#x27;\\&#x27;</span>):</span><br><span class="line">        outputPath = outputPath + <span class="string">&#x27;\\&#x27;</span></span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    fileCount = <span class="number">0</span></span><br><span class="line">    startTime = time.time()</span><br><span class="line">    files = os.listdir(middleDir)</span><br><span class="line">    <span class="comment"># 创建线程</span></span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        basename = os.path.basename(file)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;.mp4&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> basename:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;已剪辑&#x27;</span> <span class="keyword">in</span> basename:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(outputPath + basename.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-已剪辑.&#x27;</span>)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;视频已剪辑=&#x27;</span>, middleDir + basename)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;待剪辑视频=&#x27;</span>, middleDir + basename)</span><br><span class="line">        fileCount = fileCount + <span class="number">1</span></span><br><span class="line">        <span class="comment"># concat(startPath, endPath, middleDir + basename, middleAudioPath, outputPath)</span></span><br><span class="line">        thread = threading.Thread(target=asyncConcat, args=(</span><br><span class="line">            startPath, endPath, middleDir + basename, middleAudioPath, outputPath, semaphore))</span><br><span class="line">        threads.append(thread)</span><br><span class="line">        thread.start()</span><br><span class="line">    <span class="comment"># 等待所有线程执行结束</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.join()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;共处理视频个数：&#x27;</span>, fileCount, <span class="string">&#x27; 耗时：&#x27;</span>, time.time() - startTime)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python环境变量</title>
    <link href="https://github.com/maxzhao-it/blog/post/9c485ce3/"/>
    <id>https://github.com/maxzhao-it/blog/post/9c485ce3/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-21T03:49:43.701Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-dotenv -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"></span><br><span class="line">load_dotenv()</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PVE8配置国内源</title>
    <link href="https://github.com/maxzhao-it/blog/post/1226ea39/"/>
    <id>https://github.com/maxzhao-it/blog/post/1226ea39/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-17T10:53:00.421Z</updated>
    
    <content type="html"><![CDATA[<p>mv &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-enterprise.list &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-enterprise.list-bak</p><p>Proxmox软件源更换</p><p>echo “deb <a href="https://mirrors.ustc.edu.cn/proxmox/debian/pve">https://mirrors.ustc.edu.cn/proxmox/debian/pve</a> bookworm pve-no-subscription” &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-no-subscription.list<br>apt update &amp;&amp; apt dist-upgrade     #更新软件，可不执行</p><p>Debian系统源更换</p><p>sed -i.bak “s#<a href="http://ftp.debian.org/#https://repo.huaweicloud.com#g&quot;">http://ftp.debian.org#https://repo.huaweicloud.com#g&quot;</a> &#x2F;etc&#x2F;apt&#x2F;sources.list     #华为Debian源<br>sed -i “s#<a href="http://security.debian.org/#https://repo.huaweicloud.com/debian-security#g&quot;">http://security.debian.org#https://repo.huaweicloud.com/debian-security#g&quot;</a> &#x2F;etc&#x2F;apt&#x2F;sources.list     #华为Debian源<br>apt update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  –fix-missing</p><p>LXC仓库源更换</p><p>sed -i.bak “s#<a href="http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g&quot;">http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g&quot;</a> &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;PVE&#x2F;APLInfo.pm<br>wget -O &#x2F;var&#x2F;lib&#x2F;pve-manager&#x2F;apl-info&#x2F;mirrors.ustc.edu.cn <a href="https://mirrors.ustc.edu.cn/proxmox/images/aplinfo-pve-7.dat">https://mirrors.ustc.edu.cn/proxmox/images/aplinfo-pve-7.dat</a><br>systemctl restart pvedaemon</p><p>CEPH源更换</p><p>echo “deb <a href="https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy">https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy</a> bookworm no-subscription” &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ceph.list     #中科大源<br>sed -i.bak “s#<a href="http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g&quot;">http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g&quot;</a> &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;PVE&#x2F;CLI&#x2F;pveceph.pm     #中科大源</p><p>删除订阅弹窗<br>sed -Ezi.bak “s&#x2F;(Ext.Msg.show({\s+title: gettext(‘No valid sub)&#x2F;void({ //\1&#x2F;g” &#x2F;usr&#x2F;share&#x2F;javascript&#x2F;proxmox-widget-toolkit&#x2F;proxmoxlib.js &amp;&amp; systemctl restart pveproxy.service</p><h1 id="执行完成后，浏览器Ctrl-F5强制刷新缓存"><a href="#执行完成后，浏览器Ctrl-F5强制刷新缓存" class="headerlink" title="执行完成后，浏览器Ctrl+F5强制刷新缓存"></a>执行完成后，浏览器Ctrl+F5强制刷新缓存</h1><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/1226ea39/">https://github.com/maxzhao-it/blog/post/1226ea39/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mv &amp;#x2F;etc&amp;#x2F;apt&amp;#x2F;sources.list.d&amp;#x2F;pve-enterprise.list &amp;#x2F;etc&amp;#x2F;apt&amp;#x2F;sources.list.d&amp;#x2F;pve-enterprise.list-bak&lt;/p
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="apt" scheme="https://github.com/maxzhao-it/blog/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>PVE开启IPv6</title>
    <link href="https://github.com/maxzhao-it/blog/post/dcf1ae8e/"/>
    <id>https://github.com/maxzhao-it/blog/post/dcf1ae8e/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-17T10:53:00.422Z</updated>
    
    <content type="html"><![CDATA[<p>vim &#x2F;etc&#x2F;sysctl.conf</p><p>在末尾添加</p><p>net.ipv6.conf.all.accept_ra&#x3D;2</p><p>net.ipv6.conf.default.accept_ra&#x3D;2</p><p>net.ipv6.conf.vmbr0.accept_ra&#x3D;2</p><p>net.ipv6.conf.all.autoconf&#x3D;1</p><p>net.ipv6.conf.default.autoconf&#x3D;1</p><p>net.ipv6.conf.vmbr0.autoconf&#x3D;1</p><p>然后执行sysctl -p或者重启主机</p><p>输入</p><p>apt-get install net-tools -y<br>ifconfig</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/dcf1ae8e/">https://github.com/maxzhao-it/blog/post/dcf1ae8e/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vim &amp;#x2F;etc&amp;#x2F;sysctl.conf&lt;/p&gt;
&lt;p&gt;在末尾添加&lt;/p&gt;
&lt;p&gt;net.ipv6.conf.all.accept_ra&amp;#x3D;2&lt;/p&gt;
&lt;p&gt;net.ipv6.conf.default.accept_ra&amp;#x3D;2&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
  </entry>
  
  <entry>
    <title>Python打包</title>
    <link href="https://github.com/maxzhao-it/blog/post/7e49a571/"/>
    <id>https://github.com/maxzhao-it/blog/post/7e49a571/</id>
    <published>2023-11-16T10:55:47.854Z</published>
    <updated>2023-11-21T03:49:43.687Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pyinstaller -F gooeydemo[OpenSeleniumClient.py](py%2FOpenSeleniumClient.py).py -w 打包</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基于 pyinstaller</span></span><br><span class="line">pip install fbs -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">fbs project</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python操作MySQL</title>
    <link href="https://github.com/maxzhao-it/blog/post/5fc222/"/>
    <id>https://github.com/maxzhao-it/blog/post/5fc222/</id>
    <published>2023-11-16T10:55:47.854Z</published>
    <updated>2023-11-21T03:49:43.656Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line"><span class="keyword">import</span> m3u8</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> py <span class="keyword">import</span> m3u8Merge</span><br><span class="line"></span><br><span class="line">load_dotenv()</span><br><span class="line">outPath = <span class="string">&#x27;F:/资料文档/zztt/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动提交事务</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getConn</span>():</span><br><span class="line">    <span class="keyword">return</span> MySQLdb.connect(</span><br><span class="line">        host=os.getenv(<span class="string">&quot;db_pic_host&quot;</span>),</span><br><span class="line">        port=<span class="built_in">int</span>(os.getenv(<span class="string">&quot;db_pic_port&quot;</span>)),</span><br><span class="line">        user=os.getenv(<span class="string">&quot;db_pic_user&quot;</span>),</span><br><span class="line">        passwd=os.getenv(<span class="string">&quot;db_pic_password&quot;</span>),</span><br><span class="line">        db=os.getenv(<span class="string">&quot;db_pic_server&quot;</span>),</span><br><span class="line">        autocommit=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveInfo</span>(<span class="params"><span class="built_in">id</span>, name, url, href</span>):</span><br><span class="line">    sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        insert into z(id,name,url,href) values(&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;)&#x27;&#x27;&#x27;</span> \</span><br><span class="line">        .<span class="built_in">format</span>(<span class="built_in">id</span>, name, url, href)</span><br><span class="line">    cursor = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        connection = getConn()</span><br><span class="line">        cursor = connection.cursor()</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        cursor.fetchall()</span><br><span class="line">        <span class="comment"># connection.commit()</span></span><br><span class="line">        cursor.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.close()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;添加数据库数据失败:&quot;</span>, e, sql)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">listNeedDownload</span>():</span><br><span class="line">    sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    select id,name,url from z where download  = 2  limit 10</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        connection = getConn()</span><br><span class="line">        cursor = connection.cursor()</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        data = cursor.fetchall()</span><br><span class="line">        <span class="comment"># connection.commit()</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> data:</span><br><span class="line">            result.append(&#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: row[<span class="number">0</span>],</span><br><span class="line">                <span class="string">&#x27;name&#x27;</span>: row[<span class="number">1</span>],</span><br><span class="line">                <span class="string">&#x27;url&#x27;</span>: row[<span class="number">2</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">        cursor.close()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;listNeedDownload失败:&quot;</span>, e, sql)</span><br><span class="line">        <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure><h2 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install DBUtils -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install pymysql  -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">from dbutils.pooled_db import PooledDB</span><br><span class="line">from dotenv import load_dotenv</span><br><span class="line">load_dotenv()</span><br><span class="line">pool = PooledDB(</span><br><span class="line">    creator=pymysql,</span><br><span class="line">    maxconnections=20,</span><br><span class="line">    mincached=2,</span><br><span class="line">    maxcached=10,</span><br><span class="line">    blocking=True,</span><br><span class="line">    host=os.getenv(&quot;db_pic_host&quot;),</span><br><span class="line">    port=int(os.getenv(&quot;db_pic_port&quot;)),</span><br><span class="line">    user=os.getenv(&quot;db_pic_user&quot;),</span><br><span class="line">    passwd=os.getenv(&quot;db_pic_password&quot;),</span><br><span class="line">    db=os.getenv(&quot;db_pic_server&quot;),</span><br><span class="line">    charset=&#x27;utf8mb4&#x27;</span><br><span class="line">)</span><br><span class="line">def a():</span><br><span class="line">      sql = &#x27;&#x27;&#x27;</span><br><span class="line">        insert into img(id,name,tab_url,url) values(&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;)&#x27;&#x27;&#x27; \</span><br><span class="line">        .format(id, name, tab_url, url)</span><br><span class="line">    cursor = 1</span><br><span class="line">    connection = pool.connection()</span><br><span class="line">    try:</span><br><span class="line">        cursor = connection.cursor()</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        cursor.fetchall()</span><br><span class="line">        connection.commit()</span><br><span class="line">        close(cursor)</span><br><span class="line">        connection.close()</span><br><span class="line">        return True</span><br><span class="line">    except Exception as e:</span><br><span class="line">        close(cursor)</span><br><span class="line">        print(&quot;添加数据库数据失败:&quot;, e, sql)</span><br><span class="line">        connection.close()</span><br><span class="line">        return False</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python操作字符串</title>
    <link href="https://github.com/maxzhao-it/blog/post/4ad1a794/"/>
    <id>https://github.com/maxzhao-it/blog/post/4ad1a794/</id>
    <published>2023-11-16T10:55:47.854Z</published>
    <updated>2023-11-21T03:49:43.648Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作JSON"><a href="#操作JSON" class="headerlink" title="操作JSON"></a>操作JSON</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包含关系</span></span><br><span class="line">flag = <span class="string">&#x27;.mp4&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&#x27;1.mp4&#x27;</span></span><br><span class="line"><span class="comment"># 查找</span></span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.find(<span class="string">&#x27;.mp4&#x27;</span>)</span><br><span class="line"><span class="comment"># 长度</span></span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.count(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="comment"># 长度</span></span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.replace(<span class="string">&#x27;.mp4&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.endswith(<span class="string">&#x27;.mp4&#x27;</span>)</span><br><span class="line">downloadUrl = <span class="string">&#x27;http:/test.com/1 2/123&#x27;</span></span><br><span class="line"><span class="comment"># 转换空格</span></span><br><span class="line">downloadUrl = downloadUrl.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;%20&#x27;</span>)</span><br><span class="line"><span class="comment"># 转义</span></span><br><span class="line">urllib.parse.quote(downloadUrl)</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作JSON&quot;&gt;&lt;a href=&quot;#操作JSON&quot; class=&quot;headerlink&quot; title=&quot;操作JSON&quot;&gt;&lt;/a&gt;操作JSON&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python截取视频中的图片</title>
    <link href="https://github.com/maxzhao-it/blog/post/8ddf92f3/"/>
    <id>https://github.com/maxzhao-it/blog/post/8ddf92f3/</id>
    <published>2023-11-16T10:55:47.853Z</published>
    <updated>2023-11-21T03:49:43.652Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install ffmpy -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip3 install opencv-python -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> ffmpy <span class="keyword">import</span> FFmpeg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 视频裁剪</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cut_out_video</span>(<span class="params">video_path: <span class="built_in">str</span>, output_dir: <span class="built_in">str</span>, start_pix: <span class="built_in">tuple</span>, size: <span class="built_in">tuple</span></span>):</span><br><span class="line">    ext = os.path.basename(video_path).strip().split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> ext <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;mp4&#x27;</span>, <span class="string">&#x27;avi&#x27;</span>, <span class="string">&#x27;flv&#x27;</span>]:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;format error&#x27;</span>)</span><br><span class="line">    result = os.path.join(output_dir, <span class="string">&#x27;&#123;&#125;.&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(uuid.uuid1().<span class="built_in">hex</span>, ext))</span><br><span class="line">    ff = FFmpeg(inputs=&#123;video_path: <span class="literal">None</span>&#125;,</span><br><span class="line">                outputs=&#123;</span><br><span class="line">                    result: <span class="string">&#x27;-vf crop=&#123;&#125;:&#123;&#125;:&#123;&#125;:&#123;&#125; -y -threads 5 -preset ultrafast -strict -2&#x27;</span>.<span class="built_in">format</span>(size[<span class="number">0</span>], size[<span class="number">1</span>],</span><br><span class="line">                                                                                                     start_pix[<span class="number">0</span>],</span><br><span class="line">                                                                                                     start_pix[<span class="number">1</span>])&#125;)</span><br><span class="line">    <span class="built_in">print</span>(ff.cmd)</span><br><span class="line">    ff.run()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(cut_out_video(<span class="string">r&#x27;C:\Users\huyi\Desktop\test2.mp4&#x27;</span>, <span class="string">r&#x27;C:\Users\huyi\Desktop&#x27;</span>, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">512</span>, <span class="number">512</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">vc = cv2.VideoCapture(<span class="string">&quot;f:\\Videos\\4K Tokkit\\dbxbqm22\\7257911883674668289.mp4&quot;</span>)</span><br><span class="line"><span class="comment"># 检查视频是否成功打开</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> vc.isOpened():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无法打开视频文件&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line">fps = vc.get(cv2.CAP_PROP_FPS)</span><br><span class="line"></span><br><span class="line">c = <span class="number">0</span></span><br><span class="line">num = <span class="built_in">round</span>(fps)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ret, frame = vc.read()</span><br><span class="line">    pic_path = <span class="string">&#x27;f:\\Videos\\4K Tokkit\\test/&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> (c % <span class="built_in">round</span>(fps) == <span class="number">0</span>):</span><br><span class="line">        cv2.imwrite(pic_path + <span class="string">&#x27;7257911883674668289_&#x27;</span> + <span class="built_in">str</span>(c) + <span class="string">&#x27;.jpg&#x27;</span>, frame)</span><br><span class="line">    c = c + <span class="number">1</span></span><br><span class="line">vc.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="写入中文路径处理"><a href="#写入中文路径处理" class="headerlink" title="写入中文路径处理"></a>写入中文路径处理</h2><p><code>cv2.imread</code>和<code>cv2.imwrite</code>无法读写含中文的路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">image = cv2.imdecode(np.fromfile(<span class="string">&#x27;中文图片.png&#x27;</span>), cv2.IMREAD_UNCHANGED)</span><br><span class="line">cv2.imencode(<span class="string">&#x27;.png&#x27;</span>, image)[<span class="number">1</span>].tofile(<span class="string">&#x27;保存_中文图片.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python创建http服务</title>
    <link href="https://github.com/maxzhao-it/blog/post/9bf163e/"/>
    <id>https://github.com/maxzhao-it/blog/post/9bf163e/</id>
    <published>2023-11-16T10:55:47.852Z</published>
    <updated>2023-11-21T03:49:43.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作文件"><a href="#操作文件" class="headerlink" title="操作文件"></a>操作文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/api/testPost&#x27;</span>, methods=[<span class="string">&#x27;Get&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">testPost</span>():</span><br><span class="line">    <span class="comment"># 获取请求中的全部内容</span></span><br><span class="line">    param = request.args</span><br><span class="line">    <span class="comment"># 内容必须转为str类型，否则会报错（因为打印方法里面出现了+符号）</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;打印所有的参数：&quot;</span> + <span class="built_in">str</span>(param))</span><br><span class="line">    <span class="comment"># 获取参数名为userName的请求参数数据值</span></span><br><span class="line">    userName = request.args.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="comment"># 获取参数名为userPassword的请求参数数据值</span></span><br><span class="line">    userPassword = request.args.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    <span class="comment"># 判断一下，如果账号姓名为lqq并且账号密码为123的时候显示登录成功，否则（参数缺失或参数错误）显示失败</span></span><br><span class="line">    <span class="keyword">if</span> (userName == <span class="string">&#x27;1&#x27;</span>) &amp; (userPassword == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;登录成功&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;登录失败&quot;</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>测试</p><ul><li>访问  <a href="http://127.0.0.1:8888/api/m3u8?username=1&amp;password=1">http://127.0.0.1:8888/api/m3u8?username=1&amp;password=1</a></li><li>访问  <a href="http://127.0.0.1:8888/api/m3u8?username=1&amp;password=2">http://127.0.0.1:8888/api/m3u8?username=1&amp;password=2</a></li></ul><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作文件&quot;&gt;&lt;a href=&quot;#操作文件&quot; class=&quot;headerlink&quot; title=&quot;操作文件&quot;&gt;&lt;/a&gt;操作文件&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python创建虚拟环境</title>
    <link href="https://github.com/maxzhao-it/blog/post/dd7e812c/"/>
    <id>https://github.com/maxzhao-it/blog/post/dd7e812c/</id>
    <published>2023-11-16T10:55:47.852Z</published>
    <updated>2023-11-21T03:49:43.697Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python -m venv venv</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入虚拟环境</span></span><br><span class="line">venv\Scripts\activate</span><br><span class="line"></span><br><span class="line">pip install requests</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">退出</span></span><br><span class="line">venv\Scripts\deactivate</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python实现m3u8下载器</title>
    <link href="https://github.com/maxzhao-it/blog/post/dc0b9195/"/>
    <id>https://github.com/maxzhao-it/blog/post/dc0b9195/</id>
    <published>2023-11-16T10:55:47.852Z</published>
    <updated>2023-11-21T03:49:43.682Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests m3u8 -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"></span><br><span class="line">load_dotenv()</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python多线程</title>
    <link href="https://github.com/maxzhao-it/blog/post/f4423a86/"/>
    <id>https://github.com/maxzhao-it/blog/post/f4423a86/</id>
    <published>2023-11-16T10:55:47.852Z</published>
    <updated>2023-11-21T03:49:43.672Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 定义最大允许的线程数量</span></span><br><span class="line">max_threads = <span class="number">5</span></span><br><span class="line"><span class="comment"># 创建 Semaphore 对象</span></span><br><span class="line">semaphore = threading.Semaphore(max_threads)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">asyncConcat</span>(<span class="params">startPath, endPath, middlePath, middleAudioPath, outputPath, semaphore</span>):</span><br><span class="line">    <span class="keyword">with</span> semaphore:</span><br><span class="line">        thread_id = threading.current_thread().ident</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Thread ID: &quot;</span>,  threading.current_thread().ident)</span><br><span class="line">        concat(startPath, endPath, middlePath, middleAudioPath, outputPath)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 创建线程</span></span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        basename = os.path.basename(file)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;.mp4&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> basename:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;已剪辑&#x27;</span> <span class="keyword">in</span> basename:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(outputPath + basename.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-已剪辑.&#x27;</span>)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;视频已剪辑=&#x27;</span>, middleDir + basename)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;待剪辑视频=&#x27;</span>, middleDir + basename)</span><br><span class="line">        fileCount = fileCount + <span class="number">1</span></span><br><span class="line">        <span class="comment"># concat(startPath, endPath, middleDir + basename, middleAudioPath, outputPath)</span></span><br><span class="line">        thread = threading.Thread(target=asyncConcat, args=(</span><br><span class="line">            startPath, endPath, middleDir + basename, middleAudioPath, outputPath, semaphore))</span><br><span class="line">        threads.append(thread)</span><br><span class="line">        thread.start()</span><br><span class="line">    <span class="comment"># 等待所有线程执行结束</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.join(timeout=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="获取线程id"><a href="#获取线程id" class="headerlink" title="获取线程id"></a>获取线程id</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">thread_id = threading.current_thread().ident</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Thread ID: &quot;</span>, thread_id)</span><br></pre></td></tr></table></figure><h2 id="设置等待时间"><a href="#设置等待时间" class="headerlink" title="设置等待时间"></a>设置等待时间</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">thread.join(timeout=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="线程次-py3"><a href="#线程次-py3" class="headerlink" title="线程次 py3"></a>线程次 py3</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">from concurrent.futures import ThreadPoolExecutor</span><br><span class="line">def task(x, y):</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    return x * y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    with ThreadPoolExecutor(max_workers=10) as executor:</span><br><span class="line">        future = executor.submit(task, 1, 2)</span><br><span class="line">        print(future.result())</span><br><span class="line">        future = executor.map(task, [1, 2, 3], [1, 2, 4])</span><br><span class="line">        # 等待所有任务完成</span><br><span class="line">        executor.shutdown()</span><br><span class="line">        for r in future:</span><br><span class="line">            print(r)</span><br><span class="line">    with ThreadPoolExecutor(max_workers=10) as executor:</span><br><span class="line">        futures = [executor.submit(task, i, i) for i in range(5)]</span><br><span class="line">        print(all(f.result() for f in futures))</span><br><span class="line">        # 等待所有任务完成</span><br><span class="line">        executor.shutdown()</span><br><span class="line">        print(all(f.result() for f in futures))</span><br><span class="line">        for r in futures:</span><br><span class="line">            print(r.result())</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;多线程&quot;&gt;&lt;a href=&quot;#多线程&quot; class=&quot;headerlink&quot; title=&quot;多线程&quot;&gt;&lt;/a&gt;多线程&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python实现合并m3u8</title>
    <link href="https://github.com/maxzhao-it/blog/post/7b6a6783/"/>
    <id>https://github.com/maxzhao-it/blog/post/7b6a6783/</id>
    <published>2023-11-16T10:55:47.852Z</published>
    <updated>2023-11-21T03:49:43.663Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests m3u8 pycryptodome -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">outPath = <span class="string">&#x27;F:/资料文档/zztt/&#x27;</span></span><br><span class="line">nameLength = <span class="built_in">len</span>(<span class="string">&#x27;f1bded9f280d7945fa5a1503a2669a66&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge_m3u8</span>(<span class="params">m3u8Path</span>):</span><br><span class="line">    <span class="comment"># 拼接所有TS文件</span></span><br><span class="line">    tsList = os.listdir(m3u8Path)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(tsList) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    mainName = tsList[<span class="number">0</span>][<span class="number">0</span>:nameLength]</span><br><span class="line">    cmd = <span class="string">&#x27; &#x27;</span>.join(<span class="string">f&quot;file &#x27;<span class="subst">&#123;m3u8Path + <span class="string">&#x27;/&#x27;</span> + mainName&#125;</span><span class="subst">&#123;i&#125;</span>.ts&#x27;&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(tsList)))</span><br><span class="line">    cmd = <span class="string">&#x27;&#x27;</span>.join(<span class="string">f&quot;<span class="subst">&#123;m3u8Path + <span class="string">&#x27;/&#x27;</span> + mainName&#125;</span><span class="subst">&#123;i&#125;</span>.ts\n&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(tsList)))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;input.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(cmd)</span><br><span class="line">    outFileName = os.path.basename(m3u8Path)</span><br><span class="line"></span><br><span class="line">    output_filename = m3u8Path + <span class="string">&quot;/&quot;</span> + outFileName + <span class="string">&#x27;.mp4&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用ffmpeg命令将所有TS文件合并</span></span><br><span class="line">    result = subprocess.call(<span class="string">f&quot;ffmpeg -f concat -safe 0 -i input.txt -c copy <span class="subst">&#123;output_filename&#125;</span>.mp4&quot;</span>, shell=<span class="literal">True</span>)</span><br><span class="line">    output = result.stdout.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># 删除临时文件</span></span><br><span class="line">    <span class="comment"># for i in range(1, len(ts_urls) + 1):</span></span><br><span class="line">    <span class="comment">#     os.remove(f&quot;&#123;i&#125;.ts&quot;)</span></span><br><span class="line">    <span class="comment"># os.remove(&quot;input.txt&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    merge_m3u8(<span class="string">&#x27;F:/资料文档/zztt/《独家猛料》&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下载 <a href="https://ffmpeg.org/download.html">ffmpeg</a></p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PythonGUI-Qt5</title>
    <link href="https://github.com/maxzhao-it/blog/post/dfa7f0a1/"/>
    <id>https://github.com/maxzhao-it/blog/post/dfa7f0a1/</id>
    <published>2023-11-16T10:55:47.851Z</published>
    <updated>2023-11-21T03:49:43.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyqt5 -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install PyQt5-tools -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><p><code>File | Settings | Tools | External Tools</code> 添加 <code>QtDesigner</code>。</p><p><code>QtDesigner  Qt</code></p><p>选择 <code>venv\Lib\site-packages\qt5_applications\Qt\bin\designer.exe</code></p><p>工作目录选择 <code>$ProjectFileDir$</code></p><p>PyUIC主要是把Qt Designer生成的.ui文件换成.py文件。</p><p>Name: PyUIC</p><p>Program : D:\Program Files\Python36\python.exe # 当前Python目录，请根据实际修改</p><p>Arguments: -m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py</p><p>Working directory: $FileDir$</p><p>PyRCC主要是把编写的.qrc资源文件换成.py文件。</p><p>Name: PyRCC</p><p>Program: D:\Program Files\Python36\pyrcc5.exe # 当前rcc工具目录，请根据实际修改</p><p>Arguments: $FileName$ -o $FileNameWithoutExtension$_rc.py</p><p>Working directory: $FileDir$</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python下载文件</title>
    <link href="https://github.com/maxzhao-it/blog/post/6071409/"/>
    <id>https://github.com/maxzhao-it/blog/post/6071409/</id>
    <published>2023-11-16T10:55:47.851Z</published>
    <updated>2023-11-21T03:49:43.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作文件"><a href="#操作文件" class="headerlink" title="操作文件"></a>操作文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> requests</span><br><span class="line"></span><br><span class="line">downloadUrl = <span class="string">&#x27;https://alist.qyide.com&#x27;</span></span><br><span class="line">fileFullPath = <span class="string">&#x27;d:/23.png&#x27;</span></span><br><span class="line">urllib.request.urlretrieve(downloadUrl, filename=fileFullPath)</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">file = requests.get(downloadUrl, allow_redirects=<span class="literal">True</span>, headers=&#123;</span><br><span class="line">                    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">                &#125;)</span><br><span class="line"><span class="built_in">open</span>(fileFullPath, <span class="string">&#x27;wb&#x27;</span>).write(file.content)</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/undefined/">https://github.com/maxzhao-it/blog/post/undefined/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作文件&quot;&gt;&lt;a href=&quot;#操作文件&quot; class=&quot;headerlink&quot; title=&quot;操作文件&quot;&gt;&lt;/a&gt;操作文件&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>python切换版本</title>
    <link href="https://github.com/maxzhao-it/blog/post/7b8773dd/"/>
    <id>https://github.com/maxzhao-it/blog/post/7b8773dd/</id>
    <published>2023-11-16T10:55:47.851Z</published>
    <updated>2023-11-17T10:53:00.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单切换2和3"><a href="#简单切换2和3" class="headerlink" title="简单切换2和3"></a>简单切换2和3</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y python python3 python3-devel</span><br><span class="line">alias python = python3</span><br><span class="line">python3 --version</span><br></pre></td></tr></table></figure><h2 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum install -y anaconda</span><br><span class="line">conda create --name py3.7 python=3.7</span><br><span class="line">conda activate py3.7</span><br><span class="line">conda deactivate</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">conda install numpy</span><br><span class="line">conda list</span><br><span class="line">conda search numpy</span><br><span class="line">conda update numpy</span><br><span class="line">conda update --all</span><br><span class="line">conda update conda</span><br><span class="line">conda update python</span><br><span class="line">conda env list</span><br></pre></td></tr></table></figure><p>设置国内源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">conda config --show channels</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud//pytorch/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --show channels</span><br><span class="line"># 搜索显示地址</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><h3 id="直接配置"><a href="#直接配置" class="headerlink" title="直接配置"></a>直接配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.condarc</span><br></pre></td></tr></table></figure><p>清华</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br><span class="line">default_channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br></pre></td></tr></table></figure><p>阿里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br><span class="line">default_channels:</span><br><span class="line">  - http://mirrors.aliyun.com/anaconda/pkgs/main</span><br><span class="line">  - http://mirrors.aliyun.com/anaconda/pkgs/r</span><br><span class="line">  - http://mirrors.aliyun.com/anaconda/pkgs/msys2</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: http://mirrors.aliyun.com/anaconda/cloud</span><br><span class="line">  msys2: http://mirrors.aliyun.com/anaconda/cloud</span><br><span class="line">  bioconda: http://mirrors.aliyun.com/anaconda/cloud</span><br><span class="line">  menpo: http://mirrors.aliyun.com/anaconda/cloud</span><br><span class="line">  pytorch: http://mirrors.aliyun.com/anaconda/cloud</span><br><span class="line">  simpleitk: http://mirrors.aliyun.com/anaconda/cloud</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/7b8773dd/">https://github.com/maxzhao-it/blog/post/7b8773dd/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简单切换2和3&quot;&gt;&lt;a href=&quot;#简单切换2和3&quot; class=&quot;headerlink&quot; title=&quot;简单切换2和3&quot;&gt;&lt;/a&gt;简单切换2和3&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
      <category term="pip" scheme="https://github.com/maxzhao-it/blog/categories/Python/pip/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
      <category term="pip" scheme="https://github.com/maxzhao-it/blog/tags/pip/"/>
    
      <category term="Conda" scheme="https://github.com/maxzhao-it/blog/tags/Conda/"/>
    
  </entry>
  
  <entry>
    <title>Python使用BeautifulSoup2解析html</title>
    <link href="https://github.com/maxzhao-it/blog/post/f33d2bd5/"/>
    <id>https://github.com/maxzhao-it/blog/post/f33d2bd5/</id>
    <published>2023-11-16T10:55:47.851Z</published>
    <updated>2023-11-17T10:53:00.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install beautifulsoup4 -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install lxml -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install html5lib -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install chardet -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> chardet</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loadTab1</span>():</span><br><span class="line">    response = requests.get(<span class="string">&quot;https://wo&quot;</span>, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;错误响应：&#x27;</span>, response.text)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    response.encoding = requests.utils.get_encodings_from_content(response.text)[<span class="number">0</span>]</span><br><span class="line">    parsed_html = BeautifulSoup(response.text, from_encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    parsed_html.find()</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/f33d2bd5/">https://github.com/maxzhao-it/blog/post/f33d2bd5/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作&quot;&gt;&lt;a href=&quot;#操作&quot; class=&quot;headerlink&quot; title=&quot;操作&quot;&gt;&lt;/a&gt;操作&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
