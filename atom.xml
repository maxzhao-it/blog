<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>maxzhao</title>
  
  <subtitle>不要害怕Exception和Error</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://github.com/maxzhao-it/blog/"/>
  <updated>2023-11-26T23:54:44.684Z</updated>
  <id>https://github.com/maxzhao-it/blog/</id>
  
  <author>
    <name>赵联胜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PVE8安装MacOS</title>
    <link href="https://github.com/maxzhao-it/blog/post/9be1de00/"/>
    <id>https://github.com/maxzhao-it/blog/post/9be1de00/</id>
    <published>2023-11-24T16:00:00.000Z</published>
    <updated>2023-11-26T23:54:44.684Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><p><a href="https://github.com/thenickdude/KVM-Opencore/releases">https://github.com/thenickdude/KVM-Opencore/releases</a></p><p>下载 <code>OpenCore-v20.iso.gz</code> 找到最新的就可以</p><h2 id="创建-MacOS镜像"><a href="#创建-MacOS镜像" class="headerlink" title="创建 MacOS镜像"></a>创建 MacOS镜像</h2><p><code>Ubuntu</code> 系统下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/thenickdude/OSX-KVM</span><br><span class="line"><span class="built_in">cd</span> ~/OSX-KVM/scripts/ventura</span><br><span class="line">apt install -y qemu-utils make</span><br><span class="line">make Ventura-recovery.img</span><br></pre></td></tr></table></figure><p>将</p><ul><li><code>Ventura-recovery.img</code></li><li><code>OpenCore-v20.iso</code></li></ul><p>上传到 <code>pve ISO</code> 镜像中</p><blockquote><p>这里有 2023-11-25下载的版本：</p><p><a href="/blog/uploads/pve/mac/OpenCore-v20.iso.gz">OpenCore-v20.iso.gz</a></p><p><a href="/blog/uploads/pve/mac/OSX-KVM-master.zip">OSX-KVM-master.zip</a></p></blockquote><h2 id="修改-vm-conf"><a href="#修改-vm-conf" class="headerlink" title="修改 vm.conf"></a>修改 vm.conf</h2><p>这里VM 的id 为 1000</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pve/qemu-server/1000.conf</span><br></pre></td></tr></table></figure><p>在第二行添加参数（<code>intel</code> 的处理器）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">args: -device isa-applesmc,osk=&quot;ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&quot; -smbios type=2 -device usb-kbd,bus=ehci.0,port=2 -global nec-usb-xhci.msi=off -cpu host,kvm=on,vendor=GenuineIntel,+kvm_pv_unhalt,+kvm_pv_eoi,+hypervisor,+invtsc</span><br></pre></td></tr></table></figure><p>将两个<code>ISO</code>的配置修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">media=cdrom  改为 cache=unsafe</span><br></pre></td></tr></table></figure><p>结果如下:</p><p><img src="/blog/uploads/images/pve/pve-macos-install-img.png"></p><h2 id="配置-VM"><a href="#配置-VM" class="headerlink" title="配置 VM"></a>配置 <code>VM</code></h2><p>这里 VM ID 设置为 1000</p><p><img src="/blog/uploads/images/pve/pve-macos-img.png"><br><img src="/blog/uploads/images/pve/pve-macos-img_1.png"><br><img src="/blog/uploads/images/pve/pve-macos-img_2.png"><br><img src="/blog/uploads/images/pve/pve-macos-img_3.png"><br><img src="/blog/uploads/images/pve/pve-macos-img_4.png"></p><h2 id="启动系统"><a href="#启动系统" class="headerlink" title="启动系统"></a>启动系统</h2><p>选第一个按回车就可以了</p><h3 id="配置磁盘"><a href="#配置磁盘" class="headerlink" title="配置磁盘"></a>配置磁盘</h3><p><img src="/blog/uploads/images/pve/pve-macos-install-img_1.png"><br><img src="/blog/uploads/images/pve/pve-macos-install-img_2.png"></p><p>结束后左上角叉掉</p><p><img src="/blog/uploads/images/pve/pve-macos-install-img_3.png"></p><ul><li>Agree</li><li>Agree</li><li>选择硬盘 maxmac</li></ul><p>等待重启</p><ul><li>第一次选择 install</li><li>第二次选择 install</li><li>第三次选择 maxmac</li><li>第四次选择 maxmac</li></ul><h2 id="修改时间"><a href="#修改时间" class="headerlink" title="修改时间"></a>修改时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -v+8H <span class="string">&quot;+%m%d%H%M%S&quot;</span> | | xargs <span class="built_in">date</span></span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/9be1de00/">https://github.com/maxzhao-it/blog/post/9be1de00/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载镜像&quot;&gt;&lt;a href=&quot;#下载镜像&quot; class=&quot;headerlink&quot; title=&quot;下载镜像&quot;&gt;&lt;/a&gt;下载镜像&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/thenickdude/KVM-Opencore/releases&quot;
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
      <category term="MacOS" scheme="https://github.com/maxzhao-it/blog/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>Filebeat-8.11配置采集log4j2日志</title>
    <link href="https://github.com/maxzhao-it/blog/post/374dd8da/"/>
    <id>https://github.com/maxzhao-it/blog/post/374dd8da/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.782Z</updated>
    
    <content type="html"><![CDATA[<p>这里先将日志直接通过 <code>filebeat</code> 输出到文件用于测试</p><h2 id="log4j2配置日志输出"><a href="#log4j2配置日志输出" class="headerlink" title="log4j2配置日志输出"></a>log4j2配置日志输出</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%d&#123;yyyyMMddHHmmssSSS&#125;:%p [%T] [$&#123;pn&#125;] [%X&#123;cId&#125;] [%X&#123;cpId&#125;] [%X&#123;rTId&#125;] %c&#123;1.&#125;(%L): %m%xwEx%n</span><br></pre></td></tr></table></figure><blockquote><p><code>%X&#123;cId&#125;</code> 在java 中可以使用 <code>ThreadContext.put(&quot;cId&quot;,&quot;test&quot;)</code> 实现</p></blockquote><h2 id="filebeat-yml-配置"><a href="#filebeat-yml-配置" class="headerlink" title="filebeat.yml 配置"></a><code>filebeat.yml</code> 配置</h2><p>这里输出到日志文件测试</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="comment"># 新版的日志文件采集，不要使用 log</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">filestream</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">my-filestream-id</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/data/test-log/*.log</span></span><br><span class="line">  <span class="comment">#exclude_lines: [&#x27;^DBG&#x27;]</span></span><br><span class="line">  <span class="comment">#include_lines: [&#x27;^ERR&#x27;, &#x27;^WARN&#x27;]</span></span><br><span class="line">  <span class="attr">prospector.scanner.exclude_files:</span> [<span class="string">&#x27;\.gz$&#x27;</span>]</span><br><span class="line">  <span class="comment">#fields:</span></span><br><span class="line">  <span class="comment">#  level: debug</span></span><br><span class="line">  <span class="comment">#  review: 1</span></span><br><span class="line">  <span class="attr">parsers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">multiline:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">pattern</span></span><br><span class="line">      <span class="comment"># 与模式不匹配的连续行将附加到匹配的上一行</span></span><br><span class="line">      <span class="attr">pattern:</span> <span class="string">&#x27;^\d&#x27;</span></span><br><span class="line">      <span class="attr">negate:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># 与模式匹配的连续行将附加到不匹配的上一行，解决日志文件输出到一行的问题</span></span><br><span class="line">      <span class="comment">#pattern: &#x27;^[[:space:]]+(at|\.&#123;3&#125;)[[:space:]]+\b|^[a-z]&#x27;</span></span><br><span class="line">      <span class="comment">#negate: false</span></span><br><span class="line">      <span class="attr">match:</span> <span class="string">after</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">max_lines:</span> <span class="number">100</span></span><br><span class="line"><span class="comment"># ============================== Filebeat modules ==============================</span></span><br><span class="line"><span class="attr">filebeat.config.modules:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class="line">  <span class="attr">reload.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 不用es 这里要关闭</span></span><br><span class="line"><span class="attr">setup.template.enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">setup.template.settings:</span></span><br><span class="line">  <span class="attr">index.number_of_shards:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#index.codec: best_compression</span></span><br><span class="line">  <span class="comment">#_source.enabled: false</span></span><br><span class="line"><span class="attr">setup.kibana:</span></span><br><span class="line"><span class="comment"># ---------------------------- Elasticsearch Output ----------------------------</span></span><br><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">output.logstash:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;127.0.0.1:5044&quot;</span>]</span><br><span class="line">  <span class="attr">compression_level:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">output.file:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&quot;/data/filebeat&quot;</span></span><br><span class="line">  <span class="attr">filename:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">rotate_every_kb:</span> <span class="number">10240</span></span><br><span class="line">  <span class="comment"># 保留的最多文件个数</span></span><br><span class="line">  <span class="attr">number_of_files:</span> <span class="number">7</span></span><br><span class="line">  <span class="comment"># 文件权限</span></span><br><span class="line">  <span class="attr">permissions:</span> <span class="number">0600</span></span><br><span class="line">  <span class="comment"># 写入文件存在则写入新文件</span></span><br><span class="line">  <span class="attr">rotate_on_startup:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 默认输出 json</span></span><br><span class="line">  <span class="comment">#codec</span></span><br><span class="line"><span class="comment"># ================================= Processors =================================</span></span><br><span class="line"><span class="attr">processors:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_host_metadata:</span></span><br><span class="line">      <span class="attr">when.not.contains.tags:</span> <span class="string">forwarded</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_cloud_metadata:</span> <span class="string">~</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_docker_metadata:</span> <span class="string">~</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_kubernetes_metadata:</span> <span class="string">~</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.elastic.co/guide/en/beats/filebeat/8.11/regexp-support.html"><code>multiline.pattern</code>表达式</a></p></blockquote><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/374dd8da/">https://github.com/maxzhao-it/blog/post/374dd8da/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里先将日志直接通过 &lt;code&gt;filebeat&lt;/code&gt; 输出到文件用于测试&lt;/p&gt;
&lt;h2 id=&quot;log4j2配置日志输出&quot;&gt;&lt;a href=&quot;#log4j2配置日志输出&quot; class=&quot;headerlink&quot; title=&quot;log4j2配置日志输出&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="ELK" scheme="https://github.com/maxzhao-it/blog/categories/ELK/"/>
    
      <category term="Filebeat" scheme="https://github.com/maxzhao-it/blog/categories/ELK/Filebeat/"/>
    
    
      <category term="ELK" scheme="https://github.com/maxzhao-it/blog/tags/ELK/"/>
    
      <category term="Filebeat" scheme="https://github.com/maxzhao-it/blog/tags/Filebeat/"/>
    
  </entry>
  
  <entry>
    <title>Filebeat-8.x+Logstash采集log4j2日志</title>
    <link href="https://github.com/maxzhao-it/blog/post/af5eafbf/"/>
    <id>https://github.com/maxzhao-it/blog/post/af5eafbf/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.789Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>版本：</p><ul><li><a href="https://artifacts.elastic.co/downloads/logstash/logstash-8.11.1-linux-x86_64.tar.gz"><code>logstash-8.11.1-linux-x86_64.tar.gz</code></a></li><li><a href="https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.11.1-linux-x86_64.tar.gz">filebeat-8.11.1-linux-x86_64.tar.gz</a></li></ul><p>默认安装路径  <code>/opt/logstash </code> 、 <code>/opt/filebeat </code></p></blockquote><h2 id="Logstash-配置"><a href="#Logstash-配置" class="headerlink" title="Logstash 配置"></a><code>Logstash</code> 配置</h2><h3 id="测试接收-filebeat"><a href="#测试接收-filebeat" class="headerlink" title="测试接收 filebeat"></a>测试接收 <code>filebeat</code></h3><p>新建文件 <code>config/first-pipeline.conf</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; &quot;5044&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">The filter part of this file is commented out to indicate that it is</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">optional.</span></span><br><span class="line">filter &#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">        match =&gt; &#123; &quot;message&quot; =&gt; &quot;(?&lt;year&gt;\d&#123;4&#125;)(?&lt;month&gt;\d&#123;2&#125;)(?&lt;day&gt;\d&#123;2&#125;)(?&lt;hour&gt;\d&#123;2&#125;)(?&lt;minute&gt;\d&#123;2&#125;)(?&lt;second&gt;\d&#123;2&#125;)(?&lt;millisecond&gt;\d&#123;3&#125;):%&#123;LOGLEVEL:logLevel&#125;%&#123;SPACE&#125;\[%&#123;INT:thread&#125;\]%&#123;SPACE&#125;\[%&#123;WORD:projectName&#125;\]%&#123;SPACE&#125;\[(?&lt;cId&gt;.*?|\d&#123;0,&#125;)\]%&#123;SPACE&#125;\[%&#123;DATA:cpId&#125;\]%&#123;SPACE&#125;\[%&#123;DATA:rTId&#125;\]%&#123;SPACE&#125;%&#123;JAVACLASS:java&#125;\(%&#123;INT:javaNum&#125;\)\:%&#123;SPACE&#125;%&#123;JAVALOGMESSAGE:msg&#125;&quot;&#125;</span><br><span class="line">    &#125;       </span><br><span class="line">mutate &#123;</span><br><span class="line">        add_field =&gt; &#123;</span><br><span class="line">            &quot;timestamp&quot; =&gt; &quot;%&#123;year&#125;%&#123;month&#125;%&#123;day&#125;%&#123;hour&#125;%&#123;minute&#125;%&#123;second&#125;%&#123;millisecond&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">remove_field =&gt;[&quot;log&quot;,&quot;input&quot;,&quot;ecs&quot;,&quot;event&quot;,&quot;host&quot;,&quot;agent&quot;,&quot;message&quot;]</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">date &#123;</span><br><span class="line">match =&gt; [ &quot;timestamp&quot;, &quot;yyyyMMddHHmmssSSS&quot; ]</span><br><span class="line">target =&gt; &quot;@timestamp&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">    if &quot;test&quot; in [projectName] &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; &quot;192.168.2.8:9200&quot;</span><br><span class="line">            index =&gt; &quot;app-log-api-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if &quot;y&quot; in [projectName] &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; &quot;192.168.2.8:9200&quot;</span><br><span class="line">            index =&gt; &quot;app-log-opt-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if &quot;x&quot; in [projectName] &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; &quot;192.168.2.8:9200&quot;</span><br><span class="line">            index =&gt; &quot;app-log-sso-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/logstash -f first-pipeline.conf --config.test_and_exit</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">自动更新 --config.reload.automatic</span></span><br><span class="line">bin/logstash -f first-pipeline.conf --config.reload.automatic</span><br></pre></td></tr></table></figure><h3 id="Filebeat-配置"><a href="#Filebeat-配置" class="headerlink" title="Filebeat 配置"></a><code>Filebeat</code> 配置</h3><p><code>Filebeat.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">filestream</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">my-filestream-id</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">  <span class="comment"># 日志文件路径修改</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/data/test-log/*.log</span></span><br><span class="line">  <span class="attr">prospector.scanner.exclude_files:</span> [<span class="string">&#x27;\.gz$&#x27;</span>]</span><br><span class="line">  <span class="attr">parsers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">multiline:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">pattern</span></span><br><span class="line">      <span class="comment"># 与模式不匹配的连续行将附加到匹配的上一行</span></span><br><span class="line">      <span class="attr">pattern:</span> <span class="string">&#x27;^\d&#x27;</span></span><br><span class="line">      <span class="attr">negate:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># 与模式匹配的连续行将附加到不匹配的上一行</span></span><br><span class="line">      <span class="comment">#pattern: &#x27;^[[:space:]]+(at|\.&#123;3&#125;)[[:space:]]+\b|^[a-z]&#x27;</span></span><br><span class="line">      <span class="comment">#negate: false</span></span><br><span class="line">      <span class="attr">match:</span> <span class="string">after</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">max_lines:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">filebeat.config.modules:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class="line">  <span class="attr">reload.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 不用es 这里要关闭</span></span><br><span class="line"><span class="attr">setup.template.enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">setup.template.settings:</span></span><br><span class="line">  <span class="attr">index.number_of_shards:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#index.codec: best_compression</span></span><br><span class="line">  <span class="comment">#_source.enabled: false</span></span><br><span class="line"><span class="comment">#setup.kibana:</span></span><br><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">output.logstash:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;127.0.0.1:5044&quot;</span>]</span><br><span class="line">  <span class="attr">compression_level:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">processors:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_host_metadata:</span></span><br><span class="line">      <span class="attr">when.not.contains.tags:</span> <span class="string">forwarded</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_cloud_metadata:</span> <span class="string">~</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_docker_metadata:</span> <span class="string">~</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_kubernetes_metadata:</span> <span class="string">~</span></span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebeat -c filebeat.yml -e</span><br></pre></td></tr></table></figure><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><h2 id="grok-解析日志"><a href="#grok-解析日志" class="headerlink" title="grok 解析日志"></a><code>grok</code> 解析日志</h2><p>新版本的 <code>logstash</code> 自带 <code>grok</code> 插件</p><p>环境信息：</p><p>- 部署路径：<code>/opt/logstash</code><br>- <code>Log4j2</code> 对接方式：<code>Socket</code><br>- 部署地址：<code>192.168.2.8</code><br>- <code>logstash</code>建议使用 <a href="https://github.com/logstash-plugins/logstash-filter-grok"><code>grok</code></a>插件</p><blockquote><p><a href="*https://github.com/logstash-plugins/logstash-filter-grok*"><code>grok</code></a>是一个十分强大的<code>logstash filter</code>插件，他可以通过正则解析任意文本，将非结构化日志数据解析成结构化和方便查询的结构。<br><a href="https://grokconstructor.appspot.com/do/match">在线测试</a>  <a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/main/patterns">官方<code>pattern</code></a> <a href="*https://www.elastic.co/guide/en/logstash/8.2/working-with-plugins.html#listing-plugins*">插件安装</a><br>安装插件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看已安装</span></span><br><span class="line">/opt/logstash/bin/logstash-plugin list --verbose</span><br></pre></td></tr></table></figure><blockquote><p>离线安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/logstash/plugins</span><br><span class="line">cd  /opt/logstash/plugins</span><br><span class="line">wget https://github.com/logstash-plugins/logstash-filter-grok/archive/refs/tags/v4.4.3.tar.gz</span><br><span class="line">tar -zxvf v4.4.2.tar.gz</span><br><span class="line">vim /opt/logstash/Gemfile</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">写入</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gem <span class="string">&quot;logstash-filter-grok&quot;</span>, :path =&gt; <span class="string">&quot;path&quot;</span></span></span><br></pre></td></tr></table></figure><p>在线安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/logstash-plugin install logstash-filter-grok</span><br><span class="line">bin/logstash-plugin update logstash-filter-grok</span><br></pre></td></tr></table></figure></blockquote><h2 id="部分-grok-表达式"><a href="#部分-grok-表达式" class="headerlink" title="部分 grok 表达式"></a>部分 <code>grok</code> 表达式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">USERNAME [a-zA-Z0-9._-]+</span><br><span class="line">USER %&#123;USERNAME&#125;</span><br><span class="line">EMAILLOCALPART [a-zA-Z0-9!#$%&amp;&#x27;*+\-/=?^_`&#123;|&#125;~]&#123;1,64&#125;(?:\.[a-zA-Z0-9!#$%&amp;&#x27;*+\-/=?^_`&#123;|&#125;~]&#123;1,62&#125;)&#123;0,63&#125;</span><br><span class="line">EMAILADDRESS %&#123;EMAILLOCALPART&#125;@%&#123;HOSTNAME&#125;</span><br><span class="line">INT (?:[+-]?(?:[0-9]+))</span><br><span class="line">BASE10NUM (?&lt;![0-9.+-])(?&gt;[+-]?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+)))</span><br><span class="line">NUMBER (?:%&#123;BASE10NUM&#125;)</span><br><span class="line">BASE16NUM (?&lt;![0-9A-Fa-f])(?:[+-]?(?:0x)?(?:[0-9A-Fa-f]+))</span><br><span class="line">BASE16FLOAT \b(?&lt;![0-9A-Fa-f.])(?:[+-]?(?:0x)?(?:(?:[0-9A-Fa-f]+(?:\.[0-9A-Fa-f]*)?)|(?:\.[0-9A-Fa-f]+)))\b</span><br><span class="line"></span><br><span class="line">POSINT \b(?:[1-9][0-9]*)\b</span><br><span class="line">NONNEGINT \b(?:[0-9]+)\b</span><br><span class="line">WORD \b\w+\b</span><br><span class="line">NOTSPACE \S+</span><br><span class="line">SPACE \s*</span><br><span class="line">DATA .*?</span><br><span class="line">GREEDYDATA .*</span><br><span class="line">QUOTEDSTRING (?&gt;(?&lt;!\\)(?&gt;&quot;(?&gt;\\.|[^\\&quot;]+)+&quot;|&quot;&quot;|(?&gt;&#x27;(?&gt;\\.|[^\\&#x27;]+)+&#x27;)|&#x27;&#x27;|(?&gt;`(?&gt;\\.|[^\\`]+)+`)|``))</span><br><span class="line">UUID [A-Fa-f0-9]&#123;8&#125;-(?:[A-Fa-f0-9]&#123;4&#125;-)&#123;3&#125;[A-Fa-f0-9]&#123;12&#125;</span><br><span class="line"># URN, allowing use of RFC 2141 section 2.3 reserved characters</span><br><span class="line">URN urn:[0-9A-Za-z][0-9A-Za-z-]&#123;0,31&#125;:(?:%[0-9a-fA-F]&#123;2&#125;|[0-9A-Za-z()+,.:=@;$_!*&#x27;/?#-])+</span><br><span class="line"></span><br><span class="line"># Networking</span><br><span class="line">MAC (?:%&#123;CISCOMAC&#125;|%&#123;WINDOWSMAC&#125;|%&#123;COMMONMAC&#125;)</span><br><span class="line">CISCOMAC (?:(?:[A-Fa-f0-9]&#123;4&#125;\.)&#123;2&#125;[A-Fa-f0-9]&#123;4&#125;)</span><br><span class="line">WINDOWSMAC (?:(?:[A-Fa-f0-9]&#123;2&#125;-)&#123;5&#125;[A-Fa-f0-9]&#123;2&#125;)</span><br><span class="line">COMMONMAC (?:(?:[A-Fa-f0-9]&#123;2&#125;:)&#123;5&#125;[A-Fa-f0-9]&#123;2&#125;)</span><br><span class="line">IPV6 ((([0-9A-Fa-f]&#123;1,4&#125;:)&#123;7&#125;([0-9A-Fa-f]&#123;1,4&#125;|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;(:[0-9A-Fa-f]&#123;1,4&#125;|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;5&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,2&#125;)|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;4&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,3&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;3&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,4&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,2&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;2&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,5&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,3&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;1&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,6&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,4&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:))|(:(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,7&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,5&#125;:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d))&#123;3&#125;))|:)))(%.+)?</span><br><span class="line">IPV4 (?&lt;![0-9])(?:(?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]&#123;1,2&#125;|2[0-4][0-9]|25[0-5]))(?![0-9])</span><br><span class="line">IP (?:%&#123;IPV6&#125;|%&#123;IPV4&#125;)</span><br><span class="line">HOSTNAME \b(?:[0-9A-Za-z][0-9A-Za-z-]&#123;0,62&#125;)(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]&#123;0,62&#125;))*(\.?|\b)</span><br><span class="line">IPORHOST (?:%&#123;IP&#125;|%&#123;HOSTNAME&#125;)</span><br><span class="line">HOSTPORT %&#123;IPORHOST&#125;:%&#123;POSINT&#125;</span><br><span class="line"></span><br><span class="line"># paths (only absolute paths are matched)</span><br><span class="line">PATH (?:%&#123;UNIXPATH&#125;|%&#123;WINPATH&#125;)</span><br><span class="line">UNIXPATH (/[[[:alnum:]]_%!$@:.,+~-]*)+</span><br><span class="line">TTY (?:/dev/(pts|tty([pq])?)(\w+)?/?(?:[0-9]+))</span><br><span class="line">WINPATH (?&gt;[A-Za-z]+:|\\)(?:\\[^\\?*]*)+</span><br><span class="line">URIPROTO [A-Za-z]([A-Za-z0-9+\-.]+)+</span><br><span class="line">URIHOST %&#123;IPORHOST&#125;(?::%&#123;POSINT&#125;)?</span><br><span class="line"># uripath comes loosely from RFC1738, but mostly from what Firefox doesn&#x27;t turn into %XX</span><br><span class="line">URIPATH (?:/[A-Za-z0-9$.+!*&#x27;()&#123;&#125;,~:;=@#%&amp;_\-]*)+</span><br><span class="line">URIQUERY [A-Za-z0-9$.+!*&#x27;|()&#123;&#125;,~@#%&amp;/=:;_?\-\[\]&lt;&gt;]*</span><br><span class="line"># deprecated (kept due compatibility):</span><br><span class="line">URIPARAM \?%&#123;URIQUERY&#125;</span><br><span class="line">URIPATHPARAM %&#123;URIPATH&#125;(?:\?%&#123;URIQUERY&#125;)?</span><br><span class="line">URI %&#123;URIPROTO&#125;://(?:%&#123;USER&#125;(?::[^@]*)?@)?(?:%&#123;URIHOST&#125;)?(?:%&#123;URIPATH&#125;(?:\?%&#123;URIQUERY&#125;)?)?</span><br><span class="line"></span><br><span class="line"># Months: January, Feb, 3, 03, 12, December</span><br><span class="line">MONTH \b(?:[Jj]an(?:uary|uar)?|[Ff]eb(?:ruary|ruar)?|[Mm](?:a|ä)?r(?:ch|z)?|[Aa]pr(?:il)?|[Mm]a(?:y|i)?|[Jj]un(?:e|i)?|[Jj]ul(?:y|i)?|[Aa]ug(?:ust)?|[Ss]ep(?:tember)?|[Oo](?:c|k)?t(?:ober)?|[Nn]ov(?:ember)?|[Dd]e(?:c|z)(?:ember)?)\b</span><br><span class="line">MONTHNUM (?:0?[1-9]|1[0-2])</span><br><span class="line">MONTHNUM2 (?:0[1-9]|1[0-2])</span><br><span class="line">MONTHDAY (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])</span><br><span class="line"></span><br><span class="line"># Days: Monday, Tue, Thu, etc...</span><br><span class="line">DAY (?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)</span><br><span class="line"></span><br><span class="line"># Years?</span><br><span class="line">YEAR (?&gt;\d\d)&#123;1,2&#125;</span><br><span class="line">HOUR (?:2[0123]|[01]?[0-9])</span><br><span class="line">MINUTE (?:[0-5][0-9])</span><br><span class="line"># &#x27;60&#x27; is a leap second in most time standards and thus is valid.</span><br><span class="line">SECOND (?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?)</span><br><span class="line">TIME (?!&lt;[0-9])%&#123;HOUR&#125;:%&#123;MINUTE&#125;(?::%&#123;SECOND&#125;)(?![0-9])</span><br><span class="line"># datestamp is YYYY/MM/DD-HH:MM:SS.UUUU (or something like it)</span><br><span class="line">DATE_US %&#123;MONTHNUM&#125;[/-]%&#123;MONTHDAY&#125;[/-]%&#123;YEAR&#125;</span><br><span class="line">DATE_EU %&#123;MONTHDAY&#125;[./-]%&#123;MONTHNUM&#125;[./-]%&#123;YEAR&#125;</span><br><span class="line">ISO8601_TIMEZONE (?:Z|[+-]%&#123;HOUR&#125;(?::?%&#123;MINUTE&#125;))</span><br><span class="line">ISO8601_SECOND %&#123;SECOND&#125;</span><br><span class="line">TIMESTAMP_ISO8601 %&#123;YEAR&#125;-%&#123;MONTHNUM&#125;-%&#123;MONTHDAY&#125;[T ]%&#123;HOUR&#125;:?%&#123;MINUTE&#125;(?::?%&#123;SECOND&#125;)?%&#123;ISO8601_TIMEZONE&#125;?</span><br><span class="line">DATE %&#123;DATE_US&#125;|%&#123;DATE_EU&#125;</span><br><span class="line">DATESTAMP %&#123;DATE&#125;[- ]%&#123;TIME&#125;</span><br><span class="line">TZ (?:[APMCE][SD]T|UTC)</span><br><span class="line">DATESTAMP_RFC822 %&#123;DAY&#125; %&#123;MONTH&#125; %&#123;MONTHDAY&#125; %&#123;YEAR&#125; %&#123;TIME&#125; %&#123;TZ&#125;</span><br><span class="line">DATESTAMP_RFC2822 %&#123;DAY&#125;, %&#123;MONTHDAY&#125; %&#123;MONTH&#125; %&#123;YEAR&#125; %&#123;TIME&#125; %&#123;ISO8601_TIMEZONE&#125;</span><br><span class="line">DATESTAMP_OTHER %&#123;DAY&#125; %&#123;MONTH&#125; %&#123;MONTHDAY&#125; %&#123;TIME&#125; %&#123;TZ&#125; %&#123;YEAR&#125;</span><br><span class="line">DATESTAMP_EVENTLOG %&#123;YEAR&#125;%&#123;MONTHNUM2&#125;%&#123;MONTHDAY&#125;%&#123;HOUR&#125;%&#123;MINUTE&#125;%&#123;SECOND&#125;</span><br><span class="line"></span><br><span class="line"># Syslog Dates: Month Day HH:MM:SS</span><br><span class="line">SYSLOGTIMESTAMP %&#123;MONTH&#125; +%&#123;MONTHDAY&#125; %&#123;TIME&#125;</span><br><span class="line">PROG [\x21-\x5a\x5c\x5e-\x7e]+</span><br><span class="line">SYSLOGPROG %&#123;PROG:[process][name]&#125;(?:\[%&#123;POSINT:[process][pid]:int&#125;\])?</span><br><span class="line">SYSLOGHOST %&#123;IPORHOST&#125;</span><br><span class="line">SYSLOGFACILITY &lt;%&#123;NONNEGINT:[log][syslog][facility][code]:int&#125;.%&#123;NONNEGINT:[log][syslog][priority]:int&#125;&gt;</span><br><span class="line">HTTPDATE %&#123;MONTHDAY&#125;/%&#123;MONTH&#125;/%&#123;YEAR&#125;:%&#123;TIME&#125; %&#123;INT&#125;</span><br><span class="line"></span><br><span class="line"># Shortcuts</span><br><span class="line">QS %&#123;QUOTEDSTRING&#125;</span><br><span class="line"></span><br><span class="line"># Log formats</span><br><span class="line">SYSLOGBASE %&#123;SYSLOGTIMESTAMP:timestamp&#125; (?:%&#123;SYSLOGFACILITY&#125; )?%&#123;SYSLOGHOST:[host][hostname]&#125; %&#123;SYSLOGPROG&#125;:</span><br><span class="line"></span><br><span class="line"># Log Levels</span><br><span class="line">LOGLEVEL ([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo?(?:rmation)?|INFO?(?:RMATION)?|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="部分-grok-java-表达式"><a href="#部分-grok-java-表达式" class="headerlink" title="部分 grok java  表达式"></a>部分 <code>grok java </code> 表达式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">JAVACLASS (?:[a-zA-Z$_][a-zA-Z$_0-9]*\.)*[a-zA-Z$_][a-zA-Z$_0-9]*</span><br><span class="line">#Space is an allowed character to match special cases like &#x27;Native Method&#x27; or &#x27;Unknown Source&#x27;</span><br><span class="line">JAVAFILE (?:[a-zA-Z$_0-9. -]+)</span><br><span class="line">#Allow special &lt;init&gt;, &lt;clinit&gt; methods</span><br><span class="line">JAVAMETHOD (?:(&lt;(?:cl)?init&gt;)|[a-zA-Z$_][a-zA-Z$_0-9]*)</span><br><span class="line">#Line number is optional in special cases &#x27;Native method&#x27; or &#x27;Unknown source&#x27;</span><br><span class="line">JAVASTACKTRACEPART %&#123;SPACE&#125;at %&#123;JAVACLASS:[java][log][origin][class][name]&#125;\.%&#123;JAVAMETHOD:[log][origin][function]&#125;\(%&#123;JAVAFILE:[log][origin][file][name]&#125;(?::%&#123;INT:[log][origin][file][line]:int&#125;)?\)</span><br><span class="line"># Java Logs</span><br><span class="line">JAVATHREAD (?:[A-Z]&#123;2&#125;-Processor[\d]+)</span><br><span class="line">JAVALOGMESSAGE (?:.*)</span><br><span class="line"></span><br><span class="line"># MMM dd, yyyy HH:mm:ss eg: Jan 9, 2014 7:13:13 AM</span><br><span class="line"># matches default logging configuration in Tomcat 4.1, 5.0, 5.5, 6.0, 7.0</span><br><span class="line">CATALINA7_DATESTAMP %&#123;MONTH&#125; %&#123;MONTHDAY&#125;, %&#123;YEAR&#125; %&#123;HOUR&#125;:%&#123;MINUTE&#125;:%&#123;SECOND&#125; (?:AM|PM)</span><br><span class="line">CATALINA7_LOG %&#123;CATALINA7_DATESTAMP:timestamp&#125; %&#123;JAVACLASS:[java][log][origin][class][name]&#125;(?: %&#123;JAVAMETHOD:[log][origin][function]&#125;)?\s*(?:%&#123;LOGLEVEL:[log][level]&#125;:)? %&#123;JAVALOGMESSAGE:message&#125;</span><br><span class="line"></span><br><span class="line"># 31-Jul-2020 16:40:38.578 in Tomcat 8.5/9.0</span><br><span class="line">CATALINA8_DATESTAMP %&#123;MONTHDAY&#125;-%&#123;MONTH&#125;-%&#123;YEAR&#125; %&#123;HOUR&#125;:%&#123;MINUTE&#125;:%&#123;SECOND&#125;</span><br><span class="line">CATALINA8_LOG %&#123;CATALINA8_DATESTAMP:timestamp&#125; %&#123;LOGLEVEL:[log][level]&#125; \[%&#123;DATA:[java][log][origin][thread][name]&#125;\] %&#123;JAVACLASS:[java][log][origin][class][name]&#125;\.(?:%&#123;JAVAMETHOD:[log][origin][function]&#125;)? %&#123;JAVALOGMESSAGE:message&#125;</span><br><span class="line"></span><br><span class="line">CATALINA_DATESTAMP (?:%&#123;CATALINA8_DATESTAMP&#125;)|(?:%&#123;CATALINA7_DATESTAMP&#125;)</span><br><span class="line">CATALINALOG (?:%&#123;CATALINA8_LOG&#125;)|(?:%&#123;CATALINA7_LOG&#125;)</span><br><span class="line"></span><br><span class="line"># in Tomcat 5.5, 6.0, 7.0 it is the same as catalina.out logging format</span><br><span class="line">TOMCAT7_LOG %&#123;CATALINA7_LOG&#125;</span><br><span class="line">TOMCAT8_LOG %&#123;CATALINA8_LOG&#125;</span><br><span class="line"></span><br><span class="line"># NOTE: a weird log we started with - not sure what TC version this should match out of the box (due the | delimiters)</span><br><span class="line">TOMCATLEGACY_DATESTAMP %&#123;YEAR&#125;-%&#123;MONTHNUM&#125;-%&#123;MONTHDAY&#125; %&#123;HOUR&#125;:%&#123;MINUTE&#125;:%&#123;SECOND&#125;(?: %&#123;ISO8601_TIMEZONE&#125;)?</span><br><span class="line">TOMCATLEGACY_LOG %&#123;TOMCATLEGACY_DATESTAMP:timestamp&#125; \| %&#123;LOGLEVEL:[log][level]&#125; \| %&#123;JAVACLASS:[java][log][origin][class][name]&#125; - %&#123;JAVALOGMESSAGE:message&#125;</span><br><span class="line"></span><br><span class="line">TOMCAT_DATESTAMP (?:%&#123;CATALINA8_DATESTAMP&#125;)|(?:%&#123;CATALINA7_DATESTAMP&#125;)|(?:%&#123;TOMCATLEGACY_DATESTAMP&#125;)</span><br><span class="line"></span><br><span class="line">TOMCATLOG (?:%&#123;TOMCAT8_LOG&#125;)|(?:%&#123;TOMCAT7_LOG&#125;)|(?:%&#123;TOMCATLEGACY_LOG&#125;)</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/af5eafbf/">https://github.com/maxzhao-it/blog/post/af5eafbf/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://artifacts.elastic.co/downloads/logstash/logstash-8.11.1-linux-x86_64.tar.gz&quot;&gt;&lt;code&gt;logstas
      
    
    </summary>
    
    
      <category term="ELK" scheme="https://github.com/maxzhao-it/blog/categories/ELK/"/>
    
    
      <category term="ELK" scheme="https://github.com/maxzhao-it/blog/tags/ELK/"/>
    
      <category term="Filebeat" scheme="https://github.com/maxzhao-it/blog/tags/Filebeat/"/>
    
      <category term="Logstash" scheme="https://github.com/maxzhao-it/blog/tags/Logstash/"/>
    
      <category term="log4j2" scheme="https://github.com/maxzhao-it/blog/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>Logstash-8.x配置多个pipelines</title>
    <link href="https://github.com/maxzhao-it/blog/post/f7c3a7a/"/>
    <id>https://github.com/maxzhao-it/blog/post/f7c3a7a/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:32.131Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.elastic.co/guide/en/logstash/8.11/multiple-pipelines.html">官方文档</a></p><p>默认安装路径  <code>/opt/logstash </code> 、 <code>/opt/filebeat </code></p></blockquote><h2 id="pipelines-yml-配置"><a href="#pipelines-yml-配置" class="headerlink" title="pipelines.yml 配置"></a><code>pipelines.yml</code> 配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">pipeline.id:</span> <span class="string">my-pipeline_1</span></span><br><span class="line">  <span class="attr">path.config:</span> <span class="string">&quot;/opt/logstash/config/p1.conf&quot;</span></span><br><span class="line">  <span class="attr">pipeline.workers:</span> <span class="number">3</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">pipeline.id:</span> <span class="string">my-other-pipeline</span></span><br><span class="line">  <span class="attr">path.config:</span> <span class="string">&quot;/opt/logstash/config/p2.conf&quot;</span></span><br><span class="line">  <span class="attr">queue.type:</span> <span class="string">persisted</span></span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/f7c3a7a/">https://github.com/maxzhao-it/blog/post/f7c3a7a/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/logstash/8.11/multiple-pipelines.html&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;默认安装路径  &lt;code&gt;/opt/logstash 
      
    
    </summary>
    
    
      <category term="ELK" scheme="https://github.com/maxzhao-it/blog/categories/ELK/"/>
    
    
      <category term="ELK" scheme="https://github.com/maxzhao-it/blog/tags/ELK/"/>
    
      <category term="Logstash" scheme="https://github.com/maxzhao-it/blog/tags/Logstash/"/>
    
      <category term="log4j2" scheme="https://github.com/maxzhao-it/blog/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>PVE8安装win11</title>
    <link href="https://github.com/maxzhao-it/blog/post/af1c9197/"/>
    <id>https://github.com/maxzhao-it/blog/post/af1c9197/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.771Z</updated>
    
    <content type="html"><![CDATA[<p>virtio-win-0.1.229.iso<br>Win11_23H2_Chinese_Simplified_x64.iso</p><h2 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h2><p>local -&gt; ISO 镜像</p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p>操作系统选择 Microsoft Windows </p><p>机型 q35<br>SCSI VirtIO SCSI single<br>BIOS OVMF (UEFI)<br>添加 TMP<br>格式 QEMU映像格式 (qcow2)</p><p>磁盘:<br>总线 SCSI<br>缓存 Write back (不安全)<br>格式 QEMU映像格式 (qcow2)<br>SSD 仿真 勾选</p><p>CPU：<br>类别 host</p><h3 id="添加ISO"><a href="#添加ISO" class="headerlink" title="添加ISO"></a>添加ISO</h3><p>添加 CD</p><p>IDE</p><p>virtio-win-0.1.229.iso</p><h3 id="选项启动顺序"><a href="#选项启动顺序" class="headerlink" title="选项启动顺序"></a>选项启动顺序</h3><p>scsi0  ide0 ide2  不能使用 ide1 </p><h2 id="跳过登录"><a href="#跳过登录" class="headerlink" title="跳过登录"></a>跳过登录</h2><p>shift + F10</p><p>oobe\bypassnro</p><h2 id="win11"><a href="#win11" class="headerlink" title="win11"></a>win11</h2><p>激活<br>powershell</p><p>irm <a href="https://massgrave.dev/get">https://massgrave.dev/get</a> | iex<br>选 1</p><p>离线的可以下载  MAS <a href="https://link.zhihu.com/?target=https://github.com/massgravel/Microsoft-Activation-Scripts">https://link.zhihu.com/?target=https%3A//github.com/massgravel/Microsoft-Activation-Scripts</a></p><h2 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h2><p>virtio-win-0.1.229.iso<br>中的 virtio-gt-6x</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/af1c9197/">https://github.com/maxzhao-it/blog/post/af1c9197/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;virtio-win-0.1.229.iso&lt;br&gt;Win11_23H2_Chinese_Simplified_x64.iso&lt;/p&gt;
&lt;h2 id=&quot;上传镜像&quot;&gt;&lt;a href=&quot;#上传镜像&quot; class=&quot;headerlink&quot; title=&quot;上传镜像&quot;&gt;&lt;/a&gt;上传镜
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>PVE8添加备份存储空间</title>
    <link href="https://github.com/maxzhao-it/blog/post/53db8c2/"/>
    <id>https://github.com/maxzhao-it/blog/post/53db8c2/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="找到磁盘"><a href="#找到磁盘" class="headerlink" title="找到磁盘"></a>找到磁盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk -f</span><br></pre></td></tr></table></figure><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>这里只解释用单独硬盘打分区（<code>UEFI+GPT</code>）</p><p>我们选择 2 个分区，</p><ol><li>fat16 为 esp</li><li>ext4 为 系统</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lsblk  <span class="comment"># 查看硬盘</span></span><br><span class="line">fdisk /dev/sda  <span class="comment"># sda是需要甄别的，我的安装硬盘就是 sda</span></span><br><span class="line"><span class="comment"># 这里会提示操作  输入</span></span><br><span class="line">n <span class="comment">#回车</span></span><br><span class="line"><span class="comment">#回车</span></span><br><span class="line">+300M <span class="comment"># 回车 这里是分区的大小 </span></span><br><span class="line"><span class="comment">#输入</span></span><br><span class="line">n <span class="comment">#回车</span></span><br><span class="line"><span class="comment">#回车</span></span><br><span class="line"><span class="comment">#回车</span></span><br><span class="line">w <span class="comment">#保存</span></span><br></pre></td></tr></table></figure><p>分区还是很简单的，下面是格式化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1  <span class="comment"># 多次回车就可以啦</span></span><br><span class="line">lsblk -f <span class="comment"># 查询全部池畔的格式</span></span><br></pre></td></tr></table></figure><h3 id="重启自动挂载"><a href="#重启自动挂载" class="headerlink" title="重启自动挂载"></a>重启自动挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/data</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/sda1 /mnt/data ext4 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br><span class="line">mount -a</span><br><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><h2 id="pve备份"><a href="#pve备份" class="headerlink" title="pve备份"></a>pve备份</h2><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/53db8c2/">https://github.com/maxzhao-it/blog/post/53db8c2/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;找到磁盘&quot;&gt;&lt;a href=&quot;#找到磁盘&quot; class=&quot;headerlink&quot; title=&quot;找到磁盘&quot;&gt;&lt;/a&gt;找到磁盘&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="fdisk" scheme="https://github.com/maxzhao-it/blog/tags/fdisk/"/>
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>PVE8添加默认空间到跟路径</title>
    <link href="https://github.com/maxzhao-it/blog/post/c369e302/"/>
    <id>https://github.com/maxzhao-it/blog/post/c369e302/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-26T23:43:18.625Z</updated>
    
    <content type="html"><![CDATA[<p>通过 web 界面删除与 local 同一块磁盘的其它存储</p><h1 id="磁盘扩容："><a href="#磁盘扩容：" class="headerlink" title="磁盘扩容："></a>磁盘扩容：</h1><p>lvscan 发现 &#x2F;dev&#x2F;pve&#x2F;data 是有空间的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l +100%FREE -r pve/root</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/c369e302/">https://github.com/maxzhao-it/blog/post/c369e302/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过 web 界面删除与 local 同一块磁盘的其它存储&lt;/p&gt;
&lt;h1 id=&quot;磁盘扩容：&quot;&gt;&lt;a href=&quot;#磁盘扩容：&quot; class=&quot;headerlink&quot; title=&quot;磁盘扩容：&quot;&gt;&lt;/a&gt;磁盘扩容：&lt;/h1&gt;&lt;p&gt;lvscan 发现 &amp;#x2F;dev&amp;#
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>PVE8给虚拟机添加一整块硬盘</title>
    <link href="https://github.com/maxzhao-it/blog/post/e43b11ec/"/>
    <id>https://github.com/maxzhao-it/blog/post/e43b11ec/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="找到磁盘"><a href="#找到磁盘" class="headerlink" title="找到磁盘"></a>找到磁盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /dev/disk/by-id/</span><br><span class="line"><span class="comment"># 给电脑增加磁盘</span></span><br><span class="line">qm <span class="built_in">set</span> 100 -sata3 /dev/disk/by-id/ata-*****</span><br></pre></td></tr></table></figure><p>成功后会输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update VM 100：-sata3  /dev/disk/by-id/ata-*****</span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep ata /etc/pve/qemu-server/100.conf</span><br></pre></td></tr></table></figure><p>有会输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sata3: /dev/disk/by-id/ata-*****</span><br></pre></td></tr></table></figure><h2 id="重启虚拟机"><a href="#重启虚拟机" class="headerlink" title="重启虚拟机"></a>重启虚拟机</h2><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm <span class="built_in">set</span> 101 -delete sata3</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/e43b11ec/">https://github.com/maxzhao-it/blog/post/e43b11ec/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;找到磁盘&quot;&gt;&lt;a href=&quot;#找到磁盘&quot; class=&quot;headerlink&quot; title=&quot;找到磁盘&quot;&gt;&lt;/a&gt;找到磁盘&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>PVE8配置国内源</title>
    <link href="https://github.com/maxzhao-it/blog/post/1226ea39/"/>
    <id>https://github.com/maxzhao-it/blog/post/1226ea39/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:59:20.077Z</updated>
    
    <content type="html"><![CDATA[<p>mv &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-enterprise.list &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-enterprise.list-bak</p><p>Proxmox软件源更换</p><p>echo “deb <a href="https://mirrors.ustc.edu.cn/proxmox/debian/pve">https://mirrors.ustc.edu.cn/proxmox/debian/pve</a> bookworm pve-no-subscription” &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-no-subscription.list<br>apt update &amp;&amp; apt dist-upgrade     #更新软件，可不执行</p><p>Debian系统源更换</p><p>sed -i.bak “s#<a href="http://ftp.debian.org/#https://repo.huaweicloud.com#g&quot;">http://ftp.debian.org#https://repo.huaweicloud.com#g&quot;</a> &#x2F;etc&#x2F;apt&#x2F;sources.list     #华为Debian源<br>sed -i “s#<a href="http://security.debian.org/#https://repo.huaweicloud.com/debian-security#g&quot;">http://security.debian.org#https://repo.huaweicloud.com/debian-security#g&quot;</a> &#x2F;etc&#x2F;apt&#x2F;sources.list     #华为Debian源<br>apt update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  –fix-missing</p><p>LXC仓库源更换</p><p>sed -i.bak “s#<a href="http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g&quot;">http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g&quot;</a> &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;PVE&#x2F;APLInfo.pm<br>wget -O &#x2F;var&#x2F;lib&#x2F;pve-manager&#x2F;apl-info&#x2F;mirrors.ustc.edu.cn <a href="https://mirrors.ustc.edu.cn/proxmox/images/aplinfo-pve-7.dat">https://mirrors.ustc.edu.cn/proxmox/images/aplinfo-pve-7.dat</a><br>systemctl restart pvedaemon</p><p>CEPH源更换</p><p>echo “deb <a href="https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy">https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy</a> bookworm no-subscription” &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ceph.list     #中科大源<br>sed -i.bak “s#<a href="http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g&quot;">http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g&quot;</a> &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;PVE&#x2F;CLI&#x2F;pveceph.pm     #中科大源</p><p>删除订阅弹窗<br>sed -Ezi.bak “s&#x2F;(Ext.Msg.show({\s+title: gettext(‘No valid sub)&#x2F;void({ //\1&#x2F;g” &#x2F;usr&#x2F;share&#x2F;javascript&#x2F;proxmox-widget-toolkit&#x2F;proxmoxlib.js &amp;&amp; systemctl restart pveproxy.service<br> 执行完成后，浏览器Ctrl+F5强制刷新缓存</p><h1 id="安装常用依赖"><a href="#安装常用依赖" class="headerlink" title="安装常用依赖"></a>安装常用依赖</h1><p>apt install -y vim  net-tools<br>apt install -y gcc </p><h1 id="磁盘扩容："><a href="#磁盘扩容：" class="headerlink" title="磁盘扩容："></a>磁盘扩容：</h1><p>lvscan 发现 &#x2F;dev&#x2F;pve&#x2F;data 是有空间的<br>lvextend -l +100%FREE -r pve&#x2F;root</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/1226ea39/">https://github.com/maxzhao-it/blog/post/1226ea39/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mv &amp;#x2F;etc&amp;#x2F;apt&amp;#x2F;sources.list.d&amp;#x2F;pve-enterprise.list &amp;#x2F;etc&amp;#x2F;apt&amp;#x2F;sources.list.d&amp;#x2F;pve-enterprise.list-bak&lt;/p
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
      <category term="apt" scheme="https://github.com/maxzhao-it/blog/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>PVE开启IPv6</title>
    <link href="https://github.com/maxzhao-it/blog/post/dcf1ae8e/"/>
    <id>https://github.com/maxzhao-it/blog/post/dcf1ae8e/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.730Z</updated>
    
    <content type="html"><![CDATA[<p>vim &#x2F;etc&#x2F;sysctl.conf</p><p>在末尾添加</p><p>net.ipv6.conf.all.accept_ra&#x3D;2<br>net.ipv6.conf.default.accept_ra&#x3D;2<br>net.ipv6.conf.vmbr0.accept_ra&#x3D;2<br>net.ipv6.conf.all.autoconf&#x3D;1<br>net.ipv6.conf.default.autoconf&#x3D;1<br>net.ipv6.conf.vmbr0.autoconf&#x3D;1</p><p>然后执行sysctl -p或者重启主机</p><p>输入</p><p>apt-get install net-tools -y<br>ifconfig</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/dcf1ae8e/">https://github.com/maxzhao-it/blog/post/dcf1ae8e/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vim &amp;#x2F;etc&amp;#x2F;sysctl.conf&lt;/p&gt;
&lt;p&gt;在末尾添加&lt;/p&gt;
&lt;p&gt;net.ipv6.conf.all.accept_ra&amp;#x3D;2&lt;br&gt;net.ipv6.conf.default.accept_ra&amp;#x3D;2&lt;br&gt;net.ip
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>PVE8配置核显集显</title>
    <link href="https://github.com/maxzhao-it/blog/post/fecbe378/"/>
    <id>https://github.com/maxzhao-it/blog/post/fecbe378/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.777Z</updated>
    
    <content type="html"><![CDATA[<h1 id="显卡声卡"><a href="#显卡声卡" class="headerlink" title="显卡声卡"></a>显卡声卡</h1><h2 id="IOMMU支持"><a href="#IOMMU支持" class="headerlink" title="IOMMU支持"></a>IOMMU支持</h2><p>vim &#x2F;etc&#x2F;default&#x2F;grub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on iommu=pt video=vesafb:off video=efifb:off video=simplefb:off&quot;</span><br></pre></td></tr></table></figure><h2 id="添加内核模块"><a href="#添加内核模块" class="headerlink" title="添加内核模块"></a>添加内核模块</h2><p>vim &#x2F;etc&#x2F;modules</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vfio</span><br><span class="line">vfio_iommu_type1</span><br><span class="line">vfio_pci</span><br><span class="line">vfio_virqfd</span><br></pre></td></tr></table></figure><h2 id="禁用显卡"><a href="#禁用显卡" class="headerlink" title="禁用显卡"></a>禁用显卡</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/modprobe.d/pve-blacklist.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="驱动内名单"><a href="#驱动内名单" class="headerlink" title="驱动内名单"></a>驱动内名单</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 独显</span><br><span class="line">blacklist nouveau</span><br><span class="line">blacklist nvidia</span><br><span class="line">blacklist nvidiafb</span><br><span class="line"></span><br><span class="line"># 核显</span><br><span class="line">blacklist snd_hda_intel</span><br><span class="line">blacklist snd_hda_codec_hdmi</span><br><span class="line">blacklist i915</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对应的虚拟机添加 硬件-添加-PCI设备-Raw Device</p><p>选择对应的选卡，设置主GPU，显示设置为 <code>无</code></p><h2 id="查询显卡和声卡"><a href="#查询显卡和声卡" class="headerlink" title="查询显卡和声卡"></a>查询显卡和声卡</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lspci -nn |grep VGA </span><br><span class="line">lspci -nn |grep Aud</span><br></pre></td></tr></table></figure><p>最后的 8086:7ad0 是ID 10de:1c03,10de:10f1,8086:7ad0</p><h3 id="加入直通"><a href="#加入直通" class="headerlink" title="加入直通"></a>加入直通</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/modprobe.d/vfio.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options vfio-pci ids=8086:7ad0,10de:10f1,10de:1c03</span><br></pre></td></tr></table></figure><h3 id="防止-VM-死机"><a href="#防止-VM-死机" class="headerlink" title="防止 VM 死机"></a>防止 VM 死机</h3><p>vim &#x2F;etc&#x2F;modprobe.d&#x2F;kvm.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options kvm ignore_msrs=1</span><br></pre></td></tr></table></figure><h3 id="更新内核"><a href="#更新内核" class="headerlink" title="更新内核"></a>更新内核</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update-grub</span><br><span class="line">update-initramfs -k all -u</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>重启后查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod |grep vifo</span><br></pre></td></tr></table></figure><h2 id="配置核显输出"><a href="#配置核显输出" class="headerlink" title="配置核显输出"></a>配置核显输出</h2><p>web界面配置</p><p>对应的虚拟机添加 硬件-添加-PCI设备-Raw Device</p><h2 id="配置独显"><a href="#配置独显" class="headerlink" title="配置独显"></a>配置独显</h2><p>添加pcie 选择 独显</p><p>Raw Device</p><p>主GPU 不要选<br>所有功能<br>PCI-Express</p><p>安装显卡驱动</p><h1 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h1><p>&#x2F;etc&#x2F;modprobe.d&#x2F;pve-blacklist.conf</p><p>里面只需要一个参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options vfio_iommu_type1 allow_unsafe_interrupts=1</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/fecbe378/">https://github.com/maxzhao-it/blog/post/fecbe378/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;显卡声卡&quot;&gt;&lt;a href=&quot;#显卡声卡&quot; class=&quot;headerlink&quot; title=&quot;显卡声卡&quot;&gt;&lt;/a&gt;显卡声卡&lt;/h1&gt;&lt;h2 id=&quot;IOMMU支持&quot;&gt;&lt;a href=&quot;#IOMMU支持&quot; class=&quot;headerlink&quot; title=&quot;IOM
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>PVE错误集合</title>
    <link href="https://github.com/maxzhao-it/blog/post/86a90e71/"/>
    <id>https://github.com/maxzhao-it/blog/post/86a90e71/</id>
    <published>2023-11-20T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无法关闭虚拟机"><a href="#无法关闭虚拟机" class="headerlink" title="无法关闭虚拟机"></a>无法关闭虚拟机</h2><p>qm stop 101  # 编号</p><p>TASK ERROR: can’t lock file ‘&#x2F;var&#x2F;lock&#x2F;qemu-server&#x2F;lock-101.conf’ - received interrupt</p><p>rm &#x2F;var&#x2F;lock&#x2F;qemu-server&#x2F;lock-101.conf</p><h2 id="开机进入-shell"><a href="#开机进入-shell" class="headerlink" title="开机进入 shell"></a>开机进入 shell</h2><p>执行 reset</p><p>系统光盘放在引导的第一位</p><h2 id="swtpm-setup-Not-overwriting-existing-state-file"><a href="#swtpm-setup-Not-overwriting-existing-state-file" class="headerlink" title="swtpm_setup: Not overwriting existing state file."></a>swtpm_setup: Not overwriting existing state file.</h2><p>kvm: -device ide-cd,bus&#x3D;ide.0,unit&#x3D;1,drive&#x3D;drive-ide1,id&#x3D;ide1,bootindex&#x3D;102: Can’t create IDE unit 1, bus supports only 1 units<br>stopping swtpm instance (pid 6199) due to QEMU startup error<br>TASK ERROR: start failed: QEMU exited with code 1</p><p>使用机器类型q35时，只能使用ide0和ide2</p><p>ide0   &#x3D;  ventoy-1.0.96-livecd.iso<br>ide2   &#x3D;  zh-cn_windows_11_business_editions_version_22h2_updated_feb_2023_x64_dvd_632649a2.iso</p><h2 id="安装无法识别硬盘（scsi-无法识别）"><a href="#安装无法识别硬盘（scsi-无法识别）" class="headerlink" title="安装无法识别硬盘（scsi 无法识别）"></a>安装无法识别硬盘（scsi 无法识别）</h2><p><a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/</a></p><p>下载驱动 virtio-win-0.1.229.iso</p><p>挂载iso后，安装时加载驱动  vioscsi\w11\amd64</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/86a90e71/">https://github.com/maxzhao-it/blog/post/86a90e71/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;无法关闭虚拟机&quot;&gt;&lt;a href=&quot;#无法关闭虚拟机&quot; class=&quot;headerlink&quot; title=&quot;无法关闭虚拟机&quot;&gt;&lt;/a&gt;无法关闭虚拟机&lt;/h2&gt;&lt;p&gt;qm stop 101  # 编号&lt;/p&gt;
&lt;p&gt;TASK ERROR: can’t lock fi
      
    
    </summary>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/categories/PVE/"/>
    
    
      <category term="PVE" scheme="https://github.com/maxzhao-it/blog/tags/PVE/"/>
    
      <category term="proxmox" scheme="https://github.com/maxzhao-it/blog/tags/proxmox/"/>
    
      <category term="VM" scheme="https://github.com/maxzhao-it/blog/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>Linux使用fdisk磁盘格式化与挂载</title>
    <link href="https://github.com/maxzhao-it/blog/post/21578818/"/>
    <id>https://github.com/maxzhao-it/blog/post/21578818/</id>
    <published>2023-11-18T16:00:00.000Z</published>
    <updated>2023-11-25T05:55:25.756Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h3><p>这里只解释用单独硬盘打分区（<code>UEFI+GPT</code>）</p><p>我们选择 2 个分区， </p><ol><li>fat16 为 esp </li><li>ext4 为 系统</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lsblk  <span class="comment"># 查看硬盘</span></span><br><span class="line">fdisk /dev/sda  <span class="comment"># sda是需要甄别的，我的安装硬盘就是 sda</span></span><br><span class="line"><span class="comment"># 这里会提示操作  输入</span></span><br><span class="line">n <span class="comment">#回车</span></span><br><span class="line"><span class="comment">#回车</span></span><br><span class="line">+300M <span class="comment"># 回车 这里是分区的大小 </span></span><br><span class="line"><span class="comment">#输入</span></span><br><span class="line">n <span class="comment">#回车</span></span><br><span class="line"><span class="comment">#回车</span></span><br><span class="line"><span class="comment">#回车</span></span><br><span class="line">w <span class="comment">#保存</span></span><br></pre></td></tr></table></figure><p>分区还是很简单的，下面是格式化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F16 /dev/sda1 <span class="comment"># sda 是上面我们使用的硬盘</span></span><br><span class="line">mkfs.ext4 /dev/sda1  <span class="comment"># 多次回车就可以啦</span></span><br><span class="line">lsblk -f <span class="comment"># 查询全部池畔的格式</span></span><br></pre></td></tr></table></figure><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /mnt  <span class="comment"># sda 是上面我们使用的硬盘</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt/boot/EFI</span><br><span class="line">mount /dev/sda1 /mnt/boot/EFI </span><br><span class="line">lsblk  <span class="comment">#可以详细的看到我们的挂载位置</span></span><br></pre></td></tr></table></figure><h3 id="重启自动挂载"><a href="#重启自动挂载" class="headerlink" title="重启自动挂载"></a>重启自动挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/data</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/sda1 /mnt/data ext4 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br><span class="line">mount -a</span><br><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/21578818/">https://github.com/maxzhao-it/blog/post/21578818/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;分区&quot;&gt;&lt;a href=&quot;#分区&quot; class=&quot;headerlink&quot; title=&quot;分区&quot;&gt;&lt;/a&gt;分区&lt;/h3&gt;&lt;p&gt;这里只解释用单独硬盘打分区（&lt;code&gt;UEFI+GPT&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;我们选择 2 个分区， &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/categories/Linux/"/>
    
      <category term="fdisk" scheme="https://github.com/maxzhao-it/blog/categories/Linux/fdisk/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="fdisk" scheme="https://github.com/maxzhao-it/blog/tags/fdisk/"/>
    
  </entry>
  
  <entry>
    <title>Python操作文件</title>
    <link href="https://github.com/maxzhao-it/blog/post/cd61337e/"/>
    <id>https://github.com/maxzhao-it/blog/post/cd61337e/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-21T07:35:15.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作文件"><a href="#操作文件" class="headerlink" title="操作文件"></a>操作文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="built_in">dir</span> = <span class="string">&#x27;/data&#x27;</span></span><br><span class="line">file = <span class="string">&#x27;/data/1.txt&#x27;</span></span><br><span class="line"><span class="comment"># 创建单个目录</span></span><br><span class="line">os.mkdir(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 创建多层目录</span></span><br><span class="line">os.makedirs(<span class="built_in">dir</span> + <span class="string">&#x27;/123&#x27;</span>)</span><br><span class="line"><span class="comment"># 复制文件</span></span><br><span class="line">shutil.copyfile(<span class="string">&#x27;old&#x27;</span>, <span class="string">&#x27;new&#x27;</span>)</span><br><span class="line"><span class="comment"># 复制文件夹</span></span><br><span class="line">shutil.copytree(<span class="string">&#x27;olddir&#x27;</span>, <span class="string">&#x27;newdir&#x27;</span>)</span><br><span class="line"><span class="comment"># 重命名文件或目录</span></span><br><span class="line">os.rename(<span class="string">&#x27;odl&#x27;</span>, <span class="string">&#x27;new&#x27;</span>)</span><br><span class="line"><span class="comment"># 移动文件或目录</span></span><br><span class="line">shutil.move(<span class="string">&#x27;old&#x27;</span>, <span class="string">&#x27;new&#x27;</span>)</span><br><span class="line"><span class="comment"># 删除空目录</span></span><br><span class="line">os.rmdir(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 删除空目录</span></span><br><span class="line">os.removedirs(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 获取路径下的所有文件</span></span><br><span class="line">os.listdir(<span class="built_in">dir</span>)</span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line">os.remove(file)</span><br><span class="line"><span class="comment"># 判断是否存在</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="built_in">dir</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 判断是否文件</span></span><br><span class="line"><span class="keyword">if</span> os.path.isfile(file):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 判断是否目录</span></span><br><span class="line"><span class="keyword">if</span> os.path.isdir(<span class="built_in">dir</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 判断是否绝对路径</span></span><br><span class="line"><span class="keyword">if</span> os.path.isabs(<span class="built_in">dir</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 获取文件属性</span></span><br><span class="line">os.stat(file)</span><br><span class="line"><span class="comment"># 文件大小</span></span><br><span class="line">os.stat(file).st_size</span><br><span class="line">os.path.getsize(file)</span><br><span class="line"><span class="comment"># 获取文件名</span></span><br><span class="line">os.path.basename(filePath)</span><br><span class="line"><span class="comment"># 获取路径</span></span><br><span class="line">os.path.dirname(filePath)</span><br><span class="line"><span class="comment"># 获取绝对路径</span></span><br><span class="line">os.path.abspath(file)</span><br><span class="line"><span class="comment"># 获取文件的创建时间</span></span><br><span class="line">fromtimestamp = datetime.fromtimestamp(<span class="built_in">int</span>(os.path.getctime(filePath))).date()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(fromtimestamp))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件后缀</span></span><br><span class="line">basename = os.path.basename(path) <span class="comment"># 获取文件名</span></span><br><span class="line">extension = os.path.splitext(basename)[<span class="number">1</span>] <span class="comment"># 获取文件后缀</span></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line"><span class="built_in">sorted</span>(os.listdir(path))</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/cd61337e/">https://github.com/maxzhao-it/blog/post/cd61337e/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作文件&quot;&gt;&lt;a href=&quot;#操作文件&quot; class=&quot;headerlink&quot; title=&quot;操作文件&quot;&gt;&lt;/a&gt;操作文件&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python操作视频和音频</title>
    <link href="https://github.com/maxzhao-it/blog/post/3756efb0/"/>
    <id>https://github.com/maxzhao-it/blog/post/3756efb0/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-21T07:35:15.160Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install moviepy -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install pandas -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip3 install pydub -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> moviepy.editor <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义最大允许的线程数量</span></span><br><span class="line">max_threads = <span class="number">5</span></span><br><span class="line"><span class="comment"># 创建 Semaphore 对象</span></span><br><span class="line">semaphore = threading.Semaphore(max_threads)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">asyncConcat</span>(<span class="params">startPath, endPath, middlePath, middleAudioPath, outputPath, semaphore</span>):</span><br><span class="line">    <span class="keyword">with</span> semaphore:</span><br><span class="line">        concat(startPath, endPath, middlePath, middleAudioPath, outputPath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">concat</span>(<span class="params">startPath, endPath, middlePath, middleAudioPath, outputPath</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        start = VideoFileClip(startPath)</span><br><span class="line">        end = VideoFileClip(endPath)</span><br><span class="line">        middleVideo = VideoFileClip(middlePath)</span><br><span class="line">        middleAudio = AudioFileClip(middleAudioPath)</span><br><span class="line">        <span class="comment"># 正文持续时间</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;持续时间=&#x27;</span>, middleVideo.duration)</span><br><span class="line">        <span class="comment"># 音频长度剪切</span></span><br><span class="line">        middleAudio = middleAudio.set_duration(middleVideo.duration)</span><br><span class="line">        <span class="comment"># 替换音频</span></span><br><span class="line">        middleVideo = middleVideo.set_audio(middleAudio)</span><br><span class="line">        <span class="comment"># 分辨率</span></span><br><span class="line">        resolution = middleVideo.size</span><br><span class="line">        width, height = resolution</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;分辨率=&#x27;</span>, resolution)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;分辨率：宽=&#x27;</span>, width, <span class="string">&#x27;高：&#x27;</span>, height)</span><br><span class="line">        <span class="comment"># 等比例放大或缩小</span></span><br><span class="line">        start = start.resize(resolution)</span><br><span class="line">        end = end.resize(resolution)</span><br><span class="line">        <span class="comment"># 上下</span></span><br><span class="line">        <span class="comment"># resultClip = clips_array([[start], [middle], [end]])</span></span><br><span class="line">        <span class="comment"># 左右</span></span><br><span class="line">        <span class="comment"># resultClip = clips_array([[start, middle, end]])</span></span><br><span class="line">        <span class="comment"># 前后</span></span><br><span class="line">        resultClip = concatenate_videoclips([start, middleVideo, end])</span><br><span class="line">        startTime = time.time()</span><br><span class="line">        basename = os.path.basename(middlePath)</span><br><span class="line">        basename = basename.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-已剪辑.&#x27;</span>)</span><br><span class="line">        resultClip.write_videofile(outputPath + basename, threads=<span class="number">50</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;剪辑使用时间：&#x27;</span>, time.time() - startTime)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;计算视频失败：&#x27;</span>, e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    startPath = <span class="string">&quot;D:\\00-自媒体计划\\AI-start.mp4&quot;</span></span><br><span class="line">    endPath = <span class="string">&quot;D:\\00-自媒体计划\\AI-end.mp4&quot;</span></span><br><span class="line">    middleDir = <span class="string">&quot;f:\\Videos\\4K Tokkit\\\dbxbqm22\\&quot;</span></span><br><span class="line">    middlePath = <span class="string">&quot;f:\\Videos\\4K Tokkit\\dbxbqm22\\7257911883674668289.mp4&quot;</span></span><br><span class="line">    middleAudioPath = <span class="string">&quot;D:\\00-自媒体计划\\AI-背景音乐.MP3&quot;</span></span><br><span class="line">    outputPath = <span class="string">&quot;f:\\Videos\\4K Tokkit\\test1\\&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> outputPath.endswith(<span class="string">&#x27;\\&#x27;</span>):</span><br><span class="line">        outputPath = outputPath + <span class="string">&#x27;\\&#x27;</span></span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    fileCount = <span class="number">0</span></span><br><span class="line">    startTime = time.time()</span><br><span class="line">    files = os.listdir(middleDir)</span><br><span class="line">    <span class="comment"># 创建线程</span></span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        basename = os.path.basename(file)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;.mp4&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> basename:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;已剪辑&#x27;</span> <span class="keyword">in</span> basename:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(outputPath + basename.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-已剪辑.&#x27;</span>)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;视频已剪辑=&#x27;</span>, middleDir + basename)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;待剪辑视频=&#x27;</span>, middleDir + basename)</span><br><span class="line">        fileCount = fileCount + <span class="number">1</span></span><br><span class="line">        <span class="comment"># concat(startPath, endPath, middleDir + basename, middleAudioPath, outputPath)</span></span><br><span class="line">        thread = threading.Thread(target=asyncConcat, args=(</span><br><span class="line">            startPath, endPath, middleDir + basename, middleAudioPath, outputPath, semaphore))</span><br><span class="line">        threads.append(thread)</span><br><span class="line">        thread.start()</span><br><span class="line">    <span class="comment"># 等待所有线程执行结束</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.join()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;共处理视频个数：&#x27;</span>, fileCount, <span class="string">&#x27; 耗时：&#x27;</span>, time.time() - startTime)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/3756efb0/">https://github.com/maxzhao-it/blog/post/3756efb0/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python环境变量</title>
    <link href="https://github.com/maxzhao-it/blog/post/9c485ce3/"/>
    <id>https://github.com/maxzhao-it/blog/post/9c485ce3/</id>
    <published>2023-11-16T10:55:47.855Z</published>
    <updated>2023-11-21T07:35:14.987Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-dotenv -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"></span><br><span class="line">load_dotenv()</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/9c485ce3/">https://github.com/maxzhao-it/blog/post/9c485ce3/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python操作字符串</title>
    <link href="https://github.com/maxzhao-it/blog/post/4ad1a794/"/>
    <id>https://github.com/maxzhao-it/blog/post/4ad1a794/</id>
    <published>2023-11-16T10:55:47.854Z</published>
    <updated>2023-11-21T07:35:14.959Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作JSON"><a href="#操作JSON" class="headerlink" title="操作JSON"></a>操作JSON</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包含关系</span></span><br><span class="line">flag = <span class="string">&#x27;.mp4&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&#x27;1.mp4&#x27;</span></span><br><span class="line"><span class="comment"># 查找</span></span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.find(<span class="string">&#x27;.mp4&#x27;</span>)</span><br><span class="line"><span class="comment"># 长度</span></span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.count(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="comment"># 长度</span></span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.replace(<span class="string">&#x27;.mp4&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;1.mp4&#x27;</span>.endswith(<span class="string">&#x27;.mp4&#x27;</span>)</span><br><span class="line">downloadUrl = <span class="string">&#x27;http:/test.com/1 2/123&#x27;</span></span><br><span class="line"><span class="comment"># 转换空格</span></span><br><span class="line">downloadUrl = downloadUrl.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;%20&#x27;</span>)</span><br><span class="line"><span class="comment"># 转义</span></span><br><span class="line">urllib.parse.quote(downloadUrl)</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/4ad1a794/">https://github.com/maxzhao-it/blog/post/4ad1a794/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作JSON&quot;&gt;&lt;a href=&quot;#操作JSON&quot; class=&quot;headerlink&quot; title=&quot;操作JSON&quot;&gt;&lt;/a&gt;操作JSON&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python操作MySQL</title>
    <link href="https://github.com/maxzhao-it/blog/post/5fc222/"/>
    <id>https://github.com/maxzhao-it/blog/post/5fc222/</id>
    <published>2023-11-16T10:55:47.854Z</published>
    <updated>2023-11-21T07:35:15.023Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line"><span class="keyword">import</span> m3u8</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> py <span class="keyword">import</span> m3u8Merge</span><br><span class="line"></span><br><span class="line">load_dotenv()</span><br><span class="line">outPath = <span class="string">&#x27;F:/资料文档/zztt/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动提交事务</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getConn</span>():</span><br><span class="line">    <span class="keyword">return</span> MySQLdb.connect(</span><br><span class="line">        host=os.getenv(<span class="string">&quot;db_pic_host&quot;</span>),</span><br><span class="line">        port=<span class="built_in">int</span>(os.getenv(<span class="string">&quot;db_pic_port&quot;</span>)),</span><br><span class="line">        user=os.getenv(<span class="string">&quot;db_pic_user&quot;</span>),</span><br><span class="line">        passwd=os.getenv(<span class="string">&quot;db_pic_password&quot;</span>),</span><br><span class="line">        db=os.getenv(<span class="string">&quot;db_pic_server&quot;</span>),</span><br><span class="line">        autocommit=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saveInfo</span>(<span class="params"><span class="built_in">id</span>, name, url, href</span>):</span><br><span class="line">    sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        insert into z(id,name,url,href) values(&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;)&#x27;&#x27;&#x27;</span> \</span><br><span class="line">        .<span class="built_in">format</span>(<span class="built_in">id</span>, name, url, href)</span><br><span class="line">    cursor = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        connection = getConn()</span><br><span class="line">        cursor = connection.cursor()</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        cursor.fetchall()</span><br><span class="line">        <span class="comment"># connection.commit()</span></span><br><span class="line">        cursor.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.close()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;添加数据库数据失败:&quot;</span>, e, sql)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">listNeedDownload</span>():</span><br><span class="line">    sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    select id,name,url from z where download  = 2  limit 10</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        connection = getConn()</span><br><span class="line">        cursor = connection.cursor()</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        data = cursor.fetchall()</span><br><span class="line">        <span class="comment"># connection.commit()</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> data:</span><br><span class="line">            result.append(&#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: row[<span class="number">0</span>],</span><br><span class="line">                <span class="string">&#x27;name&#x27;</span>: row[<span class="number">1</span>],</span><br><span class="line">                <span class="string">&#x27;url&#x27;</span>: row[<span class="number">2</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">        cursor.close()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;listNeedDownload失败:&quot;</span>, e, sql)</span><br><span class="line">        <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure><h2 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install DBUtils -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip install pymysql  -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">from dbutils.pooled_db import PooledDB</span><br><span class="line">from dotenv import load_dotenv</span><br><span class="line">load_dotenv()</span><br><span class="line">pool = PooledDB(</span><br><span class="line">    creator=pymysql,</span><br><span class="line">    maxconnections=20,</span><br><span class="line">    mincached=2,</span><br><span class="line">    maxcached=10,</span><br><span class="line">    blocking=True,</span><br><span class="line">    host=os.getenv(&quot;db_pic_host&quot;),</span><br><span class="line">    port=int(os.getenv(&quot;db_pic_port&quot;)),</span><br><span class="line">    user=os.getenv(&quot;db_pic_user&quot;),</span><br><span class="line">    passwd=os.getenv(&quot;db_pic_password&quot;),</span><br><span class="line">    db=os.getenv(&quot;db_pic_server&quot;),</span><br><span class="line">    charset=&#x27;utf8mb4&#x27;</span><br><span class="line">)</span><br><span class="line">def a():</span><br><span class="line">      sql = &#x27;&#x27;&#x27;</span><br><span class="line">        insert into img(id,name,tab_url,url) values(&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;)&#x27;&#x27;&#x27; \</span><br><span class="line">        .format(id, name, tab_url, url)</span><br><span class="line">    cursor = 1</span><br><span class="line">    connection = pool.connection()</span><br><span class="line">    try:</span><br><span class="line">        cursor = connection.cursor()</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        cursor.fetchall()</span><br><span class="line">        connection.commit()</span><br><span class="line">        close(cursor)</span><br><span class="line">        connection.close()</span><br><span class="line">        return True</span><br><span class="line">    except Exception as e:</span><br><span class="line">        close(cursor)</span><br><span class="line">        print(&quot;添加数据库数据失败:&quot;, e, sql)</span><br><span class="line">        connection.close()</span><br><span class="line">        return False</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/5fc222/">https://github.com/maxzhao-it/blog/post/5fc222/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
    
      <category term="MySQL" scheme="https://github.com/maxzhao-it/blog/tags/MySQL/"/>
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python打包</title>
    <link href="https://github.com/maxzhao-it/blog/post/7e49a571/"/>
    <id>https://github.com/maxzhao-it/blog/post/7e49a571/</id>
    <published>2023-11-16T10:55:47.854Z</published>
    <updated>2023-11-21T07:35:15.007Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pyinstaller -F gooeydemo[OpenSeleniumClient.py](py%2FOpenSeleniumClient.py).py -w 打包</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基于 pyinstaller</span></span><br><span class="line">pip install fbs -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">fbs project</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/7e49a571/">https://github.com/maxzhao-it/blog/post/7e49a571/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python截取视频中的图片</title>
    <link href="https://github.com/maxzhao-it/blog/post/8ddf92f3/"/>
    <id>https://github.com/maxzhao-it/blog/post/8ddf92f3/</id>
    <published>2023-11-16T10:55:47.853Z</published>
    <updated>2023-11-21T07:35:14.966Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install ffmpy -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">pip3 install opencv-python -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> ffmpy <span class="keyword">import</span> FFmpeg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 视频裁剪</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cut_out_video</span>(<span class="params">video_path: <span class="built_in">str</span>, output_dir: <span class="built_in">str</span>, start_pix: <span class="built_in">tuple</span>, size: <span class="built_in">tuple</span></span>):</span><br><span class="line">    ext = os.path.basename(video_path).strip().split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> ext <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;mp4&#x27;</span>, <span class="string">&#x27;avi&#x27;</span>, <span class="string">&#x27;flv&#x27;</span>]:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;format error&#x27;</span>)</span><br><span class="line">    result = os.path.join(output_dir, <span class="string">&#x27;&#123;&#125;.&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(uuid.uuid1().<span class="built_in">hex</span>, ext))</span><br><span class="line">    ff = FFmpeg(inputs=&#123;video_path: <span class="literal">None</span>&#125;,</span><br><span class="line">                outputs=&#123;</span><br><span class="line">                    result: <span class="string">&#x27;-vf crop=&#123;&#125;:&#123;&#125;:&#123;&#125;:&#123;&#125; -y -threads 5 -preset ultrafast -strict -2&#x27;</span>.<span class="built_in">format</span>(size[<span class="number">0</span>], size[<span class="number">1</span>],</span><br><span class="line">                                                                                                     start_pix[<span class="number">0</span>],</span><br><span class="line">                                                                                                     start_pix[<span class="number">1</span>])&#125;)</span><br><span class="line">    <span class="built_in">print</span>(ff.cmd)</span><br><span class="line">    ff.run()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(cut_out_video(<span class="string">r&#x27;C:\Users\huyi\Desktop\test2.mp4&#x27;</span>, <span class="string">r&#x27;C:\Users\huyi\Desktop&#x27;</span>, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">512</span>, <span class="number">512</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">vc = cv2.VideoCapture(<span class="string">&quot;f:\\Videos\\4K Tokkit\\dbxbqm22\\7257911883674668289.mp4&quot;</span>)</span><br><span class="line"><span class="comment"># 检查视频是否成功打开</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> vc.isOpened():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无法打开视频文件&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line">fps = vc.get(cv2.CAP_PROP_FPS)</span><br><span class="line"></span><br><span class="line">c = <span class="number">0</span></span><br><span class="line">num = <span class="built_in">round</span>(fps)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ret, frame = vc.read()</span><br><span class="line">    pic_path = <span class="string">&#x27;f:\\Videos\\4K Tokkit\\test/&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> (c % <span class="built_in">round</span>(fps) == <span class="number">0</span>):</span><br><span class="line">        cv2.imwrite(pic_path + <span class="string">&#x27;7257911883674668289_&#x27;</span> + <span class="built_in">str</span>(c) + <span class="string">&#x27;.jpg&#x27;</span>, frame)</span><br><span class="line">    c = c + <span class="number">1</span></span><br><span class="line">vc.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="写入中文路径处理"><a href="#写入中文路径处理" class="headerlink" title="写入中文路径处理"></a>写入中文路径处理</h2><p><code>cv2.imread</code>和<code>cv2.imwrite</code>无法读写含中文的路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">image = cv2.imdecode(np.fromfile(<span class="string">&#x27;中文图片.png&#x27;</span>), cv2.IMREAD_UNCHANGED)</span><br><span class="line">cv2.imencode(<span class="string">&#x27;.png&#x27;</span>, image)[<span class="number">1</span>].tofile(<span class="string">&#x27;保存_中文图片.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/8ddf92f3/">https://github.com/maxzhao-it/blog/post/8ddf92f3/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/categories/Python/"/>
    
    
      <category term="Linux" scheme="https://github.com/maxzhao-it/blog/tags/Linux/"/>
    
      <category term="Python" scheme="https://github.com/maxzhao-it/blog/tags/Python/"/>
    
  </entry>
  
</feed>
