<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>maxzhao</title>
  
  <subtitle>不要害怕Exception和Error</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://github.com/maxzhao-it/blog/"/>
  <updated>2022-07-04T06:50:22.617Z</updated>
  <id>https://github.com/maxzhao-it/blog/</id>
  
  <author>
    <name>赵联胜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/15474/"/>
    <id>https://github.com/maxzhao-it/blog/post/15474/</id>
    <published>2022-07-04T06:50:22.617Z</published>
    <updated>2022-07-04T06:50:22.617Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/Nacos-config">Nacos config 原文地址</a></p><p><code>Github</code>经常抽搐，记录下来。</p><p> 以下内容与<a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/Nacos-config">Nacos config 原文地址</a>内容一样——更新于 2021-04-19</p></blockquote><h2 id="Spring-Cloud-Alibaba-Nacos-Config"><a href="#Spring-Cloud-Alibaba-Nacos-Config" class="headerlink" title="Spring Cloud Alibaba Nacos Config"></a>Spring Cloud Alibaba Nacos Config</h2><p>Nacos 提供用于存储配置和其他元数据的 key&#x2F;value 存储，为分布式系统中的外部化配置提供服务器端和客户端支持。使用 Spring Cloud Alibaba Nacos Config，您可以在 Nacos Server 集中管理你 Spring Cloud 应用的外部属性配置。</p><p>Spring Cloud Alibaba Nacos Config 是 Config Server 和 Client 的替代方案，客户端和服务器上的概念与 Spring Environment 和 PropertySource 有着一致的抽象，在特殊的 bootstrap 阶段，配置被加载到 Spring 环境中。当应用程序通过部署管道从开发到测试再到生产时，您可以管理这些环境之间的配置，并确保应用程序具有迁移时需要运行的所有内容。</p><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><h5 id="Nacos-服务端初始化"><a href="#Nacos-服务端初始化" class="headerlink" title="Nacos 服务端初始化"></a>Nacos 服务端初始化</h5><p>1、启动Nacos Server。启动方式可见 <a href="https://nacos.io/zh-cn/docs/quick-start.html">Nacos 官网</a></p><p>2、启动好Nacos之后，在Nacos添加如下的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Data ID:    nacos-config.properties</span><br><span class="line"></span><br><span class="line">Group  :    DEFAULT_GROUP</span><br><span class="line"></span><br><span class="line">配置格式:    Properties</span><br><span class="line"></span><br><span class="line">配置内容：   user.name=nacos-config-properties</span><br><span class="line">            user.age=90</span><br></pre></td></tr></table></figure><table><thead><tr><th>Note</th><th>注意dataid是以 properties(默认的文件扩展名方式)为扩展名。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h5 id="客户端使用方式"><a href="#客户端使用方式" class="headerlink" title="客户端使用方式"></a>客户端使用方式</h5><p>如果要在您的项目中使用 Nacos 来实现应用的外部化配置，使用 group ID 为 <code>com.alibaba.cloud</code> 和 artifact ID 为 <code>spring-cloud-starter-alibaba-nacos-config</code> 的 starter。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>现在就可以创建一个标准的 Spring Boot 应用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class ProviderApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext applicationContext = SpringApplication.run(ProviderApplication.class, args);</span><br><span class="line">        String userName = applicationContext.getEnvironment().getProperty(&quot;user.name&quot;);</span><br><span class="line">        String userAge = applicationContext.getEnvironment().getProperty(&quot;user.age&quot;);</span><br><span class="line">        System.err.println(&quot;user name :&quot;+userName+&quot;; age: &quot;+userAge);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在运行此 Example 之前， <strong>必须使用 bootstrap.properties 配置文件来配置Nacos Server 地址</strong>，例如：</p><p>bootstrap.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=nacos-config</span><br><span class="line">spring.cloud.nacos.config.server-addr=127.0.0.1:8848</span><br></pre></td></tr></table></figure><table><thead><tr><th>Note</th><th>注意当你使用域名的方式来访问 Nacos 时，<code>spring.cloud.nacos.config.server-addr</code> 配置的方式为 <code>域名:port</code>。 例如 Nacos 的域名为abc.com.nacos，监听的端口为 80，则 <code>spring.cloud.nacos.config.server-addr=abc.com.nacos:80</code>。 注意 80 端口不能省略。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>启动这个 Example，可以看到如下输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2018-11-02 14:24:51.638  INFO 32700 --- [main] c.a.demo.provider.ProviderApplication    : Started ProviderApplication in 14.645 seconds (JVM running for 15.139)</span><br><span class="line">user name :nacos-config-properties; age: 90</span><br><span class="line">2018-11-02 14:24:51.688  INFO 32700 --- [-127.0.0.1:8848] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a8c5e74: startup date [Fri Nov 02 14:24:51 CST 2018]; root of context hierarchy</span><br><span class="line">2018-11</span><br></pre></td></tr></table></figure><h3 id="基于-dataid-为-yaml-的文件扩展名配置方式"><a href="#基于-dataid-为-yaml-的文件扩展名配置方式" class="headerlink" title="基于 dataid 为 yaml 的文件扩展名配置方式"></a>基于 dataid 为 yaml 的文件扩展名配置方式</h3><p>spring-cloud-starter-alibaba-nacos-config 对于 yaml 格式也是完美支持的。这个时候只需要完成以下两步：</p><p>1、在应用的 bootstrap.properties 配置文件中显示的声明 dataid 文件扩展名。如下所示</p><p>bootstrap.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.cloud.nacos.config.file-extension=yaml</span><br></pre></td></tr></table></figure><p>2、在 Nacos 的控制台新增一个dataid为yaml为扩展名的配置，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Data ID:        nacos-config.yaml</span><br><span class="line"></span><br><span class="line">Group  :        DEFAULT_GROUP</span><br><span class="line"></span><br><span class="line">配置格式:        YAML</span><br><span class="line"></span><br><span class="line">配置内容:        user.name: nacos-config-yaml</span><br><span class="line">                user.age: 68</span><br></pre></td></tr></table></figure><p>这两步完成后，重启测试程序，可以看到如下输出结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2018-11-02 14:59:00.484  INFO 32928 --- [main] c.a.demo.provider.ProviderApplication:Started ProviderApplication in 14.183 seconds (JVM running for 14.671)</span><br><span class="line">user name :nacos-config-yaml; age: 68</span><br><span class="line">2018-11-02 14:59:00.529  INFO 32928 --- [-127.0.0.1:8848] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@265a478e: startup date [Fri Nov 02 14:59:00 CST 2018]; root of context hierarchy</span><br></pre></td></tr></table></figure><h3 id="支持配置的动态更新"><a href="#支持配置的动态更新" class="headerlink" title="支持配置的动态更新"></a>支持配置的动态更新</h3><p>spring-cloud-starter-alibaba-nacos-config 也支持配置的动态更新，启动 Spring Boot 应用测试的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class ProviderApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext applicationContext = SpringApplication.run(ProviderApplication.class, args);</span><br><span class="line">        while(true) &#123;</span><br><span class="line">            //当动态配置刷新时，会更新到 Enviroment中，因此这里每隔一秒中从Enviroment中获取配置</span><br><span class="line">            String userName = applicationContext.getEnvironment().getProperty(&quot;user.name&quot;);</span><br><span class="line">            String userAge = applicationContext.getEnvironment().getProperty(&quot;user.age&quot;);</span><br><span class="line">            System.err.println(&quot;user name :&quot; + userName + &quot;; age: &quot; + userAge);</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下所示，当变更user.name时，应用程序中能够获取到最新的值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">user name :nacos-config-yaml; age: 68</span><br><span class="line">user name :nacos-config-yaml; age: 68</span><br><span class="line">user name :nacos-config-yaml; age: 68</span><br><span class="line">2018-11-02 15:04:25.069  INFO 32957 --- [-127.0.0.1:8848] o.s.boot.SpringApplication               : Started application in 0.144 seconds (JVM running for 71.752)</span><br><span class="line">2018-11-02 15:04:25.070  INFO 32957 --- [-127.0.0.1:8848] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@10c89124: startup date [Fri Nov 02 15:04:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6520af7</span><br><span class="line">2018-11-02 15:04:25.071  INFO 32957 --- [-127.0.0.1:8848] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6520af7: startup date [Fri Nov 02 15:04:24 CST 2018]; root of context hierarchy</span><br><span class="line">//从 Enviroment 中 读取到更改后的值</span><br><span class="line">user name :nacos-config-yaml-update; age: 68</span><br><span class="line">user name :nacos-config-yaml-update; age: 68</span><br></pre></td></tr></table></figure><table><thead><tr><th>Note</th><th>你可以通过配置 <code>spring.cloud.nacos.config.refresh.enabled=false</code> 来关闭动态刷新</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h3 id="可支持profile粒度的配置"><a href="#可支持profile粒度的配置" class="headerlink" title="可支持profile粒度的配置"></a>可支持profile粒度的配置</h3><p>spring-cloud-starter-alibaba-nacos-config 在加载配置的时候，不仅仅加载了以 dataid 为 <code>$&#123;spring.application.name&#125;.$&#123;file-extension:properties&#125;</code> 为前缀的基础配置，还加载了dataid为 <code>$&#123;spring.application.name&#125;-$&#123;profile&#125;.$&#123;file-extension:properties&#125;</code> 的基础配置。在日常开发中如果遇到多套环境下的不同配置，可以通过Spring 提供的 <code>$&#123;spring.profiles.active&#125;</code> 这个配置项来配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.profiles.active=develop</span><br></pre></td></tr></table></figure><table><thead><tr><th>Note</th><th>${spring.profiles.active} 当通过配置文件来指定时必须放在 bootstrap.properties 文件中。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>Nacos 上新增一个dataid为：nacos-config-develop.yaml的基础配置，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Data ID:        nacos-config-develop.yaml</span><br><span class="line"></span><br><span class="line">Group  :        DEFAULT_GROUP</span><br><span class="line"></span><br><span class="line">配置格式:        YAML</span><br><span class="line"></span><br><span class="line">配置内容:        current.env: develop-env</span><br></pre></td></tr></table></figure><p>启动 Spring Boot 应用测试的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class ProviderApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext applicationContext = SpringApplication.run(ProviderApplication.class, args);</span><br><span class="line">        while(true) &#123;</span><br><span class="line">            String userName = applicationContext.getEnvironment().getProperty(&quot;user.name&quot;);</span><br><span class="line">            String userAge = applicationContext.getEnvironment().getProperty(&quot;user.age&quot;);</span><br><span class="line">            //获取当前部署的环境</span><br><span class="line">            String currentEnv = applicationContext.getEnvironment().getProperty(&quot;current.env&quot;);</span><br><span class="line">            System.err.println(&quot;in &quot;+currentEnv+&quot; enviroment; &quot;+&quot;user name :&quot; + userName + &quot;; age: &quot; + userAge);</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动后，可见控制台的输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">in develop-env enviroment; user name :nacos-config-yaml-update; age: 68</span><br><span class="line">2018-11-02 15:34:25.013  INFO 33014 --- [ Thread-11] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f1c29b7: startup date [Fri Nov 02 15:33:57 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@63355449</span><br></pre></td></tr></table></figure><p>如果需要切换到生产环境，只需要更改 <code>$&#123;spring.profiles.active&#125;</code> 参数配置即可。如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.profiles.active=product</span><br></pre></td></tr></table></figure><p>同时生产环境上 Nacos 需要添加对应 dataid 的基础配置。例如，在生成环境下的 Naocs 添加了dataid为：nacos-config-product.yaml的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Data ID:        nacos-config-product.yaml</span><br><span class="line"></span><br><span class="line">Group  :        DEFAULT_GROUP</span><br><span class="line"></span><br><span class="line">配置格式:        YAML</span><br><span class="line"></span><br><span class="line">配置内容:        current.env: product-env</span><br></pre></td></tr></table></figure><p>启动测试程序，输出结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">in product-env enviroment; user name :nacos-config-yaml-update; age: 68</span><br><span class="line">2018-11-02 15:42:14.628  INFO 33024 --- [Thread-11] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6aa8e115: startup date [Fri Nov 02 15:42:03 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@19bb07ed</span><br></pre></td></tr></table></figure><table><thead><tr><th>Note</th><th>此案例中我们通过 <code>spring.profiles.active=&lt;profilename&gt;</code> 的方式写死在配置文件中，而在真正的项目实施过程中这个变量的值是需要不同环境而有不同的值。这个时候通常的做法是通过 <code>-Dspring.profiles.active=&lt;profile&gt;</code> 参数指定其配置来达到环境间灵活的切换。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h3 id="支持自定义-namespace-的配置"><a href="#支持自定义-namespace-的配置" class="headerlink" title="支持自定义 namespace 的配置"></a>支持自定义 namespace 的配置</h3><p>首先看一下 Nacos 的 Namespace 的概念， <a href="https://nacos.io/zh-cn/docs/concepts.html">Nacos 概念</a></p><blockquote><p>用于进行租户粒度的配置隔离。不同的命名空间下，可以存在相同的 Group 或 Data ID 的配置。Namespace 的常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源（如配置、服务）隔离等。</p></blockquote><p>在没有明确指定 <code>$&#123;spring.cloud.nacos.config.namespace&#125;</code> 配置的情况下， 默认使用的是 Nacos 上 Public 这个namespae。如果需要使用自定义的命名空间，可以通过以下配置来实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.cloud.nacos.config.namespace=b3404bc0-d7dc-4855-b519-570ed34b62d7</span><br></pre></td></tr></table></figure><table><thead><tr><th>Note</th><th>该配置必须放在 bootstrap.properties 文件中。此外 <code>spring.cloud.nacos.config.namespace</code> 的值是 namespace 对应的 id，id 值可以在 Nacos 的控制台获取。并且在添加配置时注意不要选择其他的 namespae，否则将会导致读取不到正确的配置。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h3 id="支持自定义-Group-的配置"><a href="#支持自定义-Group-的配置" class="headerlink" title="支持自定义 Group 的配置"></a>支持自定义 Group 的配置</h3><p>在没有明确指定 <code>$&#123;spring.cloud.nacos.config.group&#125;</code> 配置的情况下， 默认使用的是 DEFAULT_GROUP 。如果需要自定义自己的 Group，可以通过以下配置来实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.cloud.nacos.config.group=DEVELOP_GROUP</span><br></pre></td></tr></table></figure><table><thead><tr><th>Note</th><th>该配置必须放在 bootstrap.properties 文件中。并且在添加配置时 Group 的值一定要和 <code>spring.cloud.nacos.config.group</code> 的配置值一致。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h3 id="支持自定义扩展的-Data-Id-配置"><a href="#支持自定义扩展的-Data-Id-配置" class="headerlink" title="支持自定义扩展的 Data Id 配置"></a>支持自定义扩展的 Data Id 配置</h3><p>Spring Cloud Alibaba Nacos Config 从 0.2.1 版本后，可支持自定义 Data Id 的配置。关于这部分详细的设计可参考 <a href="https://github.com/spring-cloud-incubator/spring-cloud-alibaba/issues/141">这里</a>。 一个完整的配置案例如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=opensource-service-provider</span><br><span class="line">spring.cloud.nacos.config.server-addr=127.0.0.1:8848</span><br><span class="line"></span><br><span class="line"># config external configuration</span><br><span class="line"># 1、Data Id 在默认的组 DEFAULT_GROUP,不支持配置的动态刷新</span><br><span class="line">spring.cloud.nacos.config.extension-configs[0].data-id=ext-config-common01.properties</span><br><span class="line"></span><br><span class="line"># 2、Data Id 不在默认的组，不支持动态刷新</span><br><span class="line">spring.cloud.nacos.config.extension-configs[1].data-id=ext-config-common02.properties</span><br><span class="line">spring.cloud.nacos.config.extension-configs[1].group=GLOBALE_GROUP</span><br><span class="line"></span><br><span class="line"># 3、Data Id 既不在默认的组，也支持动态刷新</span><br><span class="line">spring.cloud.nacos.config.extension-configs[2].data-id=ext-config-common03.properties</span><br><span class="line">spring.cloud.nacos.config.extension-configs[2].group=REFRESH_GROUP</span><br><span class="line">spring.cloud.nacos.config.extension-configs[2].refresh=true</span><br></pre></td></tr></table></figure><p>可以看到:</p><ul><li>通过 <code>spring.cloud.nacos.config.extension-configs[n].data-id</code> 的配置方式来支持多个 Data Id 的配置。</li><li>通过 <code>spring.cloud.nacos.config.extension-configs[n].group</code> 的配置方式自定义 Data Id 所在的组，不明确配置的话，默认是 DEFAULT_GROUP。</li><li>通过 <code>spring.cloud.nacos.config.extension-configs[n].refresh</code> 的配置方式来控制该 Data Id 在配置变更时，是否支持应用中可动态刷新， 感知到最新的配置值。默认是不支持的。</li></ul><table><thead><tr><th>Note</th><th>多个 Data Id 同时配置时，他的优先级关系是 <code>spring.cloud.nacos.config.extension-configs[n].data-id</code> 其中 n 的值越大，优先级越高。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><table><thead><tr><th>Note</th><th><code>spring.cloud.nacos.config.extension-configs[n].data-id</code> 的值必须带文件扩展名，文件扩展名既可支持 properties，又可以支持 yaml&#x2F;yml。 此时 <code>spring.cloud.nacos.config.file-extension</code> 的配置对自定义扩展配置的 Data Id 文件扩展名没有影响。</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>通过自定义扩展的 Data Id 配置，既可以解决多个应用间配置共享的问题，又可以支持一个应用有多个配置文件。</p><p>为了更加清晰的在多个应用间配置共享的 Data Id ，你可以通过以下的方式来配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 配置支持共享的 Data Id</span><br><span class="line">spring.cloud.nacos.config.shared-configs[0].data-id=common.yaml</span><br><span class="line"></span><br><span class="line"># 配置 Data Id 所在分组，缺省默认 DEFAULT_GROUP</span><br><span class="line">spring.cloud.nacos.config.shared-configs[0].group=GROUP_APP1</span><br><span class="line"></span><br><span class="line"># 配置Data Id 在配置变更时，是否动态刷新，缺省默认 false</span><br><span class="line">spring.cloud.nacos.config.shared-configs[0].refresh=true</span><br></pre></td></tr></table></figure><p>可以看到：</p><ul><li>通过 <code>spring.cloud.nacos.config.shared-configs[n].data-id</code> 来支持多个共享 Data Id 的配置。</li><li>通过 <code>spring.cloud.nacos.config.shared-configs[n].group</code> 来配置自定义 Data Id 所在的组，不明确配置的话，默认是 DEFAULT_GROUP。</li><li>通过 <code>spring.cloud.nacos.config.shared-configs[n].refresh</code> 来控制该Data Id在配置变更时，是否支持应用中动态刷新，默认false。</li></ul><h3 id="配置的优先级"><a href="#配置的优先级" class="headerlink" title="配置的优先级"></a>配置的优先级</h3><p>Spring Cloud Alibaba Nacos Config 目前提供了三种配置能力从 Nacos 拉取相关的配置。</p><ul><li>A: 通过 <code>spring.cloud.nacos.config.shared-configs[n].data-id</code> 支持多个共享 Data Id 的配置</li><li>B: 通过 <code>spring.cloud.nacos.config.extension-configs[n].data-id</code> 的方式支持多个扩展 Data Id 的配置</li><li>C: 通过内部相关规则(应用名、应用名+ Profile )自动生成相关的 Data Id 配置</li></ul><p>当三种方式共同使用时，他们的一个优先级关系是:A &lt; B &lt; C</p><h3 id="完全关闭配置"><a href="#完全关闭配置" class="headerlink" title="完全关闭配置"></a>完全关闭配置</h3><p>通过设置 spring.cloud.nacos.config.enabled &#x3D; false 来完全关闭 Spring Cloud Nacos Config</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/15474/">https://github.com/maxzhao-it/blog/post/15474/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/spring-cloud-alibaba/wiki/Nacos-config&quot;&gt;Nacos config 原文地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Github&lt;/code&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/3276/"/>
    <id>https://github.com/maxzhao-it/blog/post/3276/</id>
    <published>2022-07-04T06:50:22.611Z</published>
    <updated>2022-07-04T06:50:22.611Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码：</p><p>【1】引入jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.solr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>solr-solrj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【测试代码】<br> javabean:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> <span class="title">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注意：这里的字符串id字段要在scheme.xml中有配置体现</span></span><br><span class="line">    <span class="meta">@Field(<span class="string">&quot;id&quot;</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@Field(<span class="string">&quot;name&quot;</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Field(<span class="string">&quot;price&quot;</span>)</span></span><br><span class="line">    <span class="keyword">private</span> double price;</span><br><span class="line">    <span class="meta">@Field(<span class="string">&quot;url&quot;</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Car()&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Car(String id, String name, double price,String url)&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//getter setter方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String toString() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Car&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&#x27;&quot;</span> + id + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, price=&quot;</span> + price +</span><br><span class="line">                <span class="string">&quot;, url=&#x27;&quot;</span> + url + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>testSolr.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author:lvfang</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Created by mis on 2017/5/24.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SolrTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">baseURL</span> <span class="operator">=</span> <span class="string">&quot;http://192.168.22.128:8081/solr&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> HttpSolrServer server=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建SolrServer对象</span></span><br><span class="line"><span class="comment">    * 该对象有两个可以使用，都是线程安全的 1、CommonsHttpSolrServer：启动web服务器使用的，通过http请求的 2、</span></span><br><span class="line"><span class="comment">     * EmbeddedSolrServer：内嵌式的，导入solr的jar包就可以使用了 3、solr</span></span><br><span class="line"><span class="comment">     * 4.0之后好像添加了不少东西，其中CommonsHttpSolrServer这个类改名为HttpSolrClient</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">//new HttpSolrClient.Builder(BASE_URL).build()</span></span><br><span class="line">        server=<span class="keyword">new</span> <span class="title class_">HttpSolrServer</span>(baseURL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于索引名添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Car</span> <span class="variable">car1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Car</span>(<span class="string">&quot;Audi000A4001&quot;</span>,<span class="string">&quot;奥迪A4L&quot;</span>,<span class="number">295000</span>,<span class="string">&quot;/images/001.jpg&quot;</span>);</span><br><span class="line">        <span class="comment">//Car car1 = new Car(&quot;BMW0000B5001&quot;,&quot;宝马5系&quot;,436800,&quot;/images/002.jpg&quot;);</span></span><br><span class="line">        <span class="type">SolrInputDocument</span> <span class="variable">doc1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SolrInputDocument</span>();</span><br><span class="line">        doc1.addField(<span class="string">&quot;id&quot;</span>,car1.getId());</span><br><span class="line">        doc1.addField(<span class="string">&quot;name&quot;</span>,car1.getName());</span><br><span class="line">        doc1.addField(<span class="string">&quot;price&quot;</span>,car1.getPrice());</span><br><span class="line">        doc1.addField(<span class="string">&quot;url&quot;</span>,car1.getUrl());</span><br><span class="line"><span class="comment">// 这里也可以传递集合 List&lt;SolrInputDocument&gt; </span></span><br><span class="line">        server.add(doc1);</span><br><span class="line">        <span class="type">UpdateResponse</span> <span class="variable">rspcommit</span> <span class="operator">=</span> server.commit();</span><br><span class="line">        <span class="comment">// 操作完成 0</span></span><br><span class="line">        rspcommit.getStatus();</span><br><span class="line">        System.out.println(<span class="string">&quot;操作完成！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于bean添加（注意，这里bean的属性要添加solr的注解<span class="doctag">@Field</span>）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAddBean</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Car</span> <span class="variable">car1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Car</span>(<span class="string">&quot;BMW0000B5001&quot;</span>,<span class="string">&quot;宝马5系&quot;</span>,<span class="number">436800</span>,<span class="string">&quot;/images/002.jpg&quot;</span>);</span><br><span class="line">        server.addBean(car1);</span><br><span class="line">        <span class="comment">// 添加集合  List&lt;Car&gt;</span></span><br><span class="line">        <span class="comment">// server.addBeans(list);</span></span><br><span class="line">        server.commit();</span><br><span class="line">        System.out.println(<span class="string">&quot;操作完成！！！&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Document结果转换bean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SolrDocument</span> <span class="variable">doc1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SolrDocument</span>();</span><br><span class="line">        doc1.addField(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;Siju0032SJ0C8001&quot;</span>);</span><br><span class="line">        doc1.addField(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;世爵C8&quot;</span>);</span><br><span class="line">        doc1.addField(<span class="string">&quot;price&quot;</span>,<span class="number">1370000</span>);</span><br><span class="line">        doc1.addField(<span class="string">&quot;url&quot;</span>,<span class="string">&quot;/images/005.jps&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Car</span> <span class="variable">car</span> <span class="operator">=</span> server.getBinder().getBean(Car.class,doc1);</span><br><span class="line">        System.out.println(car);</span><br><span class="line">        System.out.println(<span class="string">&quot;操作完成！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDel</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">//server.deleteById(&quot;1&quot;);</span></span><br><span class="line">        server.deleteByQuery(<span class="string">&quot;*:*&quot;</span>);</span><br><span class="line">        server.commit();</span><br><span class="line">        System.out.println(<span class="string">&quot;操作完成！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改（可以理解为重新添加，）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SolrInputDocument</span> <span class="variable">doc1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SolrInputDocument</span>();</span><br><span class="line">        doc1.addField(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        doc1.addField(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;lisi&quot;</span>);</span><br><span class="line">        server.add(doc1);</span><br><span class="line"></span><br><span class="line">        server.commit();</span><br><span class="line">        System.out.println(<span class="string">&quot;操作完成！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQuery</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SolrQuery</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SolrQuery</span>(<span class="string">&quot;name:*&quot;</span>);</span><br><span class="line">        <span class="comment">//SolrQuery query = new SolrQuery(&quot;*:*&quot;);</span></span><br><span class="line">        query.setStart(<span class="number">0</span>);<span class="comment">//起始页</span></span><br><span class="line">        query.setRows(<span class="number">3</span>);<span class="comment">//每页显示数量</span></span><br><span class="line"></span><br><span class="line">        <span class="type">QueryResponse</span> <span class="variable">rsp</span> <span class="operator">=</span> server.query( query );</span><br><span class="line">        <span class="type">SolrDocumentList</span> <span class="variable">results</span> <span class="operator">=</span> rsp.getResults();</span><br><span class="line">        System.out.println(<span class="string">&quot;总记录数为：&quot;</span> + results.getNumFound());<span class="comment">//查询总条数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(SolrDocument document : results)&#123;</span><br><span class="line">            System.out.println(document.get(<span class="string">&quot;id&quot;</span>) + <span class="string">&quot; &quot;</span> + document.get(<span class="string">&quot;name&quot;</span>) + <span class="string">&quot; &quot;</span> + document.get(<span class="string">&quot;price&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 多条件查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryMulti</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ModifiableSolrParams</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModifiableSolrParams</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//组织查询条件</span></span><br><span class="line">        params.set(<span class="string">&quot;q&quot;</span>,<span class="string">&quot;*:*&quot;</span>);</span><br><span class="line">        params.set(<span class="string">&quot;start&quot;</span>,<span class="number">0</span>);</span><br><span class="line">        params.set(<span class="string">&quot;rows&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        params.set(<span class="string">&quot;sort&quot;</span>,<span class="string">&quot;price desc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">QueryResponse</span> <span class="variable">response</span> <span class="operator">=</span> server.query(params);</span><br><span class="line">        <span class="type">SolrDocumentList</span> <span class="variable">list</span> <span class="operator">=</span> response.getResults();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(SolrDocument doc : list)&#123;</span><br><span class="line">            System.out.println(server.getBinder().getBean(Car.class,doc));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryCase</span><span class="params">()</span> <span class="keyword">throws</span>  Exception&#123;</span><br><span class="line">        <span class="type">SolrQuery</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SolrQuery</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//AND OR NOT条件</span></span><br><span class="line"><span class="comment">//      params.set(&quot;q&quot;,&quot;name:35系 AND price:152880.0&quot;);</span></span><br><span class="line"><span class="comment">//      params.set(&quot;q&quot;,&quot;name:5系 OR price:152880.0&quot;);</span></span><br><span class="line"><span class="comment">//      params.set(&quot;q&quot;,&quot;name:5系 NOT price:152880.0&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//To 条件  min &lt;= price &lt;= max</span></span><br><span class="line"><span class="comment">//      params.set(&quot;q&quot;,&quot;price:[130000 TO 160000]&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//To 条件  min &lt; price &lt; max</span></span><br><span class="line"><span class="comment">//      params.set(&quot;q&quot;,&quot;price:&#123;130000 TO 160000&#125;&quot;);</span></span><br><span class="line"><span class="comment">//      params.addFacetQuery(&quot;name:宝马&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示设置</span></span><br><span class="line"><span class="comment">//      params.setHighlight(true);</span></span><br><span class="line"><span class="comment">//      params.addHighlightField(&quot;name&quot;);</span></span><br><span class="line"><span class="comment">//      params.setHighlightSimplePre(&quot;&lt;font color = &#x27;red&#x27;&gt;&quot;);</span></span><br><span class="line"><span class="comment">//      params.setHighlightSimplePost(&quot;&lt;/font&gt;&quot;);</span></span><br><span class="line"><span class="comment">//      params.setHighlightSnippets(1);</span></span><br><span class="line"><span class="comment">//      params.setHighlightFragsize(100);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//      params.set(&quot;start&quot;,0);</span></span><br><span class="line"><span class="comment">//      params.set(&quot;rows&quot;,10);</span></span><br><span class="line">        params.set(<span class="string">&quot;sort&quot;</span>,<span class="string">&quot;price desc&quot;</span>);</span><br><span class="line">        <span class="type">QueryResponse</span> <span class="variable">response</span> <span class="operator">=</span> server.query(params);</span><br><span class="line">        <span class="type">SolrDocumentList</span> <span class="variable">list</span> <span class="operator">=</span> response.getResults();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(SolrDocument doc : list)&#123;</span><br><span class="line">            System.out.println(server.getBinder().getBean(Car.class,doc));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span>&#123;</span><br><span class="line">        server.shutdown();</span><br><span class="line">        server = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.sunjs.com/article/detail/3c89d0ce0dd14cc09079a02121520d91.html">参考JAVA对Solr的增删查改</a></p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/3276/">https://github.com/maxzhao-it/blog/post/3276/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接上代码：&lt;/p&gt;
&lt;p&gt;【1】引入jar&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/65045/"/>
    <id>https://github.com/maxzhao-it/blog/post/65045/</id>
    <published>2022-07-04T06:50:22.610Z</published>
    <updated>2022-07-04T06:50:22.610Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/qingyunzong/p/9004509.html">https://www.cnblogs.com/qingyunzong/p/9004509.html</a></p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/65045/">https://github.com/maxzhao-it/blog/post/65045/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/qingyunzong/p/9004509.html&quot;&gt;https://www.cnblogs.com/qingyunzong/p/9004509.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文地址： &lt;a href=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/38204/"/>
    <id>https://github.com/maxzhao-it/blog/post/38204/</id>
    <published>2022-07-04T06:50:22.609Z</published>
    <updated>2022-07-04T06:50:22.609Z</updated>
    
    <content type="html"><![CDATA[<h3 id="java-lang-IllegalStateException-Unable-to-read-meta-data-for-class"><a href="#java-lang-IllegalStateException-Unable-to-read-meta-data-for-class" class="headerlink" title="java.lang.IllegalStateException: Unable to read meta-data for class"></a>java.lang.IllegalStateException: Unable to read meta-data for class</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalStateException: Unable to read meta-data for class</span><br></pre></td></tr></table></figure><p>一般是由 <code>resources\META-INF\spring.factories</code>文件引起的，检查当前文件。</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/38204/">https://github.com/maxzhao-it/blog/post/38204/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;java-lang-IllegalStateException-Unable-to-read-meta-data-for-class&quot;&gt;&lt;a href=&quot;#java-lang-IllegalStateException-Unable-to-read-meta-da
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot获取有特定注解的Bean</title>
    <link href="https://github.com/maxzhao-it/blog/post/380b5f6e/"/>
    <id>https://github.com/maxzhao-it/blog/post/380b5f6e/</id>
    <published>2022-07-04T06:50:22.608Z</published>
    <updated>2022-07-04T06:50:22.608Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这里发一个案例，获取 <code>RestController</code> 注解的所有<code>bean</code>。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.event.ContextRefreshedEvent;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取有特定注解的Bean&lt;br&gt;</span></span><br><span class="line"><span class="comment"> * demo</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InitRestControllerBeanCache</span> <span class="keyword">implements</span> <span class="title class_">ApplicationListener</span>&lt;ContextRefreshedEvent&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onApplicationEvent</span><span class="params">(ContextRefreshedEvent event)</span> &#123;</span><br><span class="line">        <span class="comment">// 根容器为Spring容器</span></span><br><span class="line">        <span class="keyword">if</span> (event.getApplicationContext().getParent() == <span class="literal">null</span>) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; beans = event.getApplicationContext().getBeansWithAnnotation(RestController.class);</span><br><span class="line">            <span class="keyword">for</span> (Object bean : beans.values()) &#123;</span><br><span class="line">                System.err.println(bean == <span class="literal">null</span> ? <span class="string">&quot;null&quot;</span> : bean.getClass().getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/380b5f6e/">https://github.com/maxzhao-it/blog/post/380b5f6e/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这里发一个案例，获取 &lt;code&gt;RestController&lt;/code&gt; 注解的所有&lt;code&gt;bean&lt;/code&gt;。&lt;/p&gt;
&lt;h1
      
    
    </summary>
    
    
      <category term="Java" scheme="https://github.com/maxzhao-it/blog/categories/Java/"/>
    
      <category term="SpringBoot" scheme="https://github.com/maxzhao-it/blog/categories/Java/SpringBoot/"/>
    
    
      <category term="Java" scheme="https://github.com/maxzhao-it/blog/tags/Java/"/>
    
      <category term="SpringBoot" scheme="https://github.com/maxzhao-it/blog/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/18acddd2/"/>
    <id>https://github.com/maxzhao-it/blog/post/18acddd2/</id>
    <published>2022-07-04T06:50:22.603Z</published>
    <updated>2022-07-04T06:50:22.603Z</updated>
    
    <content type="html"><![CDATA[<p>RBAC是Role Based Access Control的缩写，是基于角色的访问控制。一般都是分为用户（user），<br>角色（role），权限（permission）三个实体，角色（role）和权限（permission）是多对多的<br>关系，用户（user）和角色（role）也是多对多的关系。用户（user）和权限（permission）<br>之间没有直接的关系，都是通过角色作为代理，才能获取到用户（user）拥有的权限。</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/18acddd2/">https://github.com/maxzhao-it/blog/post/18acddd2/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;RBAC是Role Based Access Control的缩写，是基于角色的访问控制。一般都是分为用户（user），&lt;br&gt;角色（role），权限（permission）三个实体，角色（role）和权限（permission）是多对多的&lt;br&gt;关系，用户（user）和角
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/6635/"/>
    <id>https://github.com/maxzhao-it/blog/post/6635/</id>
    <published>2022-07-04T06:50:22.598Z</published>
    <updated>2022-07-04T06:50:22.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>在终端（黑框框）输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sL https://raw.githubusercontent.com/hijkpw/scripts/master/centos_install_v2ray.sh)</span><br></pre></td></tr></table></figure><p>成功后输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> v2ray运行状态：正在运行</span><br><span class="line"> v2ray配置文件：/etc/v2ray/config.json</span><br><span class="line"></span><br><span class="line">v2ray配置信息：               </span><br><span class="line"> IP(address):  104.156.227.241</span><br><span class="line"> 端口(port)：8888</span><br><span class="line"> <span class="built_in">id</span>(uuid)：d71a4507-5d29-452e-81d0-235e89a1868b</span><br><span class="line"> 额外<span class="built_in">id</span>(alterid)： 60</span><br><span class="line"> 加密方式(security)： auto</span><br><span class="line"> 传输协议(network)： tcp</span><br></pre></td></tr></table></figure><p>防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=8888/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">iptables -I INPUT -p tcp --dport 23581 -j ACCEPT</span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> v2ray</span><br></pre></td></tr></table></figure><p><code>ss -ntlp | grep v2ray</code> 命令可以查看v2ray是否正在运行。如果输出为空，大概率是被selinux限制了，解决办法如下：</p><ol><li>禁用selinux：<code>setenforce 0</code>;</li><li>重启v2ray：<code>systemctl restart v2ray</code></li></ol><p>服务器的 <code>/etc/v2ray/config.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;log&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;loglevel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;access&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/log/v2ray/access.log&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/log/v2ray/error.log&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">8888</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;clients&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d71a4507-5d29-452e-81d0-235e89a1868b&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;alterId&quot;</span><span class="punctuation">:</span> <span class="number">60</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;freedom&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blackhole&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blocked&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;routing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;rules&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;geoip:private&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blocked&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>\1. 查看v2ray配置&#x2F;运行状态：<code>bash &lt;(curl -sL https://raw.githubusercontent.com/hijkpw/scripts/master/centos_install_v2ray.sh) info</code>;</p><p>\2. v2ray管理命令：启动：<code>systemctl start v2ray</code>，停止：<code>systemctl stop v2ray</code>，重启：<code>systemctl restart v2ray</code>;</p><p>\3. 更改端口、alterid最简单的办法：重新运行一键脚本；</p><p>\4. 更新v2ray到最新版：<code>bash &lt;(curl -L -s https://install.direct/go.sh)</code></p><p>\5. 卸载v2ray： <code>bash &lt;(curl -sL https://raw.githubusercontent.com/hijkpw/scripts/master/centos_install_v2ray.sh) uninstall</code></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>下载地址 <a href="https://github.com/v2ray/v2ray-core/tags">https://github.com/v2ray/v2ray-core/tags</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://install.direct/go.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>go.sh 需要配置地址 LOCAL为对应v2ray-linux64.zip</p><p>详细配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">PROXY=&#x27;&#x27;</span><br><span class="line">HELP=&#x27;&#x27;</span><br><span class="line">FORCE=&#x27;&#x27;</span><br><span class="line">CHECK=&#x27;&#x27;</span><br><span class="line">REMOVE=&#x27;&#x27;</span><br><span class="line">VERSION=&#x27;&#x27;</span><br><span class="line">VSRC_ROOT=&#x27;/tmp/v2ray&#x27;</span><br><span class="line">EXTRACT_ONLY=&#x27;&#x27;</span><br><span class="line">LOCAL=&#x27;v2ray-linux<span class="number">-64.</span>zip&#x27;</span><br><span class="line">LOCAL_INSTALL=&#x27;<span class="number">1</span>&#x27;</span><br><span class="line">DIST_SRC=&#x27;github&#x27;</span><br><span class="line">ERROR_IF_UPTODATE=&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">CUR_VER=<span class="string">&quot;&quot;</span></span><br><span class="line">NEW_VER=<span class="string">&quot;&quot;</span></span><br><span class="line">VDIS=&#x27;&#x27;</span><br><span class="line">ZIPFILE=<span class="string">&quot;/tmp/v2ray/v2ray.zip&quot;</span></span><br><span class="line">V2RAY_RUNNING=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo bash go.sh</span><br><span class="line">or</span><br><span class="line">sudo ./go.sh</span><br></pre></td></tr></table></figure><p>其它令名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> v2ray <span class="comment"># 设置开机自启</span></span><br><span class="line">systemctl start v2ray <span class="comment"># 运行v2ray</span></span><br><span class="line">systemctl stop v2ray <span class="comment"># 停止v2ray</span></span><br><span class="line"><span class="comment"># ubuntu上述启动命令无效时：</span></span><br><span class="line">service v2ray start <span class="comment"># 运行v2ray</span></span><br><span class="line">service v2ray stop <span class="comment"># 停止v2ray</span></span><br></pre></td></tr></table></figure><p>查看v2ray服务运行端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo netstat -tunlp | grep v2ray</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">sudo ss -tunlp | grep v2ray</span><br></pre></td></tr></table></figure><p>客户端 <code>/etc/v2ray/config.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;listen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;socks&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sniffing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;destOverride&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;http&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;tls&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;proxy&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vnext&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;104.156.227.241&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">8888</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;users&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;alterId&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d71a4507-5d29-452e-81d0-235e89a1868b&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;security&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tcp&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;security&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;freedom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blackhole&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blocked&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;routing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;rules&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;geoip:private&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blocked&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/6635/">https://github.com/maxzhao-it/blog/post/6635/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;服务器&quot;&gt;&lt;a href=&quot;#服务器&quot; class=&quot;headerlink&quot; title=&quot;服务器&quot;&gt;&lt;/a&gt;服务器&lt;/h2&gt;&lt;p&gt;在终端（黑框框）输入如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/4636/"/>
    <id>https://github.com/maxzhao-it/blog/post/4636/</id>
    <published>2022-07-04T06:50:22.584Z</published>
    <updated>2022-07-04T06:50:22.584Z</updated>
    
    <content type="html"><![CDATA[<p>Java 自定义序列化时的原理：</p><p><img src="/blog/home/maxzhao/.config/Typora/typora-user-images/image-20200513142244770.png"></p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/4636/">https://github.com/maxzhao-it/blog/post/4636/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java 自定义序列化时的原理：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/home/maxzhao/.config/Typora/typora-user-images/image-20200513142244770.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;本文地址： &lt;a href
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/7ebd2e5c/"/>
    <id>https://github.com/maxzhao-it/blog/post/7ebd2e5c/</id>
    <published>2022-07-04T06:50:22.582Z</published>
    <updated>2022-07-28T09:37:15.989Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/blog/uploads/images/JAVA/JDK/java.lang/v2-c06e74c4a9480b343c92c849291ba5f5_720w.jpg" alt="img"></p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/7ebd2e5c/">https://github.com/maxzhao-it/blog/post/7ebd2e5c/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/blog/uploads/images/JAVA/JDK/java.lang/v2-c06e74c4a9480b343c92c849291ba5f5_720w.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;本文地址： &lt;a href=&quot;https://
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/8778/"/>
    <id>https://github.com/maxzhao-it/blog/post/8778/</id>
    <published>2022-07-04T06:50:22.580Z</published>
    <updated>2022-07-28T09:37:15.996Z</updated>
    
    <content type="html"><![CDATA[<p>记录自己在Linux上打包APK的过程。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>OS: Arch Linux</li><li>Kernel: x86_64 Linux 5.6.13-arch1-1</li><li>SDK: 26.0.3</li><li>签名v2: apksigner\zipalign （我这里的属于SDK29.0.3，可以签名）</li></ul><h3 id="安装SDK"><a href="#安装SDK" class="headerlink" title="安装SDK"></a>安装SDK</h3><p>ArchLinux 下直接可以安装 <code>sudo pacman -S android-sdk</code></p><p>其它发行版百度可以解决;</p><h3 id="安装需要的-版本"><a href="#安装需要的-版本" class="headerlink" title="安装需要的 版本"></a>安装需要的 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdkmanager <span class="string">&quot;build-tools;26.0.0&quot;</span></span><br></pre></td></tr></table></figure><h3 id="把签名工具放入环境变量中"><a href="#把签名工具放入环境变量中" class="headerlink" title="把签名工具放入环境变量中"></a>把签名工具放入环境变量中</h3><h3 id="开始打包"><a href="#开始打包" class="headerlink" title="开始打包"></a>开始打包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cordova platform rm android</span><br><span class="line">cordova platform add android@6.4.0</span><br><span class="line">gulp build:android  </span><br></pre></td></tr></table></figure><p><code>gulp build:android</code>是自定义脚本</p><p>主要执行三步操作：</p><ul><li><p>‘cordova-build:android’ 打包</p></li><li><p>‘zipalign’ 签名</p></li><li><p>‘apksigner:sign’ 签名</p></li></ul><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/8778/">https://github.com/maxzhao-it/blog/post/8778/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录自己在Linux上打包APK的过程。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;OS: Arch Linux&lt;/li&gt;
&lt;li&gt;Kernel: x86_
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Cordova打包Angular项目</title>
    <link href="https://github.com/maxzhao-it/blog/post/18836/"/>
    <id>https://github.com/maxzhao-it/blog/post/18836/</id>
    <published>2022-07-04T06:50:22.579Z</published>
    <updated>2022-07-04T06:50:22.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>已有 <code>Angular</code> 项目，使用 <code>Cordova</code> 打包成 <code>APP</code>。</p><blockquote><p><code>Angular version = 11.2.10</code><br><code>Cordova version = 10.0.0</code></p></blockquote><h1 id="创建-Cordova-项目"><a href="#创建-Cordova-项目" class="headerlink" title="创建 Cordova 项目"></a>创建 <code>Cordova</code> 项目</h1><h2 id="项目名称与-Angular-项目名称相同"><a href="#项目名称与-Angular-项目名称相同" class="headerlink" title="项目名称与 Angular 项目名称相同"></a>项目名称与 <code>Angular</code> 项目名称相同</h2><h2 id="下载-gradle-6-5-all-zip-timtout"><a href="#下载-gradle-6-5-all-zip-timtout" class="headerlink" title="下载 gradle-6.5-all.zip timtout"></a>下载 <code>gradle-6.5-all.zip timtout</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Downloading https://services.gradle.org/distributions/gradle-6.5-all.zip failed: <span class="built_in">timeout</span></span><br></pre></td></tr></table></figure><p>直接浏览器下载，然后放入路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/maxzhao/.gradle/wrapper/dists/gradle-6.5-all/2oz4ud9k3tuxjg84bbf55q0tn</span><br></pre></td></tr></table></figure><p><code>GRADLE_USER_HOME</code>可以修改面上的路径。</p><h2 id="gradle-使用-阿里云镜像"><a href="#gradle-使用-阿里云镜像" class="headerlink" title="gradle 使用 阿里云镜像"></a><code>gradle</code> 使用 阿里云镜像</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123; </span><br><span class="line">      maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/google&#x27;</span> &#125;</span><br><span class="line">      maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/jcenter&#x27;</span> &#125;</span><br><span class="line">      maven &#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">      maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/google&#x27;</span> &#125;</span><br><span class="line">      maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/jcenter&#x27;</span> &#125;</span><br><span class="line">      maven &#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>备用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27; &#125;</span><br><span class="line"> maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/repositories/jcenter&#x27; &#125;</span><br></pre></td></tr></table></figure><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/18836/">https://github.com/maxzhao-it/blog/post/18836/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;已有 &lt;code&gt;Angular&lt;/code&gt; 项目，使用 &lt;code&gt;Cordova&lt;/code&gt; 打包成 &lt;code&gt;APP&lt;/code
      
    
    </summary>
    
    
      <category term="Hybrid" scheme="https://github.com/maxzhao-it/blog/categories/Hybrid/"/>
    
      <category term="Cordova" scheme="https://github.com/maxzhao-it/blog/categories/Hybrid/Cordova/"/>
    
    
      <category term="混合开发" scheme="https://github.com/maxzhao-it/blog/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
      <category term="Cordova" scheme="https://github.com/maxzhao-it/blog/tags/Cordova/"/>
    
      <category term="Angular" scheme="https://github.com/maxzhao-it/blog/tags/Angular/"/>
    
  </entry>
  
  <entry>
    <title>IOS用H5播放语音（视频）流失败</title>
    <link href="https://github.com/maxzhao-it/blog/post/40242/"/>
    <id>https://github.com/maxzhao-it/blog/post/40242/</id>
    <published>2022-07-04T06:50:22.579Z</published>
    <updated>2022-07-04T06:50:22.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当前主要记录问题的<strong>发现过程</strong>以及<strong>解决过程</strong>，其中包含关键性的<strong>代码（也包含错误代码）</strong>。</p><p>主线任务外的分析过程省略，但会展示部分的分析结果。</p><h2 id="问题的发现"><a href="#问题的发现" class="headerlink" title="问题的发现"></a>问题的发现</h2><h4 id="1-使用文件服务"><a href="#1-使用文件服务" class="headerlink" title="1. 使用文件服务"></a>1. 使用文件服务</h4><p>有一个文件服务，这个文件服务可以对接多种存储，所以我们封装了上传、下载文件的方法。</p><h4 id="2-调用文件服务接口"><a href="#2-调用文件服务接口" class="headerlink" title="2. 调用文件服务接口"></a>2. 调用文件服务接口</h4><p>上传、下载文件是没什么问题的，问题出现在了使用 <strong><audio></strong>   与  <strong><video></strong> 标签上。</p><p>标签的 <code>src</code> 指向音频（视频）文件的下载地址。</p><p><code>备注：如果这里不是通过下载地址返回文件流，下面的叙述就可以不用看了。</code></p><h5 id="下载代码展示"><a href="#下载代码展示" class="headerlink" title="下载代码展示"></a>下载代码展示</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileSystemController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&#123;&quot;/&#123;id&#125;&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;org.springframework.core.io.Resource&gt; download(<span class="meta">@PathVariable</span> String id) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        org.springframework.core.io.<span class="type">Resource</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="built_in">this</span>.fileServerService.downloadAttach(id);</span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">headers</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">        <span class="type">long</span> <span class="variable">contentLength</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            headers.add(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + resource.getFilename());</span><br><span class="line">            contentLength = resource.contentLength();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var7) &#123;</span><br><span class="line">            log.error(var7.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ((BodyBuilder) ResponseEntity.ok().headers(headers)).contentLength(contentLength).contentType(MediaType.parseMediaType(<span class="string">&quot;application/octet-stream&quot;</span>)).body(resource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时会发现，所有的音频（视频）文件流 <code>src</code>都是播放不了的。</p><p>如果仔细探究当前代码，会发现当前会返回”多余的结果”，<strong>由此猜测：</strong>这些”多余的结果”导致无法直接播放音频（视频），图片也是一样的道理。</p><h4 id="3-单独开发音频（视频）文件预览接口"><a href="#3-单独开发音频（视频）文件预览接口" class="headerlink" title="3. 单独开发音频（视频）文件预览接口"></a>3. 单独开发音频（视频）文件预览接口</h4><h5 id="第一个版本比较简陋，这里不做分析。"><a href="#第一个版本比较简陋，这里不做分析。" class="headerlink" title="第一个版本比较简陋，这里不做分析。"></a>第一个版本比较简陋，这里不做分析。</h5><h5 id="代码展示：第二个版本"><a href="#代码展示：第二个版本" class="headerlink" title="代码展示：第二个版本"></a>代码展示：第二个版本</h5><p>第二个版本对音频（视频）文件做了分片处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileSystemController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&#123;&quot;/&#123;id&#125;&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">download</span><span class="params">(<span class="meta">@PathVariable</span> String id,</span></span><br><span class="line"><span class="params">                         HttpServletRequest request,</span></span><br><span class="line"><span class="params">                         HttpServletResponse response)</span> &#123;</span><br><span class="line">        org.springframework.core.io.Resource resource;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            resource = <span class="built_in">this</span>.fileServerService.downloadAttach(id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException runtimeException) &#123;</span><br><span class="line">            <span class="comment">/*文件不存在*/</span></span><br><span class="line">            log.error(<span class="string">&quot;当前获取的文件不存在 &#123;&#125; &quot;</span>, id);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + resource.getFilename());</span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> id.toLowerCase();</span><br><span class="line">            <span class="comment">/*获取扩展名*/</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">extName</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">/*获取 range*/</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">requestRange</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;range&quot;</span>);</span><br><span class="line">            <span class="comment">/*实际长度*/</span></span><br><span class="line">            <span class="type">long</span> <span class="variable">contentLength</span> <span class="operator">=</span> resource.contentLength();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.hasText(requestRange)) &#123;</span><br><span class="line">                <span class="comment">/*获取需要的长度*/</span></span><br><span class="line">                String[] rangeLimit = requestRange.substring(<span class="number">6</span>).split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">rangeStart</span> <span class="operator">=</span> rangeLimit[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">if</span> (!StringUtils.hasText(rangeStart)) &#123;</span><br><span class="line">                    rangeStart = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">String</span> <span class="variable">rangeEnd</span> <span class="operator">=</span> rangeLimit.length == <span class="number">2</span> ? rangeLimit[<span class="number">1</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.hasText(rangeEnd)) &#123;</span><br><span class="line">                    <span class="comment">/*存在结束*/</span></span><br><span class="line">                    response.setHeader(<span class="string">&quot;Content-Range&quot;</span>, <span class="string">&quot;bytes &quot;</span> + rangeStart + <span class="string">&quot;-&quot;</span> + rangeEnd + <span class="string">&quot;/&quot;</span> + resource.contentLength());</span><br><span class="line">                    contentLength = Integer.parseInt(rangeEnd) - Integer.parseInt(rangeStart) + <span class="number">1</span>;</span><br><span class="line">                    response.setHeader(<span class="string">&quot;Accept-Ranges&quot;</span>, <span class="string">&quot;bytes&quot;</span>);</span><br><span class="line">                    response.setHeader(<span class="string">&quot;Last-Modified&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>().toString());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">/*不存在分片*/</span></span><br><span class="line">                    response.setHeader(<span class="string">&quot;Content-Range&quot;</span>, <span class="string">&quot;bytes &quot;</span> + rangeStart + <span class="string">&quot;-&quot;</span> + resource.contentLength() + <span class="string">&quot;/&quot;</span> + resource.contentLength());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                response.setHeader(<span class="string">&quot;Content-Range&quot;</span>, <span class="string">&quot;bytes 0-&quot;</span> + resource.contentLength() + <span class="string">&quot;/&quot;</span> + resource.contentLength());</span><br><span class="line">            &#125;</span><br><span class="line">            response.setContentLengthLong(contentLength);</span><br><span class="line">            <span class="keyword">if</span> (videoExtNames.contains(extName)) &#123;</span><br><span class="line">                response.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;video/&quot;</span> + extName);</span><br><span class="line">                response.setContentType(<span class="string">&quot;video/&quot;</span> + extName);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (audioExtNames.contains(extName)) &#123;</span><br><span class="line">                response.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;audio/&quot;</span> + extName);</span><br><span class="line">                response.setContentType(<span class="string">&quot;audio/&quot;</span> + extName);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                response.setContentType(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">BufferedInputStream</span> <span class="variable">bufferedInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(resource.getInputStream());</span><br><span class="line">            <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[bufferedInputStream.available()];</span><br><span class="line">            bufferedInputStream.read(b);</span><br><span class="line">            <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">            outputStream.write(b);</span><br><span class="line">            outputStream.flush();</span><br><span class="line">            outputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;获取文件报错:&#123;&#125;&quot;</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-使用第二个版本的代码"><a href="#4-使用第二个版本的代码" class="headerlink" title="4. 使用第二个版本的代码"></a>4. 使用第二个版本的代码</h4><ol><li>当前代码在<strong>安卓</strong>、<strong>chrome</strong>等苹果外的设备测试正常，图片、音频（视频）展示正常，播放正常；</li><li>当打包<strong>IOS</strong>和<strong>safari</strong>浏览器中使用时，会出现两种现象：<ol><li>视频在网络信号差时会缺少片段；</li><li>音频文件大于 <code>50KB</code>时，会出现异常情况，比如：全是杂音、播放出错；</li></ol></li></ol><h4 id="5-对苹果设备中的现象不断测试"><a href="#5-对苹果设备中的现象不断测试" class="headerlink" title="5. 对苹果设备中的现象不断测试"></a>5. 对苹果设备中的现象不断测试</h4><p>经过长时间的测试，发现了不少现象：</p><ol><li>本地访问不会报错（<code>app</code>与文件服务在同一台设备上）；</li><li>音频大于 <code>50KB</code>时，会出现杂音、播放出错、时长不够、重复播放片段；</li><li>视频播放会缺少部分片段、时长不够；</li></ol><h4 id="6-根据出现的现象，对现象进行分析"><a href="#6-根据出现的现象，对现象进行分析" class="headerlink" title="6. 根据出现的现象，对现象进行分析"></a>6. 根据出现的现象，对现象进行分析</h4><p>这些问题的出现，主要在<code>app</code>与文件服务是否在统一服务器上；</p><ol><li><strong>测试情况1</strong>：<code>app</code>与文件服务部署在同一台服务器上；</li><li><strong>测试情况2</strong>：<code>app</code>与文件服务部署在不同服务器上；</li></ol><p>针对这个相同服务器与不同服务器的请求进行分析，得出几种结论：</p><ol><li>苹果外的设备会<strong>一次获取</strong>整个音频（视频）文件；<ol><li><code>header</code>中的<code>range</code>为 <code>bytes=0-</code>；</li></ol></li><li>苹果设备在<strong>测试情况1</strong>中，会发送两次请求获取文件：<ol><li><code>range 0-1</code>请求当前文件是否存在。</li><li><code>range 0-3000</code> 请求当前文件（<code>3000</code>是文件大小，也就是<code>header</code>中的<code>ContentLength</code>）。</li><li><strong>结果：音频（视频）可以正常播放；</strong></li></ol></li><li>苹果设备在<strong>测试情况2</strong>中，会发送多次请求获取文件：<ol><li><code>range 0-1</code>请求当前文件是否存在。<strong>——请求正常返回</strong></li><li><code>range 0-3000</code> 请求当前文件。<span style="color:red;"><strong>——请求错误</strong></span></li><li><code>range 588-2563</code> 分片请求当前文件。<strong>——请求正常返回</strong></li><li><code>range 2563-3000</code> 分片请求当前文件。<strong>——请求正常返回</strong></li><li><strong>结果：会出现杂音、播放出错、时长不够、重复播放片段等现象</strong></li></ol></li></ol><h4 id="7-通过现象调整代码"><a href="#7-通过现象调整代码" class="headerlink" title="7. 通过现象调整代码"></a>7. 通过现象调整代码</h4><p>经过一番风雨发现：</p><p>分片操作不对，在分片时，需要根据分片的大小，读取文件不同的片段。</p><p>改动后的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileSystemController</span> &#123;</span><br><span class="line">    <span class="comment">//    ****</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">download</span><span class="params">(<span class="meta">@PathVariable</span> String id,</span></span><br><span class="line"><span class="params">                         HttpServletRequest request,</span></span><br><span class="line"><span class="params">                         HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(requestRange)) &#123;</span><br><span class="line">            outputStream.write(b, (<span class="type">int</span>) rangeStart, (<span class="type">int</span>) contentLength);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            outputStream.write(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里会把当前<strong>苹果设备</strong>请求的分片大小，写到输出流中。</p><h4 id="8-针对有问题的测试情况2进行测试"><a href="#8-针对有问题的测试情况2进行测试" class="headerlink" title="8. 针对有问题的测试情况2进行测试"></a>8. 针对有问题的<strong>测试情况2</strong>进行测试</h4><p>苹果设备在<strong>测试情况2</strong>中，会发送多次请求获取文件：</p><ol><li><code>range 0-1</code>请求当前文件是否存在。<strong>——请求正常返回</strong></li><li><code>range 0-3000</code> 请求当前文件。<span style="color:red;"><strong>——请求错误</strong></span></li><li><code>range 588-2563</code> 分片请求当前文件。<strong>——请求正常返回</strong></li><li><code>range 2563-3000</code> 分片请求当前文件。<strong>——请求正常返回</strong></li><li><strong>结果：语音（视频）</strong>播放正常。</li></ol><h4 id="9-针对正常结果进行分析"><a href="#9-针对正常结果进行分析" class="headerlink" title="9. 针对正常结果进行分析"></a>9. 针对正常结果进行分析</h4><ol><li>对于苹果设备的分片请求，没有正确的分片，会导致苹果设备获取到错误的片段，从而导致杂音。</li><li>苹果设备有一个分片是<strong>请求全部文件</strong>，但是报错了，不影响播放。</li></ol><h4 id="代码中的问题"><a href="#代码中的问题" class="headerlink" title="代码中的问题"></a>代码中的问题</h4><p>这里的问题主要体现在文件分片的逻辑错误，在苹果设备外的其它设备上，是体现不出当前分片效果的。</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/40242/">https://github.com/maxzhao-it/blog/post/40242/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;当前主要记录问题的&lt;strong&gt;发现过程&lt;/strong&gt;以及&lt;strong&gt;解决过程&lt;/strong&gt;，其中包含关键性的&lt;strong&gt;
      
    
    </summary>
    
    
      <category term="混合开发" scheme="https://github.com/maxzhao-it/blog/categories/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
      <category term="IOS" scheme="https://github.com/maxzhao-it/blog/categories/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/IOS/"/>
    
      <category term="IOS使用H5播放音频（视频）流" scheme="https://github.com/maxzhao-it/blog/categories/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/IOS/IOS%E4%BD%BF%E7%94%A8H5%E6%92%AD%E6%94%BE%E9%9F%B3%E9%A2%91%EF%BC%88%E8%A7%86%E9%A2%91%EF%BC%89%E6%B5%81/"/>
    
    
      <category term="混合开发" scheme="https://github.com/maxzhao-it/blog/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
      <category term="IOS" scheme="https://github.com/maxzhao-it/blog/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>IM的消息系统架构</title>
    <link href="https://github.com/maxzhao-it/blog/post/7552f68d/"/>
    <id>https://github.com/maxzhao-it/blog/post/7552f68d/</id>
    <published>2022-07-04T06:50:22.579Z</published>
    <updated>2022-07-04T06:50:22.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如今高度信息化的互联网时代，生活中<code>Instant Messaging</code>与我们息息相关，例如微信、钉钉等以 <code>IM</code> 系统为核心的产品。像一些游戏、社交软件都离不开 <code>IM</code>。</p><p> <code>IM</code> 从早起的 <code>QQ</code>、飞信等发展到现在，软件架构也不断的在迭代，从早期的CS、P2P演变到现在，后台已经成为了一个复杂的分布式系统，涉及网络通讯、移动端、安全、存储、检索等技术。</p><p><code>IM</code>系统中最核心的是消息系统，消息系统的核心功能有消息的同步、存储和检索；</p><p>下面就基于社区比较火的 <code>Timeline</code>模型来构建消息系统（不依赖 <code>TableStore</code>）。</p><h2 id="传统架构VS现代架构"><a href="#传统架构VS现代架构" class="headerlink" title="传统架构VS现代架构"></a>传统架构VS现代架构</h2><p><img src="/blog/uploads/images/4cc3b1ade97b9290c56aeda2e8147b9e.png"></p><p>主要区别就是 现代架构下，消息是先存储后同步，消息不会丢失，多端同步、消息检索都是全量消息存储带来的好处。</p><p>现在架构下最大的挑战就是消息管理和索引。</p><h2 id="基础模型"><a href="#基础模型" class="headerlink" title="基础模型"></a>基础模型</h2><h3 id="Timeline-模型"><a href="#Timeline-模型" class="headerlink" title="Timeline 模型"></a><code>Timeline</code> 模型</h3><p><code>Timeline</code>模型是针对消息数据场景所新创的一个数据模型，它的特色在于能够满足消息数据场景对消息保序、海量消息存储、实时同步的特殊需求。</p><p><img src="/blog/uploads/images/eff4116cb2daa5db6eab53eb72c07e80.png"></p><p><code>Timeline</code>的构成主要包括：</p><ul><li><code>Timeline ID</code>：唯一标识Timeline的ID。</li><li><code>Timeline Meta</code>：<code>Timeline</code>的元数据，元数据内可包含任意键值对属性。</li><li><code>Message Sequence</code>：消息队列，承载该Timeline下的所有消息。消息在队列里有序保存，并且根据写入顺序分配自增的ID。一个消息队列可承载的消息个数无上限，在消息队列内部可根据消息ID随机定位某条消息，并提供正序或者反序扫描。</li><li><code>Message Entry</code>：消息体，包含消息的具体内容，可以包含任意键值对。</li></ul><p><strong>消息同步</strong>可以基于 <code>Timeline</code>实现，搭配 <code>ack</code> 机制，无障碍拉取各端消息。</p><p><strong>消息存储</strong>可以基于 <code>Timeline</code>实现，持久化所有数据。</p><p><strong>消息检索</strong>一般基于消息内容和消息类型来灵活检索。</p><h3 id="消息存储模型"><a href="#消息存储模型" class="headerlink" title="消息存储模型"></a>消息存储模型</h3><p><img src="/blog/uploads/images/3d3c24fc5be76697d79339b459568013.png"></p><p>消息存储要求每个会话都对应一个 <code>Timeline</code>,消息根据会话顺序排序，然后持久化存储。</p><h3 id="消息同步模型"><a href="#消息同步模型" class="headerlink" title="消息同步模型"></a>消息同步模型</h3><p><img src="/blog/uploads/images/176939b469c63765ab0a543c4832f034.png"></p><p>消息同步模型一般有读扩散（也叫拉模式）和写扩散（也叫推模式）两种不同的方式。</p><ul><li><strong>读扩散</strong>：消息存储模型中，每个会话的 <code>Timeline</code> 中保存了这个会话的全量消息。读扩散的消息同步模式下，每个会话中产生的新的消息，只需要写一次到其用于存储的 Timeline 中，接收端从这个 <code>Timeline</code> 中拉取新的消息。优点是消息只需要写一次，相比写扩散的模式，能够大大降低消息写入次数，特别是在群消息这种场景下。但其缺点也比较明显，接收端去同步消息的逻辑会相对复杂和低效。接收端需要对每个会话都拉取一次才能获取全部消息，读被大大的放大，并且会产生很多无效的读，因为并不是每个会话都会有新消息产生。</li></ul><ol><li><strong>写扩散</strong>：写扩散的消息同步模式，需要有一个额外的 <code>Timeline</code> 来专门用于消息同步，通常是每个接收端都会拥有一个独立的同步 <code>Timeline</code>（或者叫收件箱），用于存放需要向这个接收端同步的所有消息。每个会话中的消息，会产生多次写，除了写入用于消息存储的会话 <code>Timeline</code>，还需要写入需要同步到的接收端的同步 <code>Timeline</code>。在个人与个人的会话中，消息会被额外写两次，除了写入这个会话的存储 <code>Timeline</code>，还需要写入参与这个会话的两个接收者的同步 <code>Timeline</code>。而在群这个场景下，写入会被更加的放大，如果这个群拥有 N 个参与者，那每条消息都需要额外的写 N 次。写扩散同步模式的优点是，在接收端消息同步逻辑会非常简单，只需要从其同步 <code>Timeline</code> 中读取一次即可，大大降低了消息同步所需的读的压力。其缺点就是消息写入会被放大，特别是针对群这种场景。</li></ol><p><code>Timeline</code> 模型不会对选择读扩散还是写扩散做约束，而是能同时支持两种模式，因为本质上两种模式的逻辑数据模型并无差别，只是消息数据是用一个 <code>Timeline</code> 来支持多端读还是复制到多个 Timeline 来支持多端读的问题。</p><p><code>IM</code>消息系统用，通常选择<strong>写扩散</strong>，消息一般写入一次，频繁读取，典型的读多写少的场景。大大增加了读的性能，用空间换时间。但是对于万人大群，读扩散又是一个好的选择。</p><h2 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h2><p><img src="/blog/uploads/images/image-20220112085735400.png"></p><p>如图是一个典型的消息系统架构，架构中包含几个重要组件：</p><ul><li><strong>接入端</strong>：作为消息的发送和接收端。</li><li><strong>消息服务</strong>：一组无状态的服务器，可水平扩展，处理消息的发送和接收请求，连接后端消息系统。</li><li><strong>消息队列</strong>：新写入消息的缓冲队列，消息系统的前置消息存储，用于削峰填谷以及异步消费。</li><li><strong>消息处理</strong>：一组无状态的消费处理服务器，用于异步消费消息队列中的消息数据，处理消息的持久化和写扩散同步。</li><li><strong>消息存储和索引库</strong>：持久化存储消息，每个会话对应一个 <code>Timeline</code> 进行消息存储，存储的消息建立索引来实现消息检索。</li><li><strong>消息同步库</strong>：写扩散形式同步消息，每个用户的收件箱对应一个 Timeline，同步库内消息不需要永久保存，通常对消息设定一个生命周期。<br>新消息会由端发出，通常消息体中会携带消息 ID（用于去重）、逻辑时间戳（用于排序）、消息类型（控制消息、图片消息或者文本消息等）、消息体等内容。消息会先写入消息队列，作为底层存储的一个临时缓冲区。消息队列中的消息会由消息处理服务器消费，可以允许乱序消费。消息处理服务器对消息先存储后同步，先写入发件箱 Timeline（存储库），后写扩散至各个接收端的收件箱（同步库）。消息数据写入存储库后，会被近实时的构建索引，索引包括文本消息的全文索引以及多字段索引（发送方、消息类型等）。</li></ul><p>对于在线的设备，可以由消息服务器主动推送至在线设备端。对于离线设备，登录后会主动向服务端同步消息。每个设备会在本地保留有最新一条消息的顺序 <code>ID</code>，向服务端同步该顺序 <code>ID</code> 后的所有消息。</p><h2 id="数据库选型"><a href="#数据库选型" class="headerlink" title="数据库选型"></a>数据库选型</h2><h3 id="基于-TableStore"><a href="#基于-TableStore" class="headerlink" title="基于 TableStore"></a>基于 <code>TableStore</code></h3><p>消息系统最核心的两个库是消息同步库和消息存储库，两个库对数据库有不同的要求：</p><table><thead><tr><th align="left"></th><th align="left">消息同步库</th><th align="left">消息存储库</th></tr></thead><tbody><tr><td align="left">数据模型</td><td align="left">Timeline模型</td><td align="left">Timeline模型</td></tr><tr><td align="left">写能力</td><td align="left">高并发写，十万级TPS</td><td align="left">高并发写，少量读，万级TPS</td></tr><tr><td align="left">读能力</td><td align="left">高并发范围读，十万级TPS</td><td align="left">少量范围读，千级TPS</td></tr><tr><td align="left">存储规模</td><td align="left">保存一段时间内的同步消息，TB级。保留千万级的<code>Timeline</code>规模。</td><td align="left">保存全量消息，百TB级。保留亿级的<code>Timeline</code>规模。</td></tr></tbody></table><p>总结下来，对数据库的要求有如下几点：</p><ol><li>表结构设计能够满足<code>Timeline</code>模型的功能要求：不要求关系模型，能够实现队列模型，并能够支持生成自增的<code>SeqId</code>。</li><li>能够支持高并发写和范围读，规模在十万级TPS。</li><li>能够保存海量数据，百TB级。</li><li>能够为数据定义生命周期。</li></ol><p>阿里云表格存储（<code>TableStore</code>）是基于<code>LSM</code>存储引擎的分布式<code>NoSQL</code>数据库，支持百万<code>TPS</code>高并发读写，<code>PB</code>级数据存储，数据支持<code>TTL</code>，能够很好的满足以上需求，并且支持自增列，能够非常完美的设计和实现Timeline的物理模型。</p><h3 id="基于传统数据库"><a href="#基于传统数据库" class="headerlink" title="基于传统数据库"></a>基于传统数据库</h3><table><thead><tr><th align="left"></th><th align="left">消息同步库</th><th align="left">消息存储库</th></tr></thead><tbody><tr><td align="left">数据模型</td><td align="left">MongoDB</td><td align="left">MySQL</td></tr><tr><td align="left">写能力</td><td align="left">高并发写，万级TPS</td><td align="left">高并发写，少量读，千级TPS</td></tr><tr><td align="left">读能力</td><td align="left">高并发范围读，万级TPS</td><td align="left">少量范围读，千级TPS</td></tr><tr><td align="left">存储规模</td><td align="left">保存一段时间内的同步消息，GB级。</td><td align="left">保存全量消息，GB级。</td></tr></tbody></table><p>在写能力与读能力上，基于目前所用服务器的性能标准，在目标上与<code>TableStore</code>存储有巨大差距。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://developer.aliyun.com/article/253242">现代IM系统中消息推送和存储架构的实现</a></p><p><a href="https://developer.aliyun.com/article/319138"><code>TableStore Timeline</code>：轻松构建千万级IM和Feed流系统</a></p><p><a href="https://www.cnblogs.com/lovecindywang/archive/2011/03/02/1969324.html">MongoDB亿级数据量的性能测试</a></p></blockquote><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/7552f68d/">https://github.com/maxzhao-it/blog/post/7552f68d/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;如今高度信息化的互联网时代，生活中&lt;code&gt;Instant Messaging&lt;/code&gt;与我们息息相关，例如微信、钉钉等以 &lt;code
      
    
    </summary>
    
    
      <category term="IM" scheme="https://github.com/maxzhao-it/blog/categories/IM/"/>
    
    
      <category term="IM" scheme="https://github.com/maxzhao-it/blog/tags/IM/"/>
    
      <category term="架构" scheme="https://github.com/maxzhao-it/blog/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>IM系统分析</title>
    <link href="https://github.com/maxzhao-it/blog/post/eb63d0bf/"/>
    <id>https://github.com/maxzhao-it/blog/post/eb63d0bf/</id>
    <published>2022-07-04T06:50:22.579Z</published>
    <updated>2022-07-04T06:50:22.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>为什么要做一个<code>IM</code>？这个想法是从一个聊天项目开始，公司原来的聊天项目已破败不堪，继续优化不如重构。经过一番了解，决定构建一个即时通讯，并在此基础上扩展聊天功能。</p><p>目前网络上的<code>IM</code>案例数不胜数，参考网络中众多的案例并结合自身业务需要，来构建属于自己的<code>IM</code>系统。</p><h1 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h1><ol><li>社交</li><li>在线客服</li><li>待办提醒、工作提醒等</li><li>抽奖 </li><li>红包</li></ol><p>举个例子：</p><p>我们年会有红包抽奖活动，有999红包10个 ,888红包20个,88红包50个,8红包1000个，我们需要实时看到每种红包剩余数量。</p><h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><h2 id="整体目标"><a href="#整体目标" class="headerlink" title="整体目标"></a>整体目标</h2><p>整体项目构建目标：</p><ol><li>即时通讯系统（<code>IM</code>）。</li><li>聊天系统（<code>IM-Chat</code>）</li><li>后端管理平台</li><li>应用管理平台</li></ol><h2 id="技术目标"><a href="#技术目标" class="headerlink" title="技术目标"></a>技术目标</h2><ol><li>小型化</li><li>单节点万人同时在线</li><li>可水平扩展</li><li>多通讯协议</li><li>第三方登录</li><li>服务监控</li></ol><p>在移动端，长连接是未来趋势，并且比<code>Http</code>请求的数据量更小（像<code>WebSocket</code>，连接只需要一个 <code>headers</code>）。</p><h2 id="阶段性目标"><a href="#阶段性目标" class="headerlink" title="阶段性目标"></a>阶段性目标</h2><h3 id="一阶段"><a href="#一阶段" class="headerlink" title="一阶段"></a>一阶段</h3><ol><li>小型化</li><li>单节点万人同时在线</li><li>可水平扩展</li><li>通讯协议：<code>WS</code></li><li>接入端：<code>HTML5</code></li></ol><h3 id="二阶段"><a href="#二阶段" class="headerlink" title="二阶段"></a>二阶段</h3><ol><li>第三方登录</li><li>服务监控</li></ol><h3 id="三阶段"><a href="#三阶段" class="headerlink" title="三阶段"></a>三阶段</h3><ol><li>通讯协议：<code>TCP</code>&#x2F;<code>HTTPS</code></li><li><code>Android</code>&#x2F;<code>IOS</code></li></ol><h3 id="四阶段"><a href="#四阶段" class="headerlink" title="四阶段"></a>四阶段</h3><ol><li>界面美化</li></ol><h2 id="难点目标"><a href="#难点目标" class="headerlink" title="难点目标"></a>难点目标</h2><ol><li><code>Android/IOS</code>离线推送</li><li>多节点时服务治理</li></ol><h1 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h1><p><strong>后台管理系统</strong>：指的是<code>IM</code>全局管理系统，包括租户管理、租户的应用管理等。</p><p><strong>应用管理系统</strong>：指的是<code>IM</code>租户管理当前租户应用的系统。</p><p><strong>应用</strong>：指的是租户创建的<code>IM</code>应用，<code>IM</code>允许跨应用之间的通信，<code>IM-Chat</code>则不允许跨应用添加好友。</p><h1 id="系统功能"><a href="#系统功能" class="headerlink" title="系统功能"></a>系统功能</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://github.com/ChenYilong/iOSBlog/tree/master/Tips/%E5%9F%BA%E4%BA%8EWebsocket%E7%9A%84IM%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E6%8A%80%E6%9C%AF"><strong>基于Websocket的IM即时通讯技术</strong></a></p><p><a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/20837104">软件体系结构分析方法</a></p></blockquote><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/eb63d0bf/">https://github.com/maxzhao-it/blog/post/eb63d0bf/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;为什么要做一个&lt;code&gt;IM&lt;/code&gt;？这个想法是从一个聊天项目开始，公司原来的聊天项目已破败不堪，继续优化不如重构。经过一番了解，决
      
    
    </summary>
    
    
      <category term="IM" scheme="https://github.com/maxzhao-it/blog/categories/IM/"/>
    
    
      <category term="IM" scheme="https://github.com/maxzhao-it/blog/tags/IM/"/>
    
      <category term="架构" scheme="https://github.com/maxzhao-it/blog/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/61214/"/>
    <id>https://github.com/maxzhao-it/blog/post/61214/</id>
    <published>2022-07-04T06:50:22.570Z</published>
    <updated>2022-07-04T06:50:22.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 Window10 上安装 <code>Linux</code> 已经很方便了，下面简单记录一下安装 <code>WSL2</code></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="开启电脑的虚拟化支持"><a href="#开启电脑的虚拟化支持" class="headerlink" title="开启电脑的虚拟化支持"></a>开启电脑的虚拟化支持</h3><p>需要在 <code>BIOS</code> 中设置 <code>vm</code> 开启</p><h3 id="开启-Win10-子系统"><a href="#开启-Win10-子系统" class="headerlink" title="开启 Win10 子系统"></a>开启 Win10 子系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br></pre></td></tr></table></figure><h3 id="开启-Win10-虚拟化"><a href="#开启-Win10-虚拟化" class="headerlink" title="开启 Win10 虚拟化"></a>开启 Win10 虚拟化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure><h3 id="下载-Linux-Kernel"><a href="#下载-Linux-Kernel" class="headerlink" title="下载 Linux Kernel"></a>下载 <code>Linux Kernel</code></h3><p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">WSL2 Linux kernel update package for x64 machines</a></p><p>下载上面系统然后直接安装。</p><blockquote><p>ARM64 版本点击这里下载  <a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi">ARM64 package</a></p></blockquote><h3 id="把WSL2-设置为默认"><a href="#把WSL2-设置为默认" class="headerlink" title="把WSL2 设置为默认"></a>把WSL2 设置为默认</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><h3 id="安装-Linux-系统"><a href="#安装-Linux-系统" class="headerlink" title="安装 Linux 系统"></a>安装 Linux 系统</h3><p>打开 <a href="https://aka.ms/wslstore">Microsoft Store</a> ，搜索想要安装的系统</p><p>下面一些系统链接</p><ul><li><a href="https://www.microsoft.com/store/apps/9N9TNGVNDL3Q">Ubuntu 18.04 LTS</a></li><li><a href="https://www.microsoft.com/store/apps/9n6svws3rx71">Ubuntu 20.04 LTS</a></li><li><a href="https://www.microsoft.com/store/apps/9NJFZK00FGKV">openSUSE Leap 15.1</a></li><li><a href="https://www.microsoft.com/store/apps/9MZ3D1TRP8T1">SUSE Linux Enterprise Server 12 SP5</a></li><li><a href="https://www.microsoft.com/store/apps/9PN498VPMF3Z">SUSE Linux Enterprise Server 15 SP1</a></li><li><a href="https://www.microsoft.com/store/apps/9PKR34TNCV07">Kali Linux</a></li><li><a href="https://www.microsoft.com/store/apps/9MSVKQC78PK6">Debian GNU&#x2F;Linux</a></li><li><a href="https://www.microsoft.com/store/apps/9n6gdm4k2hnc">Fedora Remix for WSL</a></li><li><a href="https://www.microsoft.com/store/apps/9NV1GV1PXZ6P">Pengwin</a></li><li><a href="https://www.microsoft.com/store/apps/9N8LP0X93VCP">Pengwin Enterprise</a></li><li><a href="https://www.microsoft.com/store/apps/9p804crf0395">Alpine WSL</a></li></ul><p>我这里安装的 <code>Kail Linux</code></p><h3 id="运行安装的-Linux-系统"><a href="#运行安装的-Linux-系统" class="headerlink" title="运行安装的 Linux 系统"></a>运行安装的 Linux 系统</h3><p>第一次运行会安装，有如下输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Installing, this may take a few minutes..</span><br></pre></td></tr></table></figure><p>安装结束后需要配置名称</p><p>安装结束</p><h2 id="安装-Window-终端"><a href="#安装-Window-终端" class="headerlink" title="安装 Window 终端"></a>安装 Window 终端</h2><p>Windows终端支持多个选项卡(在多个Linux命令行、Windows命令提示符、PowerShell、Azure CLI等之间快速切换)，创建自定义键绑定(打开或关闭选项卡的快捷键，复制粘贴等)，使用搜索功能，和自定义主题(配色方案、字体样式和大小、背景图像&#x2F;模糊&#x2F;透明)。</p><p><a href="https://docs.microsoft.com/en-us/windows/terminal/get-started">Install Windows Terminal</a>.</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/61214/">https://github.com/maxzhao-it/blog/post/61214/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在 Window10 上安装 &lt;code&gt;Linux&lt;/code&gt; 已经很方便了，下面简单记录一下安装 &lt;code&gt;WSL2&lt;/code&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/2660/"/>
    <id>https://github.com/maxzhao-it/blog/post/2660/</id>
    <published>2022-07-04T06:50:22.570Z</published>
    <updated>2022-07-04T06:50:22.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 Window10 上安装 <code>Linux</code> 已经很方便了，但是很多镜像是在 <code>C:\Users\maxzhao\AppData\Local\Docker</code>目录下的。</p><h2 id="修改路径"><a href="#修改路径" class="headerlink" title="修改路径"></a>修改路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭 Docker 服务</span></span><br><span class="line"><span class="built_in">cd</span> C:\Users\maxzhao\AppData\Local\Docker</span><br><span class="line"><span class="comment"># 把 C:\Users\maxzhao\AppData\Local\Docker 复制到 D:\Docker</span></span><br><span class="line">mklink /J Docker D:\Docker</span><br><span class="line"><span class="comment"># 开启Docker服务</span></span><br></pre></td></tr></table></figure><blockquote><p><code>maxzhao</code>为当前用户名</p></blockquote><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/2660/">https://github.com/maxzhao-it/blog/post/2660/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在 Window10 上安装 &lt;code&gt;Linux&lt;/code&gt; 已经很方便了，但是很多镜像是在 &lt;code&gt;C:\Users\maxzh
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/10bb53e3/"/>
    <id>https://github.com/maxzhao-it/blog/post/10bb53e3/</id>
    <published>2022-07-04T06:50:22.565Z</published>
    <updated>2022-07-28T09:42:25.450Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a><code>Java</code></h2><blockquote></blockquote><p>下载：<a href="https://az764295.vo.msecnd.net/stable/dfd34e8260c270da74b5c2d86d61aee4b6d56977/VSCodeUserSetup-x64-1.66.2.exe"><code>VSCode</code></a></p><blockquote><p>下载插件：</p><ul><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/java/1.5.0/vspackage?targetPlatform=win32-x64"><code>Java</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-debug/0.40.2022041411/vspackage"><code>Debug Java</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-test/0.35.2022042302/vspackage"><code>Test Java</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-maven/0.35.2022042603/vspackage"><code>Maven</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-dependency/0.19.2022042300/vspackage"><code>Maven Dependency</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/GabrielBB/vsextensions/vscode-lombok/1.0.1/vspackage"><code>Lombok</code></a></li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&quot;java.configuration.runtimes&quot;: [</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;JavaSE-1.8&quot;,</span><br><span class="line">    &quot;path&quot;: &quot;/path/to/jdk-8&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;JavaSE-11&quot;,</span><br><span class="line">    &quot;path&quot;: &quot;/path/to/jdk-11&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;JavaSE-17&quot;,</span><br><span class="line">    &quot;path&quot;: &quot;/path/to/jdk-17&quot;,</span><br><span class="line">    &quot;default&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="代码提示"><a href="#代码提示" class="headerlink" title="代码提示"></a>代码提示</h2><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/VisualStudioExptTeam/vsextensions/vscodeintellicode/1.2.20/vspackage"><code>IntelliCode</code></a></p><h2 id="SpringBoot支持"><a href="#SpringBoot支持" class="headerlink" title="SpringBoot支持"></a><code>SpringBoot</code>支持</h2><blockquote><p>下载:</p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/Pivotal/vsextensions/vscode-spring-boot/1.33.0/vspackage"><code>spring-boot</code></a></p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-spring-initializr/0.9.2022032503/vspackage"><code>spring-initializr</code></a></p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-spring-boot-dashboard/0.3.2022042900/vspackage"><code>spring-boot-dashboard</code></a></p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/Pivotal/vsextensions/vscode-boot-dev-pack/0.1.0/vspackage"><code>boot-dev-pack</code></a></p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-pack/0.22.2022042300/vspackage"><code>java-pack</code></a></p></blockquote><h2 id="SQLTools支持"><a href="#SQLTools支持" class="headerlink" title="SQLTools支持"></a><code>SQLTools</code>支持</h2><blockquote><p>下载:</p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/mtxr/vsextensions/sqltools/0.23.0/vspackage"><code>SQLTools</code></a></p></blockquote><h2 id="Markdown支持"><a href="#Markdown支持" class="headerlink" title="Markdown支持"></a><code>Markdown</code>支持</h2><blockquote><p>下载:</p><ul><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/DavidAnson/vsextensions/vscode-markdownlint/0.47.0/vspackage"><code>MarkdownLint</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/Oracle/vsextensions/oracledevtools/21.4.0/vspackage"><code>Oracle Developer Tools</code></a></li></ul></blockquote><h2 id="HTML-CSS支持"><a href="#HTML-CSS支持" class="headerlink" title="HTML\CSS支持"></a><code>HTML\CSS</code>支持</h2><blockquote><p>下载：</p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ecmel/vsextensions/vscode-html-css/1.11.0/vspackage"><code>HTML\CSS</code></a></p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ecmel/vsextensions/vscode-html-css/1.11.0/vspackage"><code>HTML CSS Support</code></a></p></blockquote><p>自动补全：<a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/formulahendry/vsextensions/auto-close-tag/0.5.14/vspackage"><code>Auto Close Tag</code></a></p><blockquote></blockquote><p>同步修改闭合标签：<a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/formulahendry/vsextensions/auto-rename-tag/0.1.10/vspackage"><code>Auto Rename Tag</code></a></p><blockquote></blockquote><p>路径提示：<a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/christian-kohler/vsextensions/path-intellisense/2.8.0/vspackage"><code>Path Intellisense</code></a></p><blockquote><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/techer/vsextensions/open-in-browser/2.0.0/vspackage"><code>Open in Browser</code></a></p></blockquote><p>自动刷新：<a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ritwickdey/vsextensions/LiveServer/5.7.5/vspackage"><code>Live Server</code></a></p><h2 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a><code>ESLint</code></h2><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/dbaeumer/vsextensions/vscode-eslint/2.2.3/vspackage"><code>ESLint</code></a></p><h2 id="Debugger-for-Chrome"><a href="#Debugger-for-Chrome" class="headerlink" title="Debugger for Chrome"></a><code>Debugger for Chrome</code></h2><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/msjsdiag/vsextensions/debugger-for-chrome/4.13.0/vspackage"><code>Debugger for Chrome</code></a></p><h2 id="Git-增强"><a href="#Git-增强" class="headerlink" title="Git 增强"></a><code>Git</code> 增强</h2><ul><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/eamodio/vsextensions/gitlens/12.0.6/vspackage"><code>GitLens</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/donjayamanne/vsextensions/githistory/0.6.19/vspackage"><code>Git History</code></a></li></ul><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a><code>Vue</code></h2><ul><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/octref/vsextensions/vetur/0.35.0/vspackage"><code>Vetur</code></a></li></ul><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a><code>npm</code></h2><ul><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/eg2/vsextensions/vscode-npm-script/0.3.24/vspackage"><code>npm</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/christian-kohler/vsextensions/npm-intellisense/1.4.1/vspackage"><code>npm Intellisense</code></a></li><li><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/traBpUkciP/vsextensions/vscode-npm-scripts/0.2.1/vspackage"><code>NPM-Scripts</code></a></li></ul><h2 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a><code>PowerShell</code></h2><blockquote><p>下载：</p><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/PowerShell/2021.12.0/vspackage"><code>PowerShell</code></a></p></blockquote><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/zhuangtongfa/vsextensions/Material-theme/3.13.24/vspackage"><code>One Dark Pro</code></a></p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a><code>Docker</code></h2><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-azuretools/vsextensions/vscode-docker/1.22.0/vspackage"><code>Docker</code></a></p><h2 id="Angular-Language-Service"><a href="#Angular-Language-Service" class="headerlink" title="Angular Language Service"></a><code>Angular Language Service</code></h2><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/Angular/vsextensions/ng-template/13.3.1/vspackage"><code>Angular Language Service</code></a></p><h2 id="简体中文"><a href="#简体中文" class="headerlink" title="简体中文"></a>简体中文</h2><p><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/MS-CEINTL/vsextensions/vscode-language-pack-zh-hans/1.67.1/vspackage"><code>Chinese (Simplified) </code></a></p><h2 id="Microsoft-Edge-Tools"><a href="#Microsoft-Edge-Tools" class="headerlink" title="Microsoft Edge Tools"></a><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-edgedevtools/vsextensions/vscode-edge-devtools/1.4.8/vspackage"><code>Microsoft Edge Tools</code></a></h2><h2 id="Debugger-for-Firefox"><a href="#Debugger-for-Firefox" class="headerlink" title="Debugger for Firefox"></a><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/firefox-devtools/vsextensions/vscode-firefox-debug/2.9.6/vspackage"><code>Debugger for Firefox</code></a></h2><h2 id="IntelliJ-IDEA-Keybindings"><a href="#IntelliJ-IDEA-Keybindings" class="headerlink" title="IntelliJ IDEA Keybindings"></a><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/k--kato/vsextensions/intellij-idea-keybindings/1.5.1/vspackage"><code>IntelliJ IDEA Keybindings</code></a></h2><h2 id="Dart"><a href="#Dart" class="headerlink" title="Dart"></a><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/Dart-Code/vsextensions/dart-code/3.39.20220411/vspackage"><code>Dart</code></a></h2><h2 id="ES7-React-Redux-React-Native-snippets"><a href="#ES7-React-Redux-React-Native-snippets" class="headerlink" title="ES7+ React/Redux/React-Native snippets"></a><a href="https://marketplace.visualstudio.com/_apis/public/gallery/publishers/dsznajder/vsextensions/es7-react-js-snippets/4.4.3/vspackage"><code>ES7+ React/Redux/React-Native snippets</code></a></h2><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/10bb53e3/">https://github.com/maxzhao-it/blog/post/10bb53e3/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;&lt;code&gt;Java&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;下载：&lt;a href=&quot;https://az
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/35851/"/>
    <id>https://github.com/maxzhao-it/blog/post/35851/</id>
    <published>2022-07-04T06:50:22.565Z</published>
    <updated>2022-07-04T06:50:22.565Z</updated>
    
    <content type="html"><![CDATA[<p>压力测试工具 wrk</p><p>TODO study</p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/35851/">https://github.com/maxzhao-it/blog/post/35851/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;压力测试工具 wrk&lt;/p&gt;
&lt;p&gt;TODO study&lt;/p&gt;
&lt;p&gt;本文地址： &lt;a href=&quot;https://github.com/maxzhao-it/blog/post/35851/&quot;&gt;https://github.com/maxzhao-it/blog/pos
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/22610/"/>
    <id>https://github.com/maxzhao-it/blog/post/22610/</id>
    <published>2022-07-04T06:50:22.565Z</published>
    <updated>2022-07-04T06:50:22.566Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://sp0.baidu.com/8aQDcjqpAAV3otqbppnN2DJv/api.php?resource_id=28204&amp;from_mid=1&amp;format=json&amp;ie=utf-8&amp;oe=utf-8&amp;query=%E6%88%90%E8%AF%AD%E5%A4%A7%E5%85%A8&amp;sort_type=1&amp;pn=0&amp;rn=90&amp;cb=jQuery110207830149056157827_1618483972393&amp;_=1618483972464">https://sp0.baidu.com/8aQDcjqpAAV3otqbppnN2DJv/api.php?resource_id=28204&amp;from_mid=1&amp;format=json&amp;ie=utf-8&amp;oe=utf-8&amp;query=%E6%88%90%E8%AF%AD%E5%A4%A7%E5%85%A8&amp;sort_type=1&amp;pn=0&amp;rn=90&amp;cb=jQuery110207830149056157827_1618483972393&amp;_=1618483972464</a></p><p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/22610/">https://github.com/maxzhao-it/blog/post/22610/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://sp0.baidu.com/8aQDcjqpAAV3otqbppnN2DJv/api.php?resource_id=28204&amp;amp;from_mid=1&amp;amp;format=json&amp;amp;ie=utf-8&amp;amp;oe=utf-
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/maxzhao-it/blog/post/243cf737/"/>
    <id>https://github.com/maxzhao-it/blog/post/243cf737/</id>
    <published>2022-07-04T06:50:22.565Z</published>
    <updated>2022-07-04T06:50:22.565Z</updated>
    
    <content type="html"><![CDATA[<p>本文地址： <a href="https://github.com/maxzhao-it/blog/post/243cf737/">https://github.com/maxzhao-it/blog/post/243cf737/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文地址： &lt;a href=&quot;https://github.com/maxzhao-it/blog/post/243cf737/&quot;&gt;https://github.com/maxzhao-it/blog/post/243cf737/&lt;/a&gt; &lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
